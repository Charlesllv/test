cscope 15 $HOME/Ê°åÈù¢/chat_room               0000375294
	@Client/Common/Common.c

8 
	~<°dio.h
>

9 
	~<°rög.h
>

10 
	~<°dlib.h
>

11 
	~"Comm⁄.h
"

13 
	gmy_muãx
 = 0;

17 
	$My_Lock
(){

18 
my_muãx
 == 0);

19 
	}
}

21 
	$My_U∆ock
(){

22 
my_muãx
 = 0;

23 
	}
}

24 *
	$sgës
(*
°r
,
Àn
){

25 
	`fgës
(
°r
,
Àn
,
°dö
);

26 if(
°r
[
	`°æí
(str)-1]=='\n'){

27 
°r
[
	`°æí
(str)-1]='\0';

29  
°r
;

30 
	}
}

31 
	$ffÊush
(){

32 
ch
;

33 (
ch
=
	`gëch¨
())!='\n' && ch!=
EOF
){

36 
	}
}

44 
	$D©eCmp
(
u£r_d©e_t
 
dt1
, u£r_d©e_à
dt2
) {

45 i‡(
dt1
.
yór
 < 
dt2
.year)

47 i‡(
dt1
.
yór
 =
dt2
.yó∏&& dt1.
m⁄th
 < dt2.month)

49 i‡(
dt1
.
yór
 =
dt2
.yó∏&& dt1.
m⁄th
 =dt2.m⁄th && dt1.
day
 < dt2.day)

51 i‡(
dt1
.
yór
 =
dt2
.yó∏&& dt1.
m⁄th
 == dt2.month

52 && 
dt1
.
day
 =
dt2
.day)

56 
	}
}

59 
u£r_d©e_t
 
	$D©eNow
() {

60 
u£r_d©e_t
 
curD©e
;

61 
time_t
 
now
;

62 
tm
 *
timeNow
;

63 
	`time
(&
now
);

64 
timeNow
 = 
	`loˇ…ime
(&
now
);

65 
curD©e
.
yór
=
timeNow
->
tm_yór
+1900;

66 
curD©e
.
m⁄th
=
timeNow
->
tm_m⁄
+1;

67 
curD©e
.
day
=
timeNow
->
tm_mday
;

69  
curD©e
;

70 
	}
}

73 
u£r_time_t
 
	$TimeNow
(){

74 
u£r_time_t
 
curTime
;

75 
time_t
 
now
;

76 
tm
 *
timeNow
;

77 
	`time
(&
now
);

78 
timeNow
 = 
	`loˇ…ime
(&
now
);

79 
curTime
.
hour
=
timeNow
->
tm_hour
;

80 
curTime
.
möuã
=
timeNow
->
tm_mö
;

81 
curTime
.
£c⁄d
=
timeNow
->
tm_£c
;

82  
curTime
;

83 
	}
}

	@Client/Common/Common.h

8 #i‚de‡
_COMMON_H


9 
	#_COMMON_H


	)

10 
	~<°dio.h
>

11 
	~<f˙é.h
>

12 
	~<time.h
>

13 
	~<b64/cdecode.h
>

14 
	~<b64/˚ncode.h
>

17 
	myór
;

18 
	mm⁄th
;

19 
	mday
;

20 }
	tu£r_d©e_t
;

23 
	mhour
;

24 
	mmöuã
;

25 
	m£c⁄d
;

26 }
	tu£r_time_t
;

29 
My_Lock
();

31 
My_U∆ock
();

35 *
sgës
(*
°r
,
Àn
);

38 
ffÊush
();

41 
D©eCmp
(
u£r_d©e_t
 
dt1
, u£r_d©e_à
dt2
);

44 
u£r_d©e_t
 
D©eNow
();

47 
u£r_time_t
 
TimeNow
();

	@Client/Common/List.h

17 #i‚de‡
LIST_H_


18 
	#LIST_H_


	)

20 
	~<°dlib.h
>

21 
	~<as£π.h
>

26 
	#Li°_Inô
(
li°
, 
li°_node_t
Ë{ \

	)

27 
	gli°
=(
li°_node_t
*)
mÆloc
((list_node_t)); \

28 (
	gli°
)->
	g√xt
=
NULL
; \

32 
	#Li°_Fªe
(
li°
, 
li°_node_t
Ë{ \

	)

33 
as£π
(
NULL
!=
li°
); \

34 
li°_node_t
 *
	gtmpPå
; \

35 
	gNULL
!=(
tmpPå
=(
li°
)->
√xt
)){ \

36 (
li°
)->
√xt
=
tmpPå
->next; \

37 
‰ì
(
tmpPå
); \

42 
	#Li°_De°roy
(
li°
, 
li°_node_t
Ë{ \

	)

43 
as£π
(
NULL
!=
li°
); \

44 
Li°_Fªe
(
li°
, 
li°_node_t
) \

45 
‰ì
(
li°
); \

46 (
	gli°
)=
NULL
; \

52 
	#Li°_F‹Each
(
li°
, 
curPos
Ë\

	)

53  
	gcurPos
 = (
li°
)->
√xt
; \

54 
	gcurPos
 !
NULL
; \

55 
	gcurPos
=
curPos
->
√xt
 \

61 
	#Li°_AddHód
(
li°
, 
√wNode
Ë{ \

	)

62 (
	g√wNode
)->
	g√xt
=(
li°
)->
√xt
; \

63 (
	gli°
)->
	g√xt
=
√wNode
; \

69 
	#Li°_AddTaû
(
li°
, 
curPos
 ,
√wNode
Ë{ \

	)

70 
	gcurPos
 = (
li°
); ;curPos=
curPos
->
√xt
){ \

71 if((
curPos
)->
√xt
 =
NULL
){ \

72 (
curPos
)->
√xt
 = (
√wNode
); \

80 
	#Li°_In£πBef‹e
(
node
, 
√wNode
Ë{ \

	)

81 (
	g√wNode
)->
	g¥ev
=(
node
)->
¥ev
; \

82 (
	gnode
)->
	g¥ev
->
	g√xt
=
√wNode
; \

83 (
	gnode
)->
	g¥ev
=
√wNode
; \

84 (
	g√wNode
)->
	g√xt
=
node
; \

88 
	#Li°_In£πA·î
(
node
, 
√wNode
Ë{ \

	)

89 (
	g√wNode
)->
	g√xt
=
node
->
√xt
; \

90 (
	gnode
)->
	g√xt
=
√wNode
; \

94 
	#Li°_IsEm±y
(
li°
Ë((÷i°Ë!
NULL
)

	)

98 
	#Li°_FªeNode
(
hód
 ,
node
,
li°_node_t
Ë{ \

	)

99 
as£π
(
NULL
!=
node
); \

100 if(
	gnode
 -> 
	g√xt
 !
NULL
){ \

101 
li°_node_t
 *
ãmp
 = 
node
->
√xt
; \

102 
mem˝y
(
node
,
ãmp
,(
li°_node_t
)); \

103 
‰ì
(
ãmp
); \

105 
li°_node_t
 *
	gãmp
 = 
hód
; \

106 
	gãmp
 -> 
	g√xt
 !
node
) \

107 
ãmp
 =Åem∞-> 
√xt
; \

108 
	gãmp
 -> 
	g√xt
 = 
NULL
; \

109 
‰ì
(
node
); \

110 
	gnode
 = 
NULL
; \

	@Client/Common/cJSON.c

26 
	~<°rög.h
>

27 
	~<°dio.h
>

28 
	~<m©h.h
>

29 
	~<°dlib.h
>

30 
	~<Êﬂt.h
>

31 
	~<limôs.h
>

32 
	~<˘y≥.h
>

33 
	~"cJSON.h
"

35 c⁄° *
	gï
;

37 c⁄° *
	$cJSON_GëEº‹På
(Ë{ 
ï
;
	}
}

39 
	$cJSON_°rˇ£cmp
(c⁄° *
s1
,c⁄° *
s2
)

41 i‡(!
s1
Ë (s1==
s2
)?0:1;if (!s2)  1;

42 ; 
	`tﬁowî
(*
s1
Ë=tﬁowî(*
s2
); ++s1, ++s2) if(*s1 == 0)  0;

43  
	`tﬁowî
(*(c⁄° *)
s1
Ë-Åﬁowî(*(c⁄° *)
s2
);

44 
	}
}

46 *(*
	gcJSON_mÆloc
)(
size_t
 
	gsz
Ë
mÆloc
;

47 (*
cJSON_‰ì
)(*
±r
Ë
‰ì
;

49 * 
	$cJSON_°rdup
(c⁄° * 
°r
)

51 
size_t
 
Àn
;

52 * 
c›y
;

54 
Àn
 = 
	`°æí
(
°r
) + 1;

55 i‡(!(
c›y
 = (*)
	`cJSON_mÆloc
(
Àn
)))  0;

56 
	`mem˝y
(
c›y
,
°r
,
Àn
);

57  
c›y
;

58 
	}
}

60 
	$cJSON_InôHooks
(
cJSON_Hooks
* 
hooks
)

62 i‡(!
hooks
) {

63 
cJSON_mÆloc
 = 
mÆloc
;

64 
cJSON_‰ì
 = 
‰ì
;

68 
cJSON_mÆloc
 = (
hooks
->
mÆloc_‚
)?hooks->mÆloc_‚:
mÆloc
;

69 
cJSON_‰ì
 = (
hooks
->
‰ì_‚
)?hooks->‰ì_‚:
‰ì
;

70 
	}
}

73 
cJSON
 *
	$cJSON_New_Iãm
()

75 
cJSON
* 
node
 = (cJSON*)
	`cJSON_mÆloc
((cJSON));

76 i‡(
node
Ë
	`mem£t
“ode,0,(
cJSON
));

77  
node
;

78 
	}
}

81 
	$cJSON_Dñëe
(
cJSON
 *
c
)

83 
cJSON
 *
√xt
;

84 
c
)

86 
√xt
=
c
->next;

87 i‡(!(
c
->
ty≥
&
cJSON_IsRe„ªn˚
Ë&& c->
chûd
Ë
	`cJSON_Dñëe
(c->child);

88 i‡(!(
c
->
ty≥
&
cJSON_IsRe„ªn˚
Ë&& c->
vÆue°rög
Ë
	`cJSON_‰ì
(c->valuestring);

89 i‡(!(
c
->
ty≥
&
cJSON_SåögIsC⁄°
Ë&& c->
°rög
Ë
	`cJSON_‰ì
(c->string);

90 
	`cJSON_‰ì
(
c
);

91 
c
=
√xt
;

93 
	}
}

96 c⁄° *
	$∑r£_numbî
(
cJSON
 *
ôem
,c⁄° *
num
)

98 
n
=0,
sign
=1,
sˇÀ
=0;
subsˇÀ
=0,
signsubsˇÀ
=1;

100 i‡(*
num
=='-'Ë
sign
=-1,num++;

101 i‡(*
num
=='0')Çum++;

102 i‡(*
num
>='1' && *num<='9'Ëdÿ
n
=(n*10.0)+(*num++ -'0'); *num>='0' && *num<='9');

103 i‡(*
num
=='.' &&Çum[1]>='0' &&Çum[1]<='9'Ë{num++; dÿ
n
=“*10.0)+(*num++ -'0'),
sˇÀ
--; *num>='0' && *num<='9');}

104 i‡(*
num
=='e' || *num=='E')

105 { 
num
++;i‡(*num=='+'Ënum++; i‡(*num=='-'Ë
signsubsˇÀ
=-1,num++;

106 *
num
>='0' && *num<='9'Ë
subsˇÀ
=(subscale*10)+(*num++ - '0');

109 
n
=
sign
*n*
	`pow
(10.0,(
sˇÀ
+
subsˇÀ
*
signsubsˇÀ
));

111 
ôem
->
vÆuedoubÀ
=
n
;

112 
ôem
->
vÆueöt
=()
n
;

113 
ôem
->
ty≥
=
cJSON_Numbî
;

114  
num
;

115 
	}
}

117 
	$pow2gt
 (
x
Ë{ --x; x|=x>>1; x|=x>>2; x|=x>>4; x|=x>>8; x|=x>>16;  x+1; 
	}
}

119 °ru˘ {*
	mbuf„r
; 
	mÀngth
; 
	moff£t
; } 
	t¥ötbuf„r
;

121 * 
	$ísuª
(
¥ötbuf„r
 *
p
,
√eded
)

123 *
√wbuf„r
;
√wsize
;

124 i‡(!
p
 || !p->
buf„r
)  0;

125 
√eded
+=
p
->
off£t
;

126 i‡(
√eded
<=
p
->
Àngth
ËÖ->
buf„r
+p->
off£t
;

128 
√wsize
=
	`pow2gt
(
√eded
);

129 
√wbuf„r
=(*)
	`cJSON_mÆloc
(
√wsize
);

130 i‡(!
√wbuf„r
Ë{
	`cJSON_‰ì
(
p
->
buf„r
);p->
Àngth
=0,p->buffer=0; 0;}

131 i‡(
√wbuf„r
Ë
	`mem˝y
“ewbuf„r,
p
->
buf„r
,p->
Àngth
);

132 
	`cJSON_‰ì
(
p
->
buf„r
);

133 
p
->
Àngth
=
√wsize
;

134 
p
->
buf„r
=
√wbuf„r
;

135  
√wbuf„r
+
p
->
off£t
;

136 
	}
}

138 
	$upd©e
(
¥ötbuf„r
 *
p
)

140 *
°r
;

141 i‡(!
p
 || !p->
buf„r
)  0;

142 
°r
=
p
->
buf„r
+p->
off£t
;

143  
p
->
off£t
+
	`°æí
(
°r
);

144 
	}
}

147 *
	$¥öt_numbî
(
cJSON
 *
ôem
,
¥ötbuf„r
 *
p
)

149 *
°r
=0;

150 
d
=
ôem
->
vÆuedoubÀ
;

151 i‡(
d
==0)

153 i‡(
p
Ë
°r
=
	`ísuª
(p,2);

154 
°r
=(*)
	`cJSON_mÆloc
(2);

155 i‡(
°r
Ë
	`°r˝y
(str,"0");

157 i‡(
	`Ábs
((()
ôem
->
vÆueöt
)-
d
)<=
DBL_EPSILON
 && d<=
INT_MAX
 && d>=
INT_MIN
)

159 i‡(
p
Ë
°r
=
	`ísuª
(p,21);

160 
°r
=(*)
	`cJSON_mÆloc
(21);

161 i‡(
°r
Ë
	`•rötf
(°r,"%d",
ôem
->
vÆueöt
);

165 i‡(
p
Ë
°r
=
	`ísuª
(p,64);

166 
°r
=(*)
	`cJSON_mÆloc
(64);

167 i‡(
°r
)

169 i‡(
	`Ábs
(
	`Êo‹
(
d
)-d)<=
DBL_EPSILON
 && fabs(d)<1.0e60)
	`•rötf
(
°r
,"%.0f",d);

170 i‡(
	`Ábs
(
d
)<1.0e-6 || fabs(d)>1.0e9Ë
	`•rötf
(
°r
,"%e",d);

171 
	`•rötf
(
°r
,"%f",
d
);

174  
°r
;

175 
	}
}

177 
	$∑r£_hex4
(c⁄° *
°r
)

179 
h
=0;

180 i‡(*
°r
>='0' && *°r<='9'Ë
h
+=(*str)-'0'; if (*str>='A' && *str<='F') h+=10+(*str)-'A'; if (*str>='a' && *str<='f') h+=10+(*str)-'a';  0;

181 
h
=h<<4;
°r
++;

182 i‡(*
°r
>='0' && *°r<='9'Ë
h
+=(*str)-'0'; if (*str>='A' && *str<='F') h+=10+(*str)-'A'; if (*str>='a' && *str<='f') h+=10+(*str)-'a';  0;

183 
h
=h<<4;
°r
++;

184 i‡(*
°r
>='0' && *°r<='9'Ë
h
+=(*str)-'0'; if (*str>='A' && *str<='F') h+=10+(*str)-'A'; if (*str>='a' && *str<='f') h+=10+(*str)-'a';  0;

185 
h
=h<<4;
°r
++;

186 i‡(*
°r
>='0' && *°r<='9'Ë
h
+=(*str)-'0'; if (*str>='A' && *str<='F') h+=10+(*str)-'A'; if (*str>='a' && *str<='f') h+=10+(*str)-'a';  0;

187  
h
;

188 
	}
}

191 c⁄° 
	gfú°ByãM¨k
[7] = { 0x00, 0x00, 0xC0, 0xE0, 0xF0, 0xF8, 0xFC };

192 c⁄° *
	$∑r£_°rög
(
cJSON
 *
ôem
,c⁄° *
°r
)

194 c⁄° *
±r
=
°r
+1;*
±r2
;*
out
;
Àn
=0;
uc
,
uc2
;

195 i‡(*
°r
!='\"'Ë{
ï
=str; 0;}

197 *
±r
!='\"' && *±∏&& ++
Àn
) if (*ptr++ == '\\')Ötr++;

199 
out
=(*)
	`cJSON_mÆloc
(
Àn
+1);

200 i‡(!
out
)  0;

202 
±r
=
°r
+1;
±r2
=
out
;

203 *
±r
!='\"' && *ptr)

205 i‡(*
±r
!='\\'Ë*
±r2
++=*ptr++;

208 
±r
++;

209 *
±r
)

211 'b': *
±r2
++='\b'; ;

212 'f': *
±r2
++='\f'; ;

213 'n': *
±r2
++='\n'; ;

214 'r': *
±r2
++='\r'; ;

215 't': *
±r2
++='\t'; ;

217 
uc
=
	`∑r£_hex4
(
±r
+1);ptr+=4;

219 i‡((
uc
>=0xDC00 && uc<=0xDFFF) || uc==0) ;

221 i‡(
uc
>=0xD800 && uc<=0xDBFF)

223 i‡(
±r
[1]!='\\' ||Ötr[2]!='u') ;

224 
uc2
=
	`∑r£_hex4
(
±r
+3);ptr+=6;

225 i‡(
uc2
<0xDC00 || uc2>0xDFFF) ;

226 
uc
=0x10000 + (((uc&0x3FF)<<10Ë| (
uc2
&0x3FF));

229 
Àn
=4;i‡(
uc
<0x80ËÀn=1;i‡(uc<0x800ËÀn=2;i‡(uc<0x10000ËÀn=3; 
±r2
+=len;

231 
Àn
) {

232 4: *--
±r2
 =((
uc
 | 0x80) & 0xBF); uc >>= 6;

233 3: *--
±r2
 =((
uc
 | 0x80) & 0xBF); uc >>= 6;

234 2: *--
±r2
 =((
uc
 | 0x80) & 0xBF); uc >>= 6;

235 1: *--
±r2
 =(
uc
 | 
fú°ByãM¨k
[
Àn
]);

237 
±r2
+=
Àn
;

239 : *
±r2
++=*
±r
; ;

241 
±r
++;

244 *
±r2
=0;

245 i‡(*
±r
=='\"')Ötr++;

246 
ôem
->
vÆue°rög
=
out
;

247 
ôem
->
ty≥
=
cJSON_Såög
;

248  
±r
;

249 
	}
}

252 *
	$¥öt_°rög_±r
(c⁄° *
°r
,
¥ötbuf„r
 *
p
)

254 c⁄° *
±r
;*
±r2
,*
out
;
Àn
=0,
Êag
=0;
tokí
;

256 
±r
=
°r
;*±r;±r++Ë
Êag
|=((*ptr>0 && *ptr<32)||(*ptr=='\"')||(*ptr=='\\'))?1:0;

257 i‡(!
Êag
)

259 
Àn
=
±r
-
°r
;

260 i‡(
p
Ë
out
=
	`ísuª
’,
Àn
+3);

261 
out
=(*)
	`cJSON_mÆloc
(
Àn
+3);

262 i‡(!
out
)  0;

263 
±r2
=
out
;*ptr2++='\"';

264 
	`°r˝y
(
±r2
,
°r
);

265 
±r2
[
Àn
]='\"';

266 
±r2
[
Àn
+1]=0;

267  
out
;

270 i‡(!
°r
)

272 i‡(
p
Ë
out
=
	`ísuª
(p,3);

273 
out
=(*)
	`cJSON_mÆloc
(3);

274 i‡(!
out
)  0;

275 
	`°r˝y
(
out
,"\"\"");

276  
out
;

278 
±r
=
°r
;(
tokí
=*±rË&& ++
Àn
Ë{i‡(
	`°rchr
("\"\\\b\f\n\r\t",token))Üen++; if (token<32)Üen+=5;ptr++;}

280 i‡(
p
Ë
out
=
	`ísuª
’,
Àn
+3);

281 
out
=(*)
	`cJSON_mÆloc
(
Àn
+3);

282 i‡(!
out
)  0;

284 
±r2
=
out
;
±r
=
°r
;

285 *
±r2
++='\"';

286 *
±r
)

288 i‡(()*
±r
>31 && *±r!='\"' && *±r!='\\'Ë*
±r2
++=*ptr++;

291 *
±r2
++='\\';

292 
tokí
=*
±r
++)

294 '\\': *
±r2
++='\\'; ;

295 '\"': *
±r2
++='\"'; ;

296 '\b': *
±r2
++='b'; ;

297 '\f': *
±r2
++='f'; ;

298 '\n': *
±r2
++='n'; ;

299 '\r': *
±r2
++='r'; ;

300 '\t': *
±r2
++='t'; ;

301 : 
	`•rötf
(
±r2
,"u%04x",
tokí
);ptr2+=5; ;

305 *
±r2
++='\"';*ptr2++=0;

306  
out
;

307 
	}
}

309 *
	$¥öt_°rög
(
cJSON
 *
ôem
,
¥ötbuf„r
 *
p
Ë{ 
	`¥öt_°rög_±r
(ôem->
vÆue°rög
,p);
	}
}

312 c⁄° *
∑r£_vÆue
(
cJSON
 *
ôem
,c⁄° *
vÆue
);

313 *
¥öt_vÆue
(
cJSON
 *
ôem
,
dïth
,
fmt
,
¥ötbuf„r
 *
p
);

314 c⁄° *
∑r£_¨øy
(
cJSON
 *
ôem
,c⁄° *
vÆue
);

315 *
¥öt_¨øy
(
cJSON
 *
ôem
,
dïth
,
fmt
,
¥ötbuf„r
 *
p
);

316 c⁄° *
∑r£_obje˘
(
cJSON
 *
ôem
,c⁄° *
vÆue
);

317 *
¥öt_obje˘
(
cJSON
 *
ôem
,
dïth
,
fmt
,
¥ötbuf„r
 *
p
);

320 c⁄° *
	$skù
(c⁄° *
ö
Ë{ö && *ö && ()*ö<=32Ëö++;  in;
	}
}

323 
cJSON
 *
	$cJSON_P¨£WôhO±s
(c⁄° *
vÆue
,c⁄° **
ªtu∫_∑r£_íd
,
ªquúe_nuŒ_ãrmö©ed
)

325 c⁄° *
íd
=0;

326 
cJSON
 *
c
=
	`cJSON_New_Iãm
();

327 
ï
=0;

328 i‡(!
c
)  0;

330 
íd
=
	`∑r£_vÆue
(
c
,
	`skù
(
vÆue
));

331 i‡(!
íd
Ë{
	`cJSON_Dñëe
(
c
); 0;}

334 i‡(
ªquúe_nuŒ_ãrmö©ed
Ë{
íd
=
	`skù
”nd);i‡(*ídË{
	`cJSON_Dñëe
(
c
);
ï
=end; 0;}}

335 i‡(
ªtu∫_∑r£_íd
Ë*ªtu∫_∑r£_íd=
íd
;

336  
c
;

337 
	}
}

339 
cJSON
 *
	$cJSON_P¨£
(c⁄° *
vÆue
Ë{ 
	`cJSON_P¨£WôhO±s
(vÆue,0,0);
	}
}

342 *
	$cJSON_Pröt
(
cJSON
 *
ôem
Ë{ 
	`¥öt_vÆue
(ôem,0,1,0);
	}
}

343 *
	$cJSON_PrötUnf‹m©ãd
(
cJSON
 *
ôem
Ë{ 
	`¥öt_vÆue
(ôem,0,0,0);
	}
}

345 *
	$cJSON_PrötBuf„ªd
(
cJSON
 *
ôem
,
¥ebuf„r
,
fmt
)

347 
¥ötbuf„r
 
p
;

348 
p
.
buf„r
=(*)
	`cJSON_mÆloc
(
¥ebuf„r
);

349 
p
.
Àngth
=
¥ebuf„r
;

350 
p
.
off£t
=0;

351  
	`¥öt_vÆue
(
ôem
,0,
fmt
,&
p
);

352  
p
.
buf„r
;

353 
	}
}

357 c⁄° *
	$∑r£_vÆue
(
cJSON
 *
ôem
,c⁄° *
vÆue
)

359 i‡(!
vÆue
)  0;

360 i‡(!
	`°∫cmp
(
vÆue
,"nuŒ",4)Ë{ 
ôem
->
ty≥
=
cJSON_NULL
;  value+4; }

361 i‡(!
	`°∫cmp
(
vÆue
,"Ál£",5)Ë{ 
ôem
->
ty≥
=
cJSON_FÆ£
;  value+5; }

362 i‡(!
	`°∫cmp
(
vÆue
,"åue",4)Ë{ 
ôem
->
ty≥
=
cJSON_True
; iãm->
vÆueöt
=1;  value+4; }

363 i‡(*
vÆue
=='\"'Ë{  
	`∑r£_°rög
(
ôem
,value); }

364 i‡(*
vÆue
=='-' || (*vÆue>='0' && *vÆue<='9')Ë{  
	`∑r£_numbî
(
ôem
,value); }

365 i‡(*
vÆue
=='['Ë{  
	`∑r£_¨øy
(
ôem
,value); }

366 i‡(*
vÆue
=='{'Ë{  
	`∑r£_obje˘
(
ôem
,value); }

368 
ï
=
vÆue
; 0;

369 
	}
}

372 *
	$¥öt_vÆue
(
cJSON
 *
ôem
,
dïth
,
fmt
,
¥ötbuf„r
 *
p
)

374 *
out
=0;

375 i‡(!
ôem
)  0;

376 i‡(
p
)

378 (
ôem
->
ty≥
)&255)

380 
cJSON_NULL
: {
out
=
	`ísuª
(
p
,5); i‡(outË
	`°r˝y
(out,"null"); ;}

381 
cJSON_FÆ£
: {
out
=
	`ísuª
(
p
,6); i‡(outË
	`°r˝y
(out,"false"); ;}

382 
cJSON_True
: {
out
=
	`ísuª
(
p
,5); i‡(outË
	`°r˝y
(out,"true"); ;}

383 
cJSON_Numbî
: 
out
=
	`¥öt_numbî
(
ôem
,
p
);;

384 
cJSON_Såög
: 
out
=
	`¥öt_°rög
(
ôem
,
p
);;

385 
cJSON_Aºay
: 
out
=
	`¥öt_¨øy
(
ôem
,
dïth
,
fmt
,
p
);;

386 
cJSON_Obje˘
: 
out
=
	`¥öt_obje˘
(
ôem
,
dïth
,
fmt
,
p
);;

391 (
ôem
->
ty≥
)&255)

393 
cJSON_NULL
: 
out
=
	`cJSON_°rdup
("null"); ;

394 
cJSON_FÆ£
: 
out
=
	`cJSON_°rdup
("false");;

395 
cJSON_True
: 
out
=
	`cJSON_°rdup
("true"); ;

396 
cJSON_Numbî
: 
out
=
	`¥öt_numbî
(
ôem
,0);;

397 
cJSON_Såög
: 
out
=
	`¥öt_°rög
(
ôem
,0);;

398 
cJSON_Aºay
: 
out
=
	`¥öt_¨øy
(
ôem
,
dïth
,
fmt
,0);;

399 
cJSON_Obje˘
: 
out
=
	`¥öt_obje˘
(
ôem
,
dïth
,
fmt
,0);;

402  
out
;

403 
	}
}

406 c⁄° *
	$∑r£_¨øy
(
cJSON
 *
ôem
,c⁄° *
vÆue
)

408 
cJSON
 *
chûd
;

409 i‡(*
vÆue
!='['Ë{
ï
=value; 0;}

411 
ôem
->
ty≥
=
cJSON_Aºay
;

412 
vÆue
=
	`skù
(value+1);

413 i‡(*
vÆue
==']')  value+1;

415 
ôem
->
chûd
=chûd=
	`cJSON_New_Iãm
();

416 i‡(!
ôem
->
chûd
)  0;

417 
vÆue
=
	`skù
(
	`∑r£_vÆue
(
chûd
,skip(value)));

418 i‡(!
vÆue
)  0;

420 *
vÆue
==',')

422 
cJSON
 *
√w_ôem
;

423 i‡(!(
√w_ôem
=
	`cJSON_New_Iãm
()))  0;

424 
chûd
->
√xt
=
√w_ôem
;√w_ôem->
¥ev
=child;child=new_item;

425 
vÆue
=
	`skù
(
	`∑r£_vÆue
(
chûd
,skip(value+1)));

426 i‡(!
vÆue
)  0;

429 i‡(*
vÆue
==']')  value+1;

430 
ï
=
vÆue
; 0;

431 
	}
}

434 *
	$¥öt_¨øy
(
cJSON
 *
ôem
,
dïth
,
fmt
,
¥ötbuf„r
 *
p
)

436 **
íåõs
;

437 *
out
=0,*
±r
,*
ªt
;
Àn
=5;

438 
cJSON
 *
chûd
=
ôem
->child;

439 
numíåõs
=0,
i
=0,
Áû
=0;

440 
size_t
 
tm∂í
=0;

443 
chûd
Ë
numíåõs
++,chûd=chûd->
√xt
;

445 i‡(!
numíåõs
)

447 i‡(
p
Ë
out
=
	`ísuª
(p,3);

448 
out
=(*)
	`cJSON_mÆloc
(3);

449 i‡(
out
Ë
	`°r˝y
(out,"[]");

450  
out
;

453 i‡(
p
)

456 
i
=
p
->
off£t
;

457 
±r
=
	`ísuª
(
p
,1);i‡(!±rË 0; *±r='[';Ö->
off£t
++;

458 
chûd
=
ôem
->child;

459 
chûd
 && !
Áû
)

461 
	`¥öt_vÆue
(
chûd
,
dïth
+1,
fmt
,
p
);

462 
p
->
off£t
=
	`upd©e
(p);

463 i‡(
chûd
->
√xt
Ë{
Àn
=
fmt
?2:1;
±r
=
	`ísuª
(
p
,Àn+1);i‡(!±rË 0;*±r++=',';if(fmt)*±r++=' ';*±r=0;p->
off£t
+=len;}

464 
chûd
=chûd->
√xt
;

466 
±r
=
	`ísuª
(
p
,2);if (!ptr)  0; *ptr++=']';*ptr=0;

467 
out
=(
p
->
buf„r
)+
i
;

472 
íåõs
=(**)
	`cJSON_mÆloc
(
numíåõs
*(*));

473 i‡(!
íåõs
)  0;

474 
	`mem£t
(
íåõs
,0,
numíåõs
*(*));

476 
chûd
=
ôem
->child;

477 
chûd
 && !
Áû
)

479 
ªt
=
	`¥öt_vÆue
(
chûd
,
dïth
+1,
fmt
,0);

480 
íåõs
[
i
++]=
ªt
;

481 i‡(
ªt
Ë
Àn
+=
	`°æí
‘ë)+2+(
fmt
?1:0); 
Áû
=1;

482 
chûd
=chûd->
√xt
;

486 i‡(!
Áû
Ë
out
=(*)
	`cJSON_mÆloc
(
Àn
);

488 i‡(!
out
Ë
Áû
=1;

491 i‡(
Áû
)

493 
i
=0;i<
numíåõs
;i++Ëi‡(
íåõs
[i]Ë
	`cJSON_‰ì
(entries[i]);

494 
	`cJSON_‰ì
(
íåõs
);

499 *
out
='[';

500 
±r
=
out
+1;*ptr=0;

501 
i
=0;i<
numíåõs
;i++)

503 
tm∂í
=
	`°æí
(
íåõs
[
i
]);
	`mem˝y
(
±r
,entries[i],tmplen);ptr+=tmplen;

504 i‡(
i
!=
numíåõs
-1Ë{*
±r
++=',';if(
fmt
)*ptr++=' ';*ptr=0;}

505 
	`cJSON_‰ì
(
íåõs
[
i
]);

507 
	`cJSON_‰ì
(
íåõs
);

508 *
±r
++=']';*ptr++=0;

510  
out
;

511 
	}
}

514 c⁄° *
	$∑r£_obje˘
(
cJSON
 *
ôem
,c⁄° *
vÆue
)

516 
cJSON
 *
chûd
;

517 i‡(*
vÆue
!='{'Ë{
ï
=value; 0;}

519 
ôem
->
ty≥
=
cJSON_Obje˘
;

520 
vÆue
=
	`skù
(value+1);

521 i‡(*
vÆue
=='}')  value+1;

523 
ôem
->
chûd
=chûd=
	`cJSON_New_Iãm
();

524 i‡(!
ôem
->
chûd
)  0;

525 
vÆue
=
	`skù
(
	`∑r£_°rög
(
chûd
,skip(value)));

526 i‡(!
vÆue
)  0;

527 
chûd
->
°rög
=chûd->
vÆue°rög
;child->valuestring=0;

528 i‡(*
vÆue
!=':'Ë{
ï
=value; 0;}

529 
vÆue
=
	`skù
(
	`∑r£_vÆue
(
chûd
,skip(value+1)));

530 i‡(!
vÆue
)  0;

532 *
vÆue
==',')

534 
cJSON
 *
√w_ôem
;

535 i‡(!(
√w_ôem
=
	`cJSON_New_Iãm
()))  0;

536 
chûd
->
√xt
=
√w_ôem
;√w_ôem->
¥ev
=child;child=new_item;

537 
vÆue
=
	`skù
(
	`∑r£_°rög
(
chûd
,skip(value+1)));

538 i‡(!
vÆue
)  0;

539 
chûd
->
°rög
=chûd->
vÆue°rög
;child->valuestring=0;

540 i‡(*
vÆue
!=':'Ë{
ï
=value; 0;}

541 
vÆue
=
	`skù
(
	`∑r£_vÆue
(
chûd
,skip(value+1)));

542 i‡(!
vÆue
)  0;

545 i‡(*
vÆue
=='}')  value+1;

546 
ï
=
vÆue
; 0;

547 
	}
}

550 *
	$¥öt_obje˘
(
cJSON
 *
ôem
,
dïth
,
fmt
,
¥ötbuf„r
 *
p
)

552 **
íåõs
=0,**
«mes
=0;

553 *
out
=0,*
±r
,*
ªt
,*
°r
;
Àn
=7,
i
=0,
j
;

554 
cJSON
 *
chûd
=
ôem
->child;

555 
numíåõs
=0,
Áû
=0;

556 
size_t
 
tm∂í
=0;

558 
chûd
Ë
numíåõs
++,chûd=chûd->
√xt
;

560 i‡(!
numíåõs
)

562 i‡(
p
Ë
out
=
	`ísuª
’,
fmt
?
dïth
+4:3);

563 
out
=(*)
	`cJSON_mÆloc
(
fmt
?
dïth
+4:3);

564 i‡(!
out
)  0;

565 
±r
=
out
;*ptr++='{';

566 i‡(
fmt
Ë{*
±r
++='\n';
i
=0;i<
dïth
-1;i++) *ptr++='\t';}

567 *
±r
++='}';*ptr++=0;

568  
out
;

570 i‡(
p
)

573 
i
=
p
->
off£t
;

574 
Àn
=
fmt
?2:1; 
±r
=
	`ísuª
(
p
,len+1); if (!ptr)  0;

575 *
±r
++='{'; i‡(
fmt
Ë*±r++='\n'; *±r=0; 
p
->
off£t
+=
Àn
;

576 
chûd
=
ôem
->chûd;
dïth
++;

577 
chûd
)

579 i‡(
fmt
)

581 
±r
=
	`ísuª
(
p
,
dïth
); if (!ptr)  0;

582 
j
=0;j<
dïth
;j++Ë*
±r
++='\t';

583 
p
->
off£t
+=
dïth
;

585 
	`¥öt_°rög_±r
(
chûd
->
°rög
,
p
);

586 
p
->
off£t
=
	`upd©e
(p);

588 
Àn
=
fmt
?2:1;

589 
±r
=
	`ísuª
(
p
,
Àn
); if (!ptr)  0;

590 *
±r
++=':';i‡(
fmt
) *ptr++='\t';

591 
p
->
off£t
+=
Àn
;

593 
	`¥öt_vÆue
(
chûd
,
dïth
,
fmt
,
p
);

594 
p
->
off£t
=
	`upd©e
(p);

596 
Àn
=(
fmt
?1:0)+(
chûd
->
√xt
?1:0);

597 
±r
=
	`ísuª
(
p
,
Àn
+1); if (!ptr)  0;

598 i‡(
chûd
->
√xt
Ë*
±r
++=',';

599 i‡(
fmt
Ë*
±r
++='\n';*ptr=0;

600 
p
->
off£t
+=
Àn
;

601 
chûd
=chûd->
√xt
;

603 
±r
=
	`ísuª
(
p
,
fmt
?(
dïth
+1):2); if (!ptr)  0;

604 i‡(
fmt
Ë
i
=0;i<
dïth
-1;i++Ë*
±r
++='\t';

605 *
±r
++='}';*ptr=0;

606 
out
=(
p
->
buf„r
)+
i
;

611 
íåõs
=(**)
	`cJSON_mÆloc
(
numíåõs
*(*));

612 i‡(!
íåõs
)  0;

613 
«mes
=(**)
	`cJSON_mÆloc
(
numíåõs
*(*));

614 i‡(!
«mes
Ë{
	`cJSON_‰ì
(
íåõs
); 0;}

615 
	`mem£t
(
íåõs
,0,(*)*
numíåõs
);

616 
	`mem£t
(
«mes
,0,(*)*
numíåõs
);

619 
chûd
=
ôem
->chûd;
dïth
++;i‡(
fmt
Ë
Àn
+=depth;

620 
chûd
)

622 
«mes
[
i
]=
°r
=
	`¥öt_°rög_±r
(
chûd
->
°rög
,0);

623 
íåõs
[
i
++]=
ªt
=
	`¥öt_vÆue
(
chûd
,
dïth
,
fmt
,0);

624 i‡(
°r
 && 
ªt
Ë
Àn
+=
	`°æí
‘ë)+°æí(°r)+2+(
fmt
?2+
dïth
:0); 
Áû
=1;

625 
chûd
=chûd->
√xt
;

629 i‡(!
Áû
Ë
out
=(*)
	`cJSON_mÆloc
(
Àn
);

630 i‡(!
out
Ë
Áû
=1;

633 i‡(
Áû
)

635 
i
=0;i<
numíåõs
;i++Ë{i‡(
«mes
[i]Ë
	`cJSON_‰ì
“ames[i]);i‡(
íåõs
[i]) cJSON_free(entries[i]);}

636 
	`cJSON_‰ì
(
«mes
);cJSON_‰ì(
íåõs
);

641 *
out
='{';
±r
=out+1;i‡(
fmt
)*ptr++='\n';*ptr=0;

642 
i
=0;i<
numíåõs
;i++)

644 i‡(
fmt
Ë
j
=0;j<
dïth
;j++Ë*
±r
++='\t';

645 
tm∂í
=
	`°æí
(
«mes
[
i
]);
	`mem˝y
(
±r
,names[i],tmplen);ptr+=tmplen;

646 *
±r
++=':';i‡(
fmt
) *ptr++='\t';

647 
	`°r˝y
(
±r
,
íåõs
[
i
]);±r+=
	`°æí
(entries[i]);

648 i‡(
i
!=
numíåõs
-1Ë*
±r
++=',';

649 i‡(
fmt
Ë*
±r
++='\n';*ptr=0;

650 
	`cJSON_‰ì
(
«mes
[
i
]);cJSON_‰ì(
íåõs
[i]);

653 
	`cJSON_‰ì
(
«mes
);cJSON_‰ì(
íåõs
);

654 i‡(
fmt
Ë
i
=0;i<
dïth
-1;i++Ë*
±r
++='\t';

655 *
±r
++='}';*ptr++=0;

657  
out
;

658 
	}
}

661 
	$cJSON_GëAºaySize
(
cJSON
 *
¨øy
Ë{cJSON *
c
˜ºay->
chûd
;
i
=0;c)i++,c=c->
√xt
; i;
	}
}

662 
cJSON
 *
	$cJSON_GëAºayIãm
(
cJSON
 *
¨øy
,
ôem
Ë{cJSON *
c
˜ºay->
chûd
; ¯&& iãm>0Ëôem--,c=c->
√xt
;  c;
	}
}

663 
cJSON
 *
	$cJSON_GëObje˘Iãm
(
cJSON
 *
obje˘
,c⁄° *
°rög
Ë{cJSON *
c
=obje˘->
chûd
; ¯&& 
	`cJSON_°rˇ£cmp
(c->°rög,°rög)Ëc=c->
√xt
;  c;
	}
}

666 
	$suffix_obje˘
(
cJSON
 *
¥ev
,cJSON *
ôem
Ë{¥ev->
√xt
=ôem;ôem->¥evıªv;
	}
}

668 
cJSON
 *
	$¸óã_ª„ªn˚
(
cJSON
 *
ôem
Ë{cJSON *
ªf
=
	`cJSON_New_Iãm
();i‡(!ªfË 0;
	`mem˝y
‘ef,ôem,(cJSON));ªf->
°rög
=0;ªf->
ty≥
|=
cJSON_IsRe„ªn˚
;ªf->
√xt
Ùef->
¥ev
=0;Ñef;
	}
}

671 
	$cJSON_AddIãmToAºay
(
cJSON
 *
¨øy
, cJSON *
ôem
Ë{cJSON *
c
˜ºay->
chûd
;i‡(!ôemË; i‡(!cË{¨øy->chûd=ôem;} {¯&& c->
√xt
Ëc=c->√xt; 
	`suffix_obje˘
(c,ôem);}
	}
}

672 
	$cJSON_AddIãmToObje˘
(
cJSON
 *
obje˘
,c⁄° *
°rög
,cJSON *
ôem
Ë{i‡(!ôemË; i‡(ôem->°rögË
	`cJSON_‰ì
(ôem->°rög);ôem->°rög=
	`cJSON_°rdup
(°rög);
	`cJSON_AddIãmToAºay
(obje˘,ôem);
	}
}

673 
	$cJSON_AddIãmToObje˘CS
(
cJSON
 *
obje˘
,c⁄° *
°rög
,cJSON *
ôem
Ë{i‡(!ôemË; i‡(!(ôem->
ty≥
&
cJSON_SåögIsC⁄°
Ë&& iãm->°rögË
	`cJSON_‰ì
(ôem->°rög);ôem->°rög=(*)°rög;ôem->ty≥|=cJSON_SåögIsC⁄°;
	`cJSON_AddIãmToAºay
(obje˘,ôem);
	}
}

674 
	$cJSON_AddIãmRe„ªn˚ToAºay
(
cJSON
 *
¨øy
, cJSON *
ôem
Ë{
	`cJSON_AddIãmToAºay
◊ºay,
	`¸óã_ª„ªn˚
(ôem));
	}
}

675 
	$cJSON_AddIãmRe„ªn˚ToObje˘
(
cJSON
 *
obje˘
,c⁄° *
°rög
,cJSON *
ôem
Ë{
	`cJSON_AddIãmToObje˘
(obje˘,°rög,
	`¸óã_ª„ªn˚
(ôem));
	}
}

677 
cJSON
 *
	$cJSON_DëachIãmFromAºay
(
cJSON
 *
¨øy
,
which
Ë{cJSON *
c
˜ºay->
chûd
;¯&& which>0Ëc=c->
√xt
,which--;if (!c)  0;

678 i‡(
c
->
¥ev
Ëc->¥ev->
√xt
=c->√xt;i‡(c->√xtËc->√xt->¥ev=c->¥ev;i‡(c==
¨øy
->
chûd
Ë¨øy->chûd=c->√xt;c->¥ev=c->√xt=0; c;
	}
}

679 
	$cJSON_DñëeIãmFromAºay
(
cJSON
 *
¨øy
,
which
Ë{
	`cJSON_Dñëe
(
	`cJSON_DëachIãmFromAºay
◊ºay,which));
	}
}

680 
cJSON
 *
	$cJSON_DëachIãmFromObje˘
(
cJSON
 *
obje˘
,c⁄° *
°rög
Ë{
i
=0;cJSON *
c
=obje˘->
chûd
;¯&& 
	`cJSON_°rˇ£cmp
(c->°rög,°rög)Ëi++,c=c->
√xt
;i‡(cË 
	`cJSON_DëachIãmFromAºay
(obje˘,i); 0;
	}
}

681 
	$cJSON_DñëeIãmFromObje˘
(
cJSON
 *
obje˘
,c⁄° *
°rög
Ë{
	`cJSON_Dñëe
(
	`cJSON_DëachIãmFromObje˘
(obje˘,°rög));
	}
}

684 
	$cJSON_In£πIãmInAºay
(
cJSON
 *
¨øy
,
which
,cJSON *
√wôem
Ë{cJSON *
c
˜ºay->
chûd
;¯&& which>0Ëc=c->
√xt
,which--;i‡(!cË{
	`cJSON_AddIãmToAºay
(array,newitem);;}

685 
√wôem
->
√xt
=
c
;√wôem->
¥ev
=c->¥ev;c->¥evÚewôem;i‡(c==
¨øy
->
chûd
Ë¨øy->chûdÚewôem; √wôem->¥ev->√xtÚewôem;
	}
}

686 
	$cJSON_Rïœ˚IãmInAºay
(
cJSON
 *
¨øy
,
which
,cJSON *
√wôem
Ë{cJSON *
c
˜ºay->
chûd
;¯&& which>0Ëc=c->
√xt
,which--;if (!c) ;

687 
√wôem
->
√xt
=
c
->√xt;√wôem->
¥ev
=c->prev;if (newitem->next)Çewitem->next->prev=newitem;

688 i‡(
c
==
¨øy
->
chûd
Ë¨øy->chûd=
√wôem
; √wôem->
¥ev
->
√xt
Úewôem;c->√xt=c->¥ev=0;
	`cJSON_Dñëe
(c);
	}
}

689 
	$cJSON_Rïœ˚IãmInObje˘
(
cJSON
 *
obje˘
,c⁄° *
°rög
,cJSON *
√wôem
){
i
=0;cJSON *
c
=obje˘->
chûd
;¯&& 
	`cJSON_°rˇ£cmp
(c->°rög,°rög))i++,c=c->
√xt
;if(c){√wôem->°rög=
	`cJSON_°rdup
(°rög);
	`cJSON_Rïœ˚IãmInAºay
(obje˘,i,√wôem);}
	}
}

692 
cJSON
 *
	$cJSON_Cª©eNuŒ
(Ë{
cJSON
 *
ôem
=
	`cJSON_New_Iãm
();if(ôem)ôem->
ty≥
=
cJSON_NULL
; iãm;
	}
}

693 
cJSON
 *
	$cJSON_Cª©eTrue
(Ë{
cJSON
 *
ôem
=
	`cJSON_New_Iãm
();if(ôem)ôem->
ty≥
=
cJSON_True
; iãm;
	}
}

694 
cJSON
 *
	$cJSON_Cª©eFÆ£
(Ë{
cJSON
 *
ôem
=
	`cJSON_New_Iãm
();if(ôem)ôem->
ty≥
=
cJSON_FÆ£
; iãm;
	}
}

695 
cJSON
 *
	$cJSON_Cª©eBoﬁ
(
b
Ë{
cJSON
 *
ôem
=
	`cJSON_New_Iãm
();if(ôem)ôem->
ty≥
=b?
cJSON_True
:
cJSON_FÆ£
; iãm;
	}
}

696 
cJSON
 *
	$cJSON_Cª©eNumbî
(
num
Ë{
cJSON
 *
ôem
=
	`cJSON_New_Iãm
();if(ôem){ôem->
ty≥
=
cJSON_Numbî
;ôem->
vÆuedoubÀ
Úum;ôem->
vÆueöt
=(Íum;} iãm;
	}
}

697 
cJSON
 *
	$cJSON_Cª©eSåög
(c⁄° *
°rög
Ë{
cJSON
 *
ôem
=
	`cJSON_New_Iãm
();if(ôem){ôem->
ty≥
=
cJSON_Såög
;ôem->
vÆue°rög
=
	`cJSON_°rdup
(°rög);} iãm;
	}
}

698 
cJSON
 *
	$cJSON_Cª©eAºay
(Ë{
cJSON
 *
ôem
=
	`cJSON_New_Iãm
();if(ôem)ôem->
ty≥
=
cJSON_Aºay
; iãm;
	}
}

699 
cJSON
 *
	$cJSON_Cª©eObje˘
(Ë{
cJSON
 *
ôem
=
	`cJSON_New_Iãm
();if(ôem)ôem->
ty≥
=
cJSON_Obje˘
; iãm;
	}
}

702 
cJSON
 *
	$cJSON_Cª©eI¡Aºay
(c⁄° *
numbîs
,
cou¡
Ë{
i
;
cJSON
 *
n
=0,*
p
=0,*
a
=
	`cJSON_Cª©eAºay
();i=0;®&& i<cou¡;i++){n=
	`cJSON_Cª©eNumbî
“umbîs[i]);if(!iÔ->
chûd
Ú;
	`suffix_obje˘
’,n);pÚ;}á;
	}
}

703 
cJSON
 *
	$cJSON_Cª©eFlﬂtAºay
(c⁄° *
numbîs
,
cou¡
Ë{
i
;
cJSON
 *
n
=0,*
p
=0,*
a
=
	`cJSON_Cª©eAºay
();i=0;®&& i<cou¡;i++){n=
	`cJSON_Cª©eNumbî
“umbîs[i]);if(!iÔ->
chûd
Ú;
	`suffix_obje˘
’,n);pÚ;}á;
	}
}

704 
cJSON
 *
	$cJSON_Cª©eDoubÀAºay
(c⁄° *
numbîs
,
cou¡
Ë{
i
;
cJSON
 *
n
=0,*
p
=0,*
a
=
	`cJSON_Cª©eAºay
();i=0;®&& i<cou¡;i++){n=
	`cJSON_Cª©eNumbî
“umbîs[i]);if(!iÔ->
chûd
Ú;
	`suffix_obje˘
’,n);pÚ;}á;
	}
}

705 
cJSON
 *
	$cJSON_Cª©eSåögAºay
(c⁄° **
°rögs
,
cou¡
Ë{
i
;
cJSON
 *
n
=0,*
p
=0,*
a
=
	`cJSON_Cª©eAºay
();i=0;®&& i<cou¡;i++){n=
	`cJSON_Cª©eSåög
(°rögs[i]);if(!iÔ->
chûd
Ú;
	`suffix_obje˘
’,n);pÚ;}á;
	}
}

708 
cJSON
 *
	$cJSON_Du∂iˇã
(
cJSON
 *
ôem
,
ªcur£
)

710 
cJSON
 *
√wôem
,*
˝å
,*
≈å
=0,*
√wchûd
;

712 i‡(!
ôem
)  0;

714 
√wôem
=
	`cJSON_New_Iãm
();

715 i‡(!
√wôem
)  0;

717 
√wôem
->
ty≥
=
ôem
->ty≥&(~
cJSON_IsRe„ªn˚
),√wôem->
vÆueöt
=ôem->vÆueöt,√wôem->
vÆuedoubÀ
=item->valuedouble;

718 i‡(
ôem
->
vÆue°rög
Ë{
√wôem
->vÆue°rög=
	`cJSON_°rdup
(ôem->vÆue°rög); i‡(!√wôem->vÆue°rögË{
	`cJSON_Dñëe
(newitem); 0;}}

719 i‡(
ôem
->
°rög
Ë{
√wôem
->°rög=
	`cJSON_°rdup
(ôem->°rög); i‡(!√wôem->°rögË{
	`cJSON_Dñëe
(newitem); 0;}}

721 i‡(!
ªcur£
Ë 
√wôem
;

723 
˝å
=
ôem
->
chûd
;

724 
˝å
)

726 
√wchûd
=
	`cJSON_Du∂iˇã
(
˝å
,1);

727 i‡(!
√wchûd
Ë{
	`cJSON_Dñëe
(
√wôem
); 0;}

728 i‡(
≈å
Ë{≈å->
√xt
=
√wchûd
,√wchûd->
¥ev
=nptr;nptr=newchild;}

729 {
√wôem
->
chûd
=
√wchûd
;
≈å
=newchild;}

730 
˝å
=˝å->
√xt
;

732  
√wôem
;

733 
	}
}

735 
	$cJSON_Möify
(*
js⁄
)

737 *
öto
=
js⁄
;

738 *
js⁄
)

740 i‡(*
js⁄
==' ') json++;

741 i‡(*
js⁄
=='\t') json++;

742 i‡(*
js⁄
=='\r') json++;

743 i‡(*
js⁄
=='\n') json++;

744 i‡(*
js⁄
=='/' && json[1]=='/') *json && *json!='\n') json++;

745 i‡(*
js⁄
=='/' && json[1]=='*') {*json && !(*json=='*' && json[1]=='/')) json++;json+=2;}

746 i‡(*
js⁄
=='\"'){*
öto
++=*json++;*json && *json!='\"'){if (*json=='\\') *into++=*json++;*into++=*json++;}*into++=*json++;}

747 *
öto
++=*
js⁄
++;

749 *
öto
=0;

750 
	}
}

	@Client/Common/cJSON.h

23 #i‚de‡
cJSON__h


24 
	#cJSON__h


	)

26 #ifde‡
__˝lu•lus


32 
	#cJSON_FÆ£
 0

	)

33 
	#cJSON_True
 1

	)

34 
	#cJSON_NULL
 2

	)

35 
	#cJSON_Numbî
 3

	)

36 
	#cJSON_Såög
 4

	)

37 
	#cJSON_Aºay
 5

	)

38 
	#cJSON_Obje˘
 6

	)

40 
	#cJSON_IsRe„ªn˚
 256

	)

41 
	#cJSON_SåögIsC⁄°
 512

	)

44 
	scJSON
 {

45 
cJSON
 *
√xt
,*
¥ev
;

46 
cJSON
 *
chûd
;

48 
ty≥
;

50 *
vÆue°rög
;

51 
vÆueöt
;

52 
vÆuedoubÀ
;

54 *
°rög
;

55 } 
	tcJSON
;

57 
	scJSON_Hooks
 {

58 *(*
mÆloc_‚
)(
size_t
 
sz
);

59 (*
‰ì_‚
)(*
±r
);

60 } 
	tcJSON_Hooks
;

63 
cJSON_InôHooks
(
cJSON_Hooks
* 
hooks
);

67 
cJSON
 *
cJSON_P¨£
(c⁄° *
vÆue
);

69 *
cJSON_Pröt
(
cJSON
 *
ôem
);

71 *
cJSON_PrötUnf‹m©ãd
(
cJSON
 *
ôem
);

73 *
cJSON_PrötBuf„ªd
(
cJSON
 *
ôem
,
¥ebuf„r
,
fmt
);

75 
cJSON_Dñëe
(
cJSON
 *
c
);

78 
cJSON_GëAºaySize
(
cJSON
 *
¨øy
);

80 
cJSON
 *
cJSON_GëAºayIãm
(cJSON *
¨øy
,
ôem
);

82 
cJSON
 *
cJSON_GëObje˘Iãm
(cJSON *
obje˘
,c⁄° *
°rög
);

85 c⁄° *
cJSON_GëEº‹På
();

88 
cJSON
 *
cJSON_Cª©eNuŒ
();

89 
cJSON
 *
cJSON_Cª©eTrue
();

90 
cJSON
 *
cJSON_Cª©eFÆ£
();

91 
cJSON
 *
cJSON_Cª©eBoﬁ
(
b
);

92 
cJSON
 *
cJSON_Cª©eNumbî
(
num
);

93 
cJSON
 *
cJSON_Cª©eSåög
(c⁄° *
°rög
);

94 
cJSON
 *
cJSON_Cª©eAºay
();

95 
cJSON
 *
cJSON_Cª©eObje˘
();

98 
cJSON
 *
cJSON_Cª©eI¡Aºay
(c⁄° *
numbîs
,
cou¡
);

99 
cJSON
 *
cJSON_Cª©eFlﬂtAºay
(c⁄° *
numbîs
,
cou¡
);

100 
cJSON
 *
cJSON_Cª©eDoubÀAºay
(c⁄° *
numbîs
,
cou¡
);

101 
cJSON
 *
cJSON_Cª©eSåögAºay
(c⁄° **
°rögs
,
cou¡
);

104 
cJSON_AddIãmToAºay
(
cJSON
 *
¨øy
, cJSON *
ôem
);

105 
cJSON_AddIãmToObje˘
(
cJSON
 *
obje˘
,c⁄° *
°rög
,cJSON *
ôem
);

106 
cJSON_AddIãmToObje˘CS
(
cJSON
 *
obje˘
,c⁄° *
°rög
,cJSON *
ôem
);

108 
cJSON_AddIãmRe„ªn˚ToAºay
(
cJSON
 *
¨øy
, cJSON *
ôem
);

109 
cJSON_AddIãmRe„ªn˚ToObje˘
(
cJSON
 *
obje˘
,c⁄° *
°rög
,cJSON *
ôem
);

112 
cJSON
 *
cJSON_DëachIãmFromAºay
(cJSON *
¨øy
,
which
);

113 
cJSON_DñëeIãmFromAºay
(
cJSON
 *
¨øy
,
which
);

114 
cJSON
 *
cJSON_DëachIãmFromObje˘
(cJSON *
obje˘
,c⁄° *
°rög
);

115 
cJSON_DñëeIãmFromObje˘
(
cJSON
 *
obje˘
,c⁄° *
°rög
);

118 
cJSON_In£πIãmInAºay
(
cJSON
 *
¨øy
,
which
,cJSON *
√wôem
);

119 
cJSON_Rïœ˚IãmInAºay
(
cJSON
 *
¨øy
,
which
,cJSON *
√wôem
);

120 
cJSON_Rïœ˚IãmInObje˘
(
cJSON
 *
obje˘
,c⁄° *
°rög
,cJSON *
√wôem
);

123 
cJSON
 *
cJSON_Du∂iˇã
(cJSON *
ôem
,
ªcur£
);

129 
cJSON
 *
cJSON_P¨£WôhO±s
(c⁄° *
vÆue
,c⁄° **
ªtu∫_∑r£_íd
,
ªquúe_nuŒ_ãrmö©ed
);

131 
cJSON_Möify
(*
js⁄
);

134 
	#cJSON_AddNuŒToObje˘
(
obje˘
,
«me
Ë
	`cJSON_AddIãmToObje˘
(obje˘,Çame, 
	`cJSON_Cª©eNuŒ
())

	)

135 
	#cJSON_AddTrueToObje˘
(
obje˘
,
«me
Ë
	`cJSON_AddIãmToObje˘
(obje˘,Çame, 
	`cJSON_Cª©eTrue
())

	)

136 
	#cJSON_AddFÆ£ToObje˘
(
obje˘
,
«me
Ë
	`cJSON_AddIãmToObje˘
(obje˘,Çame, 
	`cJSON_Cª©eFÆ£
())

	)

137 
	#cJSON_AddBoﬁToObje˘
(
obje˘
,
«me
,
b
Ë
	`cJSON_AddIãmToObje˘
(obje˘,Çame, 
	`cJSON_Cª©eBoﬁ
(b))

	)

138 
	#cJSON_AddNumbîToObje˘
(
obje˘
,
«me
,
n
Ë
	`cJSON_AddIãmToObje˘
(obje˘,Çame, 
	`cJSON_Cª©eNumbî
“))

	)

139 
	#cJSON_AddSåögToObje˘
(
obje˘
,
«me
,
s
Ë
	`cJSON_AddIãmToObje˘
(obje˘,Çame, 
	`cJSON_Cª©eSåög
(s))

	)

142 
	#cJSON_SëI¡VÆue
(
obje˘
,
vÆ
Ë((obje˘)?(obje˘)->
vÆueöt
=(obje˘)->
vÆuedoubÀ
=(vÆ):(vÆ))

	)

143 
	#cJSON_SëNumbîVÆue
(
obje˘
,
vÆ
Ë((obje˘)?(obje˘)->
vÆueöt
=(obje˘)->
vÆuedoubÀ
=(vÆ):(vÆ))

	)

145 #ifde‡
__˝lu•lus


	@Client/Common/libb64/include/b64/cdecode.h

8 #i‚de‡
BASE64_CDECODE_H


9 
	#BASE64_CDECODE_H


	)

13 
	m°ï_a
, 
	m°ï_b
, 
	m°ï_c
, 
	m°ï_d


14 } 
	tba£64_decode°ï
;

18 
ba£64_decode°ï
 
	m°ï
;

19 
	m∂aöch¨
;

20 } 
	tba£64_decode°©e
;

22 
ba£64_öô_decode°©e
(
ba£64_decode°©e
* 
°©e_ö
);

24 
ba£64_decode_vÆue
(
vÆue_ö
);

26 
ba£64_decode_block
(c⁄° * 
code_ö
, c⁄° 
Àngth_ö
, * 
∂aöãxt_out
, 
ba£64_decode°©e
* 
°©e_ö
);

	@Client/Common/libb64/include/b64/cencode.h

8 #i‚de‡
BASE64_CENCODE_H


9 
	#BASE64_CENCODE_H


	)

13 
	m°ï_A
, 
	m°ï_B
, 
	m°ï_C


14 } 
	tba£64_ícode°ï
;

18 
ba£64_ícode°ï
 
	m°ï
;

19 
	mªsu…
;

20 
	m°ïcou¡
;

21 } 
	tba£64_ícode°©e
;

23 
ba£64_öô_ícode°©e
(
ba£64_ícode°©e
* 
°©e_ö
);

25 
ba£64_ícode_vÆue
(
vÆue_ö
);

27 
ba£64_ícode_block
(c⁄° * 
∂aöãxt_ö
, 
Àngth_ö
, * 
code_out
, 
ba£64_ícode°©e
* 
°©e_ö
);

29 
ba£64_ícode_blockíd
(* 
code_out
, 
ba£64_ícode°©e
* 
°©e_ö
);

	@Client/Common/libb64/src/cdecode.c

8 
	~<b64/cdecode.h
>

10 
	$ba£64_decode_vÆue
(
vÆue_ö
)

12 c⁄° 
decodög
[] = {62,-1,-1,-1,63,52,53,54,55,56,57,58,59,60,61,-1,-1,-1,-2,-1,-1,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,-1,-1,-1,-1,-1,-1,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51};

13 c⁄° 
decodög_size
 = (
decodög
);

14 
vÆue_ö
 -= 43;

15 i‡(
vÆue_ö
 < 0 || vÆue_ö > 
decodög_size
)  -1;

16  
decodög
[()
vÆue_ö
];

17 
	}
}

19 
	$ba£64_öô_decode°©e
(
ba£64_decode°©e
* 
°©e_ö
)

21 
°©e_ö
->
°ï
 = 
°ï_a
;

22 
°©e_ö
->
∂aöch¨
 = 0;

23 
	}
}

25 
	$ba£64_decode_block
(c⁄° * 
code_ö
, c⁄° 
Àngth_ö
, * 
∂aöãxt_out
, 
ba£64_decode°©e
* 
°©e_ö
)

27 c⁄° * 
codech¨
 = 
code_ö
;

28 * 
∂aöch¨
 = 
∂aöãxt_out
;

29 
‰agmít
;

31 *
∂aöch¨
 = 
°©e_ö
->plainchar;

33 
°©e_ö
->
°ï
)

37 
°ï_a
:

39 i‡(
codech¨
 =
code_ö
+
Àngth_ö
)

41 
°©e_ö
->
°ï
 = 
°ï_a
;

42 
°©e_ö
->
∂aöch¨
 = *plainchar;

43  
∂aöch¨
 - 
∂aöãxt_out
;

45 
‰agmít
 = ()
	`ba£64_decode_vÆue
(*
codech¨
++);

46 } 
‰agmít
 < 0);

47 *
∂aöch¨
 = (
‰agmít
 & 0x03f) << 2;

48 
°ï_b
:

50 i‡(
codech¨
 =
code_ö
+
Àngth_ö
)

52 
°©e_ö
->
°ï
 = 
°ï_b
;

53 
°©e_ö
->
∂aöch¨
 = *plainchar;

54  
∂aöch¨
 - 
∂aöãxt_out
;

56 
‰agmít
 = ()
	`ba£64_decode_vÆue
(*
codech¨
++);

57 } 
‰agmít
 < 0);

58 *
∂aöch¨
++ |(
‰agmít
 & 0x030) >> 4;

59 *
∂aöch¨
 = (
‰agmít
 & 0x00f) << 4;

60 
°ï_c
:

62 i‡(
codech¨
 =
code_ö
+
Àngth_ö
)

64 
°©e_ö
->
°ï
 = 
°ï_c
;

65 
°©e_ö
->
∂aöch¨
 = *plainchar;

66  
∂aöch¨
 - 
∂aöãxt_out
;

68 
‰agmít
 = ()
	`ba£64_decode_vÆue
(*
codech¨
++);

69 } 
‰agmít
 < 0);

70 *
∂aöch¨
++ |(
‰agmít
 & 0x03c) >> 2;

71 *
∂aöch¨
 = (
‰agmít
 & 0x003) << 6;

72 
°ï_d
:

74 i‡(
codech¨
 =
code_ö
+
Àngth_ö
)

76 
°©e_ö
->
°ï
 = 
°ï_d
;

77 
°©e_ö
->
∂aöch¨
 = *plainchar;

78  
∂aöch¨
 - 
∂aöãxt_out
;

80 
‰agmít
 = ()
	`ba£64_decode_vÆue
(*
codech¨
++);

81 } 
‰agmít
 < 0);

82 *
∂aöch¨
++ |(
‰agmít
 & 0x03f);

86  
∂aöch¨
 - 
∂aöãxt_out
;

87 
	}
}

	@Client/Common/libb64/src/cencode.c

8 
	~<b64/˚ncode.h
>

10 c⁄° 
	gCHARS_PER_LINE
 = 72;

12 
	$ba£64_öô_ícode°©e
(
ba£64_ícode°©e
* 
°©e_ö
)

14 
°©e_ö
->
°ï
 = 
°ï_A
;

15 
°©e_ö
->
ªsu…
 = 0;

16 
°©e_ö
->
°ïcou¡
 = 0;

17 
	}
}

19 
	$ba£64_ícode_vÆue
(
vÆue_ö
)

21 c⁄° * 
ícodög
 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";

22 i‡(
vÆue_ö
 > 63)  '=';

23  
ícodög
[()
vÆue_ö
];

24 
	}
}

26 
	$ba£64_ícode_block
(c⁄° * 
∂aöãxt_ö
, 
Àngth_ö
, * 
code_out
, 
ba£64_ícode°©e
* 
°©e_ö
)

28 c⁄° * 
∂aöch¨
 = 
∂aöãxt_ö
;

29 c⁄° * c⁄° 
∂aöãxãnd
 = 
∂aöãxt_ö
 + 
Àngth_ö
;

30 * 
codech¨
 = 
code_out
;

31 
ªsu…
;

32 
‰agmít
;

34 
ªsu…
 = 
°©e_ö
->result;

36 
°©e_ö
->
°ï
)

40 
°ï_A
:

41 i‡(
∂aöch¨
 =
∂aöãxãnd
)

43 
°©e_ö
->
ªsu…
 =Ñesult;

44 
°©e_ö
->
°ï
 = 
°ï_A
;

45  
codech¨
 - 
code_out
;

47 
‰agmít
 = *
∂aöch¨
++;

48 
ªsu…
 = (
‰agmít
 & 0x0fc) >> 2;

49 *
codech¨
++ = 
	`ba£64_ícode_vÆue
(
ªsu…
);

50 
ªsu…
 = (
‰agmít
 & 0x003) << 4;

51 
°ï_B
:

52 i‡(
∂aöch¨
 =
∂aöãxãnd
)

54 
°©e_ö
->
ªsu…
 =Ñesult;

55 
°©e_ö
->
°ï
 = 
°ï_B
;

56  
codech¨
 - 
code_out
;

58 
‰agmít
 = *
∂aöch¨
++;

59 
ªsu…
 |(
‰agmít
 & 0x0f0) >> 4;

60 *
codech¨
++ = 
	`ba£64_ícode_vÆue
(
ªsu…
);

61 
ªsu…
 = (
‰agmít
 & 0x00f) << 2;

62 
°ï_C
:

63 i‡(
∂aöch¨
 =
∂aöãxãnd
)

65 
°©e_ö
->
ªsu…
 =Ñesult;

66 
°©e_ö
->
°ï
 = 
°ï_C
;

67  
codech¨
 - 
code_out
;

69 
‰agmít
 = *
∂aöch¨
++;

70 
ªsu…
 |(
‰agmít
 & 0x0c0) >> 6;

71 *
codech¨
++ = 
	`ba£64_ícode_vÆue
(
ªsu…
);

72 
ªsu…
 = (
‰agmít
 & 0x03f) >> 0;

73 *
codech¨
++ = 
	`ba£64_ícode_vÆue
(
ªsu…
);

75 ++(
°©e_ö
->
°ïcou¡
);

76 i‡(
°©e_ö
->
°ïcou¡
 =
CHARS_PER_LINE
/4)

78 *
codech¨
++ = '\n';

79 
°©e_ö
->
°ïcou¡
 = 0;

84  
codech¨
 - 
code_out
;

85 
	}
}

87 
	$ba£64_ícode_blockíd
(* 
code_out
, 
ba£64_ícode°©e
* 
°©e_ö
)

89 * 
codech¨
 = 
code_out
;

91 
°©e_ö
->
°ï
)

93 
°ï_B
:

94 *
codech¨
++ = 
	`ba£64_ícode_vÆue
(
°©e_ö
->
ªsu…
);

95 *
codech¨
++ = '=';

96 *
codech¨
++ = '=';

98 
°ï_C
:

99 *
codech¨
++ = 
	`ba£64_ícode_vÆue
(
°©e_ö
->
ªsu…
);

100 *
codech¨
++ = '=';

102 
°ï_A
:

105 *
codech¨
++ = '\n';

107  
codech¨
 - 
code_out
;

108 
	}
}

	@Client/Service/Account_Srv.c

8 
	~<°dio.h
>

9 
	~"Accou¡_Srv.h
"

10 
	~<°dlib.h
>

11 
	~<°rög.h
>

12 
	~<uni°d.h
>

13 
	~<±hªad.h
>

14 
	~"C⁄√˘.h
"

15 
	~"Frõnds_Srv.h
"

16 
	~"../Comm⁄/Li°.h
"

18 
sock_fd
;

21 
my_muãx
;

22 
masßge
[1024];

23 
‰õnds_t
 *
FrõndsLi°
;

24 
gl_uid
;

26 
	$Accou¡_Srv_RecvIsO∆öe
(*
JSON
){

27 
cJSON
 *
roŸ
 = 
	`cJSON_P¨£
(
JSON
);

28 
cJSON
 *
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"is_online");

29 
is_⁄löe
 = 
ôem
 -> 
vÆueöt
;

30 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"fuid");

31 
fuid
 = 
ôem
 -> 
vÆueöt
;

32 
‰õnds_t
 *
f
;

33 
	`Li°_F‹Each
(
FrõndsLi°
 ,
f
){

34 if(
f
 -> 
uid
 =
fuid
) {

35 
f
 -> 
is_⁄löe
 = is_online;

36 if(
is_⁄löe
)

37 
	`¥ötf
("\n%†‰∏äÁ∫øÂï¶!\n" ,
f
 -> 
«me
);

39 
	`¥ötf
("\n%†Â∑≤‰∏ãÁ∫ø.\n" ,
f
 -> 
«me
);

42 
	}
}

46 
	$Accou¡_Srv_Out
(
uid
){

47 
πn
;

48 
cJSON
 *
roŸ
 = 
	`cJSON_Cª©eObje˘
();

49 
cJSON
 *
ôem
 = 
	`cJSON_Cª©eSåög
("O");

50 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"ty≥",
ôem
);

51 
ôem
 = 
	`cJSON_Cª©eNumbî
(
uid
);

52 
	`cJSON_AddIãmToObje˘
(
roŸ
 , "uid" ,
ôem
);

53 *
out
 = 
	`cJSON_Pröt
(
roŸ
);

54 if(
	`£nd
(
sock_fd
 ,(*)
out
 ,1024 ,0) <= 0){

55 
	`≥º‹
("send ËØ∑Ê±ÇÊúçÂä°Âô®Â§±Ë¥•");

56 
πn
 = 0;

58 
gl_uid
 = 0;

59 
	`cJSON_Dñëe
(
roŸ
);

60 
	`‰ì
(
out
);

63 
	`My_Lock
();

64 
roŸ
 = 
	`cJSON_P¨£
(
masßge
);

65 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"res");

66 if(
ôem
 -> 
vÆueöt
 == 0){

67 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"reason");

68 
	`¥ötf
("Ê≥®ÈîÄÂ§±Ë¥•: %s",
ôem
 -> 
vÆue°rög
);

69 
πn
 = 0;

71 
	`¥ötf
("Ê≥®ÈîÄÊàêÂäü,Êåâ‰ªªÊÑèÈîÆÁªßÁª≠..");

72 
πn
 = 1;

74 
	`cJSON_Dñëe
(
roŸ
);

75 
	`My_U∆ock
();

76 
	`gëch¨
();

78  
πn
;

79 
	}
}

81 
	$Accou¡_Srv_SignIn
(c⁄° * 
«me
 ,
£x
 ,c⁄° * 
∑ssw‹d
){

83 
πn
;

84 
cJSON
 *
roŸ
 = 
	`cJSON_Cª©eObje˘
();

85 
cJSON
 *
ôem
 = 
	`cJSON_Cª©eSåög
("S");

86 
	`cJSON_AddIãmToObje˘
(
roŸ
,"ty≥",
ôem
);

87 
ôem
 = 
	`cJSON_Cª©eSåög
(
«me
);

88 
	`cJSON_AddIãmToObje˘
(
roŸ
,"«me",
ôem
);

89 
ôem
 = 
	`cJSON_Cª©eBoﬁ
(
£x
);

90 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"£x" ,
ôem
);

91 
ôem
 = 
	`cJSON_Cª©eSåög
(
∑ssw‹d
);

92 
	`cJSON_AddIãmToObje˘
(
roŸ
,"∑ssw‹d",
ôem
);

93 *
out
 = 
	`cJSON_Pröt
(
roŸ
);

94 if(
	`£nd
(
sock_fd
 , (*)
out
 , 1024 ,0) < 0 ){

95 
	`≥º‹
("send: ËØ∑Ê±ÇÊúçÂä°Âô®Â§±Ë¥•");

98 
	`‰ì
(
out
);

99 
	`cJSON_Dñëe
(
roŸ
);

102 
	`My_Lock
();

103 
roŸ
 = 
	`cJSON_P¨£
(
masßge
);

104 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
,"res");

105 
ªs
 = 
ôem
 -> 
vÆueöt
;

106 if(
ªs
 == 1) {

107 
	`¥ötf
("Ê≥®ÂÜåÊàêÂäü!Êåâ‰ªªÊÑèÈîÆÁªßÁª≠");

108 
	`gëch¨
();

109 
πn
 = 1;

111 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
,"reason");

112 
	`¥ötf
("Ê≥®ÂÜåÂ§±Ë¥•: %s",
ôem
 -> 
vÆue°rög
);

113 
	`gëch¨
();

114 
πn
 = 0;

116 
	`cJSON_Dñëe
(
roŸ
);

118 
	`My_U∆ock
();

119  
πn
;

120 
	}
}

121 
	$Accou¡_Srv_Logö
(c⁄° *
«me
 , c⁄° *
∑ssw‹d
){

124 
πn
;

125 
cJSON
 *
roŸ
 = 
	`cJSON_Cª©eObje˘
();

126 
cJSON
 *
ôem
 = 
	`cJSON_Cª©eSåög
("L");

127 
	`cJSON_AddIãmToObje˘
(
roŸ
,"ty≥",
ôem
);

128 
ôem
 = 
	`cJSON_Cª©eSåög
(
«me
);

129 
	`cJSON_AddIãmToObje˘
(
roŸ
,"«me",
ôem
);

130 
ôem
 = 
	`cJSON_Cª©eSåög
(
∑ssw‹d
);

131 
	`cJSON_AddIãmToObje˘
(
roŸ
,"∑ssw‹d",
ôem
);

132 *
out
 = 
	`cJSON_Pröt
(
roŸ
);

133 if(
	`£nd
(
sock_fd
 , 
out
 , 1024 ,0) < 0 ){

134 
	`≥º‹
("send: ËØ∑Ê±ÇÊúçÂä°Âô®Â§±Ë¥•");

137 
	`‰ì
(
out
);

139 
	`My_Lock
();

147 
	`cJSON_Dñëe
(
roŸ
);

148 
roŸ
 = 
	`cJSON_P¨£
(
masßge
);

149 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
,"res");

150 
ªs
 = 
ôem
 -> 
vÆueöt
;

151 if(
ªs
 == 1) {

152 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
,"uid");

153 
πn
 = 
ôem
 -> 
vÆueöt
;

154 
	`¥ötf
("ÁôªÂΩïÊàêÂäü!ËØ∑Á®çÂÄô..");

155 
	`fÊush
(
°dout
);

156 
	`¶ìp
(2);

158 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
,"reason");

159 
πn
 = 0;

160 
	`¥ötf
("ÁôªÂΩïÂ§±Ë¥•: %s",
ôem
 -> 
vÆue°rög
);

161 
	`gëch¨
();

163 
	`cJSON_Dñëe
(
roŸ
);

168 
	`My_U∆ock
();

169  
πn
;

170 
	}
}

	@Client/Service/Account_Srv.h

8 #i‚de‡
_ACCOUNT_SRV_H


9 
	#_ACCOUNT_SRV_H


	)

10 
	~"../Comm⁄/cJSON.h
"

11 
	~"C⁄√˘.h
"

13 
Accou¡_Srv_RecvIsO∆öe
(*
JSON
);

18 
Accou¡_Srv_Out
(
uid
);

20 
Accou¡_Srv_SignIn
(c⁄° *
«me
 , 
£x
 ,c⁄° *
∑ssw‹d
);

22 
Accou¡_Srv_Logö
(c⁄° *
«me
 , c⁄° *
∑ssw‹d
);

	@Client/Service/Chat_Srv.c

8 
	~<°dio.h
>

9 
	~<°rög.h
>

10 
	~<°dlib.h
>

11 
	~<uni°d.h
>

12 
	~<libgí.h
>

13 
	~"C⁄√˘.h
"

14 
	~"Ch©_Srv.h
"

15 
	~"../Comm⁄/cJSON.h
"

16 
	~"../Comm⁄/Li°.h
"

17 
	~"../Sîvi˚/Frõnds_Srv.h
"

18 
	~"../Sîvi˚/Group_Srv.h
"

19 
	#MSG_LEN
 1024

	)

20 
gl_uid
;

21 
sock_fd
;

22 
‰õnds_t
 *
FrõndsLi°
;

23 
group_t
 *
GroupLi°
;

24 
¥iv©e_msg_t
 *
	gPriMsgLi°
;

25 
group_msg_t
 *
	gGroMsgLi°
;

26 
	$Ch©_Srv_RecvFûe
(c⁄° *
JSON
){

27 
code_out
[650] ,
buf
[900];

28 
	`mem£t
(
buf
 ,0,(buf));

29 
fûíame
 [100] = "RecvFile/";

30 
cJSON
 *
roŸ
 = 
	`cJSON_P¨£
(
JSON
);

31 
cJSON
 *
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"filename");

32 
	`°rˇt
(
fûíame
 , 
ôem
->
vÆue°rög
);

33 
fd
 = 
	`›í
(
fûíame
 ,
O_WRONLY
|
O_CREAT
|
O_APPEND
,
S_IRUSR
|
S_IWUSR
);

34 if(
fd
 == -1){

35 
	`≥º‹
("open");

38 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"con");

39 
	`°rˇt
–
buf
 , 
ôem
 -> 
vÆue°rög
);

40 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"size");

41 
size
 = 
ôem
 -> 
vÆueöt
;

42 
ba£64_decode°©e
 
°©e_ö
;

43 
	`ba£64_öô_decode°©e
(&
°©e_ö
);

44 
	`ba£64_decode_block
(
buf
 ,
	`°æí
(bufË,
code_out
 ,&
°©e_ö
);

45 if(
	`wrôe
(
fd
,
code_out
 ,
size
) != size){

46 
	`≥º‹
("write");

47 
	`˛o£
(
fd
);

50 if(
size
 < 650 - 2) {

51 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"uid");

52 
uid
 = 
ôem
 -> 
vÆueöt
;

53 
‰õnds_t
 *
f
;

54 
	`Li°_F‹Each
(
FrõndsLi°
 ,
f
){

55 if(
f
 -> 
uid
 == uid){

56 
	`¥ötf
("\n%s ÂèëÊù•‰∏Ä‰∏™Êñá‰ª∂,Â∑≤‰øùÂ≠òËá≥./RecvFile/%s\n",

57 
f
->
«me
 ,
	`ba£«me
(
fûíame
));

62 
	`˛o£
(
fd
);

64 
	}
}

65 
	$Ch©_Srv_SídFûe
(c⁄° *
fûíame
 ,
fuid
){

66 
buf
[650] ,
code_out
[900] ,
code_íd
[5],*
out
;

67 
fd
 ,
size
;

68 
ba£64_ícode°©e
 
°©e_ö
;

69 if((
fd
 = 
	`›í
(
fûíame
 ,
O_RDONLY
)) == -1){

70 
	`¥ötf
("Êñá‰ª∂‰∏çÂ≠òÂú®ÊàñÊó†ËØªÂèñÊùÉÈôê");

74 
	`mem£t
(
buf
 ,0,(buf));

75 
size
 = 
	`ªad
(
fd
 ,
buf
 ,(buf) - 2);

77 
	`ba£64_öô_ícode°©e
(&
°©e_ö
);

78 
	`mem£t
(
code_out
 ,0,(code_out));

79 
	`ba£64_ícode_block
(
buf
 ,
size
 ,
code_out
 ,&
°©e_ö
);

80 if(
°©e_ö
.
°ï
 !
°ï_A
) {

81 
	`mem£t
(
code_íd
 ,0,(code_end));

82 
	`ba£64_ícode_blockíd
(
code_íd
 ,&
°©e_ö
);

83 
	`°rˇt
(
code_out
 ,
code_íd
);

86 
cJSON
 *
roŸ
 = 
	`cJSON_Cª©eObje˘
();

87 
cJSON
 *
ôem
 = 
	`cJSON_Cª©eSåög
("F");

88 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"ty≥" ,
ôem
);

89 
ôem
 = 
	`cJSON_Cª©eNumbî
(
gl_uid
);

90 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"uid",
ôem
);

91 
ôem
 = 
	`cJSON_Cª©eNumbî
(
fuid
);

92 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"fuid" ,
ôem
);

93 
ôem
 = 
	`cJSON_Cª©eSåög
(
	`ba£«me
((*)
fûíame
));

94 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"fûíame" ,
ôem
);

95 
ôem
 = 
	`cJSON_Cª©eNumbî
(
size
);

96 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"size" ,
ôem
);

97 
ôem
 = 
	`cJSON_Cª©eSåög
(
code_out
);

98 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"c⁄",
ôem
);

99 
out
 = 
	`cJSON_Pröt
(
roŸ
);

100 
	`cJSON_Dñëe
(
roŸ
);

101 
ªt
;

102 
	`¥ötf
("%s\n",
out
);

103 if((
ªt
 = 
	`£nd
(
sock_fd
 ,
out
,
MSG_LEN
 ,0)) <= 0){

104 
	`≥º‹
("send");

105 
	`‰ì
(
out
);

108 if(
size
 < ()(
buf
) - 2) ;

109 
	`‰ì
(
out
);

111 
	`˛o£
(
fd
);

113 
	}
}

114 
	$Ch©_Srv_InôLi°
(){

115 
	`Li°_Inô
(
PriMsgLi°
 ,
¥iv©e_msg_t
);

116 
	`Li°_Inô
(
GroMsgLi°
 ,
group_msg_t
);

117 
	}
}

118 
	$Ch©_Srv_RecvPriv©e
(c⁄° *
JSON
){

119 
¥iv©e_msg_t
 *
NewMsg
 = (¥iv©e_msg_à*)
	`mÆloc
((private_msg_t));

120 
cJSON
 *
roŸ
 = 
	`cJSON_P¨£
(
JSON
);

121 
cJSON
 *
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"from_uid");

122 
NewMsg
->
‰om_uid
 = 
ôem
 -> 
vÆueöt
;

123 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"msg");

124 
	`°r˝y
(
NewMsg
->
msg
 , 
ôem
 -> 
vÆue°rög
);

125 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"time");

126 
	`°r˝y
(
NewMsg
->
time
 , 
ôem
 -> 
vÆue°rög
);

127 
‰õnds_t
 * 
f
;

128 
	`Li°_F‹Each
(
FrõndsLi°
 ,
f
){

129 if(
f
->
uid
 =
NewMsg
->
‰om_uid
){

130 
	`°r˝y
(
NewMsg
->
«me
 ,
f
->name);

131 (
f
->
NewMsgNum
) ++;

134 
NewMsg
->
√xt
 =
NULL
;

135 
	`cJSON_Dñëe
(
roŸ
);

136 
¥iv©e_msg_t
 *
curPos
;

137 
	`Li°_AddTaû
(
PriMsgLi°
 ,
curPos
 ,
NewMsg
);

138 
	`¥ötf
("\n%†ÂèëÊù•‰∏ÄÊù°Ê∂àÊÅØ\n",
NewMsg
->
«me
);

139 
	}
}

141 
	$Ch©_Srv_RecvGroup
(c⁄° *
JSON
){

142 
group_msg_t
 *
NewMsg
 =

143 (
group_msg_t
 *)
	`mÆloc
((group_msg_t));

144 
cJSON
 *
roŸ
 = 
	`cJSON_P¨£
(
JSON
);

145 
cJSON
 *
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"from_uid");

146 
NewMsg
->
‰om_uid
 = 
ôem
 -> 
vÆueöt
;

147 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"to_gid");

148 
NewMsg
 -> 
gid
 = 
ôem
 -> 
vÆueöt
;

149 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"msg");

150 
	`°r˝y
(
NewMsg
->
msg
 , 
ôem
 -> 
vÆue°rög
);

151 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"time");

152 
	`°r˝y
(
NewMsg
->
time
 , 
ôem
 -> 
vÆue°rög
);

153 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
,"uname");

154 
	`°r˝y
(
NewMsg
 -> 
u«me
 ,
ôem
 -> 
vÆue°rög
);

155 
group_t
 * 
g
;

156 
	`Li°_F‹Each
(
GroupLi°
 ,
g
){

157 if(
g
->
gid
 =
NewMsg
->gid){

158 
	`°r˝y
(
NewMsg
->
g«me
 ,
g
->
«me
);

159 (
g
->
NewMsgNum
) ++;

162 
NewMsg
->
√xt
 =
NULL
;

163 
	`cJSON_Dñëe
(
roŸ
);

164 
group_msg_t
 *
curPos
;

165 
	`Li°_AddTaû
(
GroMsgLi°
 ,
curPos
 ,
NewMsg
);

166 
	`¥ötf
("\nÁæ§ËÅä %†Êúâ‰∏ÄÊù°Êñ∞Ê∂àÊÅØ\n",
NewMsg
->
g«me
);

167 
	}
}

169 
	$Ch©_Srv_SídPriv©e
(
to_uid
 ,c⁄° * 
msg
){

170 
πn
 = 1;

171 
¥iv©e_msg_t
 *
NewMsg
 =

172 (
¥iv©e_msg_t
 *)
	`mÆloc
((private_msg_t));

173 
u£r_d©e_t
 
Srvd©e
 = 
	`D©eNow
();

174 
u£r_time_t
 
Srvtime
 = 
	`TimeNow
();

175 
Srvd©ëime
[25];

176 
	`•rötf
(
Srvd©ëime
 ,"%04d-%02d-%02d %02d:%02d:%02d",

177 
Srvd©e
.
yór
 ,Srvd©e.
m⁄th
 ,Srvd©e.
day
,

178 
Srvtime
.
hour
 ,Srvtime.
möuã
 ,Srvtime.
£c⁄d
);

179 
	`°r˝y
(
NewMsg
->
time
 ,
Srvd©ëime
);

180 
NewMsg
->
‰om_uid
 = 
gl_uid
;

181 
	`°r˝y
(
NewMsg
->
msg
 ,msg);

182 
NewMsg
 -> 
√xt
 = 
NULL
;

183 
¥iv©e_msg_t
 *
m
;

184 
	`Li°_AddTaû
(
PriMsgLi°
 ,
m
 ,
NewMsg
);

185 
cJSON
 *
roŸ
 = 
	`cJSON_Cª©eObje˘
();

186 
cJSON
 *
ôem
 = 
	`cJSON_Cª©eSåög
("P");

187 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"ty≥" ,
ôem
);

188 
ôem
 = 
	`cJSON_Cª©eNumbî
(
gl_uid
);

189 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"‰om_uid" ,
ôem
);

190 
ôem
 = 
	`cJSON_Cª©eNumbî
(
to_uid
);

191 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"to_uid" ,
ôem
);

192 
ôem
 = 
	`cJSON_Cª©eSåög
(
msg
);

193 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"msg" ,
ôem
);

194 *
out
 = 
	`cJSON_Pröt
(
roŸ
);

195 if(
	`£nd
(
sock_fd
 ,(*)
out
 ,
MSG_LEN
 ,0) <= 0){

196 
	`¥ötf
("ÊúçÂä°Âô®Â§±ÂéªÂìçÂ∫î\n");

197 
πn
 = 0;

199 
	`cJSON_Dñëe
(
roŸ
);

200 
	`‰ì
(
out
);

201  
πn
;

202 
	}
}

203 
	$Ch©_Srv_SídGroup
(
to_gid
 ,c⁄° * 
msg
){

204 
πn
 = 1;

205 
group_msg_t
 *
NewMsg
 =

206 (
group_msg_t
 *)
	`mÆloc
((group_msg_t));

207 
NewMsg
 -> 
gid
 = 
to_gid
;

208 
u£r_d©e_t
 
Srvd©e
 = 
	`D©eNow
();

209 
u£r_time_t
 
Srvtime
 = 
	`TimeNow
();

210 
Srvd©ëime
[25];

211 
	`•rötf
(
Srvd©ëime
 ,"%04d-%02d-%02d %02d:%02d:%02d",

212 
Srvd©e
.
yór
 ,Srvd©e.
m⁄th
 ,Srvd©e.
day
,

213 
Srvtime
.
hour
 ,Srvtime.
möuã
 ,Srvtime.
£c⁄d
);

214 
	`°r˝y
(
NewMsg
->
time
 ,
Srvd©ëime
);

215 
NewMsg
->
‰om_uid
 = 
gl_uid
;

216 
	`°r˝y
(
NewMsg
->
msg
 ,msg);

217 
NewMsg
 -> 
√xt
 = 
NULL
;

218 
group_msg_t
 *
m
;

219 
	`Li°_AddTaû
(
GroMsgLi°
 ,
m
 ,
NewMsg
);

220 
cJSON
 *
roŸ
 = 
	`cJSON_Cª©eObje˘
();

221 
cJSON
 *
ôem
 = 
	`cJSON_Cª©eSåög
("p");

222 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"ty≥" ,
ôem
);

223 
ôem
 = 
	`cJSON_Cª©eNumbî
(
gl_uid
);

224 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"‰om_uid" ,
ôem
);

225 
ôem
 = 
	`cJSON_Cª©eNumbî
(
to_gid
);

226 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"to_gid" ,
ôem
);

227 
ôem
 = 
	`cJSON_Cª©eSåög
(
msg
);

228 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"msg" ,
ôem
);

229 *
out
 = 
	`cJSON_Pröt
(
roŸ
);

230 if(
	`£nd
(
sock_fd
 ,(*)
out
 ,
MSG_LEN
 ,0) <= 0){

231 
	`¥ötf
("ÊúçÂä°Âô®Â§±ÂéªÂìçÂ∫î\n");

232 
πn
 = 0;

234 
	`cJSON_Dñëe
(
roŸ
);

235 
	`‰ì
(
out
);

236  
πn
;

237 
	}
}

238 
	$Ch©_Srv_ShowPriv©eRec
(c⁄° *
JSON
){

239 
¥iv©e_msg_t
 *
NewMsg
 = (¥iv©e_msg_à*)
	`mÆloc
((private_msg_t));

240 
cJSON
 *
roŸ
 = 
	`cJSON_P¨£
(
JSON
);

241 
cJSON
 *
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"from_uid");

242 
NewMsg
->
‰om_uid
 = 
ôem
 -> 
vÆueöt
;

243 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"msg");

244 
	`°r˝y
(
NewMsg
->
msg
 , 
ôem
 -> 
vÆue°rög
);

245 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"time");

246 
	`°r˝y
(
NewMsg
->
time
 , 
ôem
 -> 
vÆue°rög
);

247 
‰õnds_t
 * 
f
;

248 
	`Li°_F‹Each
(
FrõndsLi°
 ,
f
){

249 if(
f
->
uid
 =
NewMsg
->
‰om_uid
){

250 
	`°r˝y
(
NewMsg
->
«me
 ,
f
->name);

251 (
f
->
NewMsgNum
) ++;

254 
NewMsg
->
√xt
 =
NULL
;

255 
	`cJSON_Dñëe
(
roŸ
);

256 if(
NewMsg
 -> 
‰om_uid
 =
gl_uid
){

257 
	`¥ötf
("\t\e[32m%s\e[0m ",
NewMsg
->
time
);

258 
	`¥ötf
("Êàë\n");

259 
	`¥ötf
("\à \e[1m%s\e[0m\n",
NewMsg
 -> 
msg
);

262 
	`¥ötf
("\t\e[31m%s\e[0m ",
NewMsg
->
time
);

263 
	`¥ötf
("%s\n",
NewMsg
 -> 
«me
);

264 
	`¥ötf
("\à \e[1m%s\e[0m\n",
NewMsg
 -> 
msg
);

266 
	}
}

267 
	$Ch©_Srv_GëPriv©eRec
(
fuid
){

268 
cJSON
 *
roŸ
 = 
	`cJSON_Cª©eObje˘
();

269 
	`cJSON_AddSåögToObje˘
(
roŸ
 ,"type" ,"E");

270 
	`cJSON_AddNumbîToObje˘
(
roŸ
 ,"uid" ,
gl_uid
);

271 
	`cJSON_AddNumbîToObje˘
(
roŸ
 ,"fuid" ,
fuid
);

272 *
out
 = 
	`cJSON_Pröt
(
roŸ
);

273 
	`cJSON_Dñëe
(
roŸ
);

274 if(
	`£nd
(
sock_fd
 ,(*)
out
 ,
MSG_LEN
 ,0) <= 0){

275 
	`¥ötf
("ÊúçÂä°Âô®Â§±ÂéªÂìçÂ∫î\n");

277 
	`‰ì
(
out
);

278 
	`sy°em
("clear");

279 
	`¶ìp
(1);

280 
	}
}

	@Client/Service/Chat_Srv.h

8 #i‚de‡
_CHAT_SRV_H


9 
	#_CHAT_SRV_H


	)

10 
	~"../Comm⁄/Comm⁄.h
"

11 
	s¥iv©e_msg
 {

12 
	m‰om_uid
;

13 
	m«me
[30];

14 
	mmsg
[1000];

15 
	mtime
 [25];

16 
¥iv©e_msg
 *
	m√xt
;

17 }
	t¥iv©e_msg_t
;

19 
	sgroup_msg
 {

20 
	m‰om_uid
;

21 
	mgid
;

22 
	mu«me
[30];

23 
	mg«me
[30];

24 
	mmsg
[1000];

25 
	mtime
 [25];

26 
group_msg
 *
	m√xt
;

27 }
	tgroup_msg_t
;

30 
Ch©_Srv_InôLi°
();

32 
Ch©_Srv_RecvPriv©e
(c⁄° *
JSON
);

34 
Ch©_Srv_SídPriv©e
(
to_uid
 ,c⁄° *
msg
);

36 
Ch©_Srv_RecvGroup
(c⁄° *
JSON
);

38 
Ch©_Srv_SídGroup
(
to_uid
 ,c⁄° *
msg
);

40 
Ch©_Srv_SídFûe
(c⁄° *
fûíame
 ,
fuid
);

42 
Ch©_Srv_RecvFûe
(c⁄° *
JSON
);

44 
Ch©_Srv_ShowPriv©eRec
(c⁄° *
JSON
);

46 
Ch©_Srv_GëPriv©eRec
(
fuid
);

	@Client/Service/Connect.c

8 
	~<°dio.h
>

9 
	~<°dlib.h
>

10 
	~<°rög.h
>

11 
	~<±hªad.h
>

12 
	~<uni°d.h
>

13 
	~"C⁄√˘.h
"

14 
	~"Ch©_Srv.h
"

15 
	~"Accou¡_Srv.h
"

16 
	~"Frõnds_Srv.h
"

17 
	~"Group_Srv.h
"

18 
	~"../Comm⁄/cJSON.h
"

19 
	#MSG_LEN
 1024

	)

21 
	gsock_fd
;

24 
my_muãx
;

25 
	gmasßge
[
MSG_LEN
];

27 * 
	$thªad
(*
¨g
){

28 
ªt
 ,
ªcv_Àn
;

29 
cJSON
 *
roŸ
 ,*
ôem
;

30 if(
¨g
 =
NULL
)árg = NULL;

39 if(
my_muãx
) ;

41 
ªcv_Àn
 = 0;

42 
ªcv_Àn
 < 
MSG_LEN
){

43 
ªt
 = 0;

44 if((
ªt
 = 
	`ªcv
(
sock_fd
 ,
masßge
 + 
ªcv_Àn
 ,
MSG_LEN
 -Ñecv_len,0)) <= 0){

45 
	`≥º‹
("recv: ÊúçÂä°Âô®Â§±ÂéªÂìçÂ∫î");

46 
	`exô
(0);

48 
ªcv_Àn
 +
ªt
;

51 
roŸ
 = 
	`cJSON_P¨£
(
masßge
);

52 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"type");

53 
ôem
 -> 
vÆue°rög
[0]){

55 
	`Frõnds_Srv_RecvAdd
(
masßge
);

60 
	`Frõnds_Srv_AµlyRes
(
masßge
);

64 
	`Ch©_Srv_RecvPriv©e
(
masßge
);

68 
	`Ch©_Srv_RecvGroup
(
masßge
);

71 
	`Ch©_Srv_RecvFûe
(
masßge
);

80 
my_muãx
 = 1;

83 
my_muãx
 = 1;

88 
my_muãx
 = 1;

94 
	`Accou¡_Srv_RecvIsO∆öe
(
masßge
);

98 
	`Group_Srv_Joö
(
masßge
);

101 
	`Group_Srv_ShowMembî
(
masßge
);

104 
	`Group_Srv_Dñëe
(
masßge
);

107 
	`Ch©_Srv_ShowPriv©eRec
(
masßge
);

118  
NULL
;

119 
	}
}

120 
	$C⁄√˘
(c⁄° *
ho°
 ,
p‹t
){

121 
sockaddr_ö
 
˛õ_addr
;

123 
±hªad_t
 
thid
;

126 
	`mem£t
(&
˛õ_addr
 , 0 ,(
sockaddr_ö
));

127 
˛õ_addr
.
sö_Ámûy
 = 
AF_INET
;

128 
˛õ_addr
.
sö_p‹t
 = 
	`ht⁄s
(
p‹t
);

129 
˛õ_addr
.
sö_addr
.
s_addr
 = 
	`öë_addr
(
ho°
);

130 
sock_fd
 = 
	`sockë
(
AF_INET
 , 
SOCK_STREAM
 , 0);

131 if(
sock_fd
 < 0){

132 
	`≥º‹
("socket");

133 
	`exô
(0);

135 if(
	`c⁄√˘
(
sock_fd
 , (
sockaddr
 *)&
˛õ_addr
,(
sockaddr_ö
)) < 0){

136 
	`≥º‹
("connect");

137 
	`exô
(0);

139 
	`±hªad_¸óã
(&
thid
 ,
NULL
 ,
thªad
 ,NULL);

142 
	}
}

	@Client/Service/Connect.h

8 #i‚de‡
_CONNECT_H


9 
	#_CONNECT_H


	)

10 
	~<sys/ty≥s.h
>

11 
	~<√töë/ö.h
>

12 
	~<sys/sockë.h
>

13 
	~<löux/sockë.h
>

14 
	~<¨∑/öë.h
>

15 
	~"../Comm⁄/Comm⁄.h
"

21 
C⁄√˘
(c⁄° *
ho°
 ,
p‹t
);

	@Client/Service/Friends_Srv.c

8 
	~<°dio.h
>

9 
	~<°dlib.h
>

10 
	~<°rög.h
>

11 
	~"Frõnds_Srv.h
"

12 
	~<±hªad.h
>

13 
	~"C⁄√˘.h
"

14 
	~"../Comm⁄/Comm⁄.h
"

15 
	~"../Comm⁄/Li°.h
"

16 
	#MSG_LEN
 1024

	)

17 
gl_uid
;

18 
sock_fd
;

20 
my_muãx
;

22 
masßge
[1024];

23 
‰õnds_t
 *
	gFrõndsLi°
;

25 
	$Frõnds_Srv_GëLi°
(){

26 
πn
;

27 if(
NULL
 !
FrõndsLi°
){

28 
	`Li°_De°roy
(
FrõndsLi°
 ,
‰õnds_t
);

30 
	`Li°_Inô
(
FrõndsLi°
 ,
‰õnds_t
);

31 
cJSON
 *
roŸ
 = 
	`cJSON_Cª©eObje˘
();

32 
cJSON
 *
ôem
 = 
	`cJSON_Cª©eSåög
("G");

33 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"ty≥" ,
ôem
);

34 
ôem
 = 
	`cJSON_Cª©eNumbî
(
gl_uid
);

35 
	`cJSON_AddIãmToObje˘
(
roŸ
, "uid" ,
ôem
);

36 *
out
 = 
	`cJSON_Pröt
(
roŸ
);

37 if(
	`£nd
(
sock_fd
 ,(*)
out
 ,
MSG_LEN
,0) < 0){

38 
	`≥º‹
("send: ËØ∑Ê±ÇÊúçÂä°Âô®Â§±Ë¥•");

41 
	`‰ì
(
out
);

42 
	`cJSON_Dñëe
(
roŸ
);

43 
‰õnds_t
 *
√wNode
 = 
NULL
;

46 
	`My_Lock
();

47 
roŸ
 = 
	`cJSON_P¨£
(
masßge
);

48 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"uid");

49 if–
ôem
 -> 
vÆueöt
 == 0){

50 
	`My_U∆ock
();

54 
√wNode
 = (
‰õnds_t
 *)
	`mÆloc
((friends_t));

55 
√wNode
 -> 
uid
 = 
ôem
 -> 
vÆueöt
;

56 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"name");

57 
	`°r˝y
(
√wNode
 -> 
«me
 ,
ôem
 -> 
vÆue°rög
);

58 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"sex");

59 
√wNode
 -> 
£x
 = 
ôem
 -> 
vÆueöt
;

60 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"is_vip");

61 
√wNode
 -> 
is_vù
 = 
ôem
 -> 
vÆueöt
;

62 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"is_follow");

63 
√wNode
 -> 
is_fﬁlow
 = 
ôem
 -> 
vÆueöt
;

64 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"is_online");

65 
√wNode
 -> 
is_⁄löe
 = 
ôem
 -> 
vÆueöt
;

66 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"state");

67 
√wNode
 -> 
°©e
 = 
ôem
 -> 
vÆueöt
;

68 
	`cJSON_Dñëe
(
roŸ
);

69 
√wNode
 -> 
NewMsgNum
 = 0;

70 
√wNode
 -> 
√xt
 = 
NULL
;

71 
	`Li°_AddHód
(
FrõndsLi°
 ,
√wNode
);

72 
	`My_U∆ock
();

76 
	`My_Lock
();

77 
roŸ
 = 
	`cJSON_P¨£
(
masßge
);

78 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
,"res");

79 
ªs
 = 
ôem
 -> 
vÆueöt
;

80 if(
ªs
 == 1){

81 
πn
 = 1;

83 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"reason");

84 
	`¥ötf
("ËØ∑Ê±ÇÂ§±Ë¥•: %s",
ôem
 -> 
vÆue°rög
);

85 
πn
 = 0;

87 
	`cJSON_Dñëe
(
roŸ
);

88 
	`My_U∆ock
();

90  
πn
;

91 
	}
}

93 
	$Frõnds_Srv_SídAdd
(c⁄° *
‚ame
){

94 
πn
;

95 
cJSON
 *
roŸ
 = 
	`cJSON_Cª©eObje˘
();

96 
cJSON
 *
ôem
 = 
	`cJSON_Cª©eSåög
("A");

97 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"ty≥" ,
ôem
);

98 
ôem
 = 
	`cJSON_Cª©eNumbî
(
gl_uid
);

99 
	`cJSON_AddIãmToObje˘
(
roŸ
, "uid" ,
ôem
);

100 
ôem
 = 
	`cJSON_Cª©eSåög
(
‚ame
);

101 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"‚ame" ,
ôem
);

102 *
out
 = 
	`cJSON_Pröt
(
roŸ
);

103 if(
	`£nd
(
sock_fd
 ,(*)
out
 ,
MSG_LEN
 ,0) < 0){

104 
	`≥º‹
("send: ËØ∑Ê±ÇÊúçÂä°Âô®Â§±Ë¥•");

107 
	`‰ì
(
out
);

108 
	`cJSON_Dñëe
(
roŸ
);

109 
	`My_Lock
();

110 
roŸ
 = 
	`cJSON_P¨£
(
masßge
);

111 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
,"res");

112 
ªs
 = 
ôem
 -> 
vÆueöt
;

113 if(
ªs
){

114 
	`¥ötf
("Â•ΩÂèãËØ∑Ê±ÇÂèëÈÄÅÊàêÂäü!");

115 
	`gëch¨
();

116 
πn
 = 1;

118 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"reason");

119 
	`¥ötf
("ËØ∑Ê±ÇÂ§±Ë¥•: %s",
ôem
 -> 
vÆue°rög
);

120 
	`gëch¨
();

121 
πn
 = 0;

123 
	`cJSON_Dñëe
(
roŸ
);

124 
	`My_U∆ock
();

125  
πn
;

126 
	}
}

129 
	$Frõnds_Srv_RecvAdd
(c⁄° *
JSON
){

130 
‰õnds_t
 *
√wNode
;

131 
√wNode
 = (
‰õnds_t
 *)
	`mÆloc
((friends_t));

132 
cJSON
 *
roŸ
 = 
	`cJSON_P¨£
(
JSON
);

133 
cJSON
 *
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"uid");

134 
√wNode
 -> 
uid
 = 
ôem
 -> 
vÆueöt
;

135 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"name");

136 
	`°r˝y
(
√wNode
 -> 
«me
 ,
ôem
 -> 
vÆue°rög
);

137 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"sex");

138 
√wNode
 -> 
£x
 = 
ôem
 -> 
vÆueöt
;

139 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"is_vip");

140 
√wNode
 -> 
is_vù
 = 
ôem
 -> 
vÆueöt
;

141 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"is_follow");

142 
√wNode
 -> 
is_fﬁlow
 = 
ôem
 -> 
vÆueöt
;

143 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"is_online");

144 
√wNode
 -> 
is_⁄löe
 = 
ôem
 -> 
vÆueöt
;

145 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"state");

146 
√wNode
 -> 
°©e
 = 
ôem
 -> 
vÆueöt
;

147 
	`cJSON_Dñëe
(
roŸ
);

148 
√wNode
 -> 
NewMsgNum
 = 0;

149 
√wNode
 -> 
√xt
 = 
NULL
;

150 
	`Li°_AddHód
(
FrõndsLi°
 ,
√wNode
);

151 if(
√wNode
 -> 
°©e
 == 0)

152 
	`¥ötf
("\n%sËØ∑Ê±ÇÊ∑ªÂä†‰Ω†‰∏∫Â•ΩÂèã\n",
√wNode
 -> 
«me
);

154 
	}
}

156 
	$Frõnds_Srv_Aµly
(
uid
 ,
fuid
 ,
is_agªe
){

157 
cJSON
 * 
roŸ
 = 
	`cJSON_Cª©eObje˘
();

158 
cJSON
 * 
ôem
 = 
	`cJSON_Cª©eSåög
("a");

159 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"ty≥",
ôem
);

160 
ôem
 = 
	`cJSON_Cª©eNumbî
(
uid
);

161 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"uid" ,
ôem
);

162 
ôem
 = 
	`cJSON_Cª©eNumbî
(
fuid
);

163 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"fuid" ,
ôem
);

164 
ôem
 = 
	`cJSON_Cª©eBoﬁ
(
is_agªe
);

165 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"is_agªe" ,
ôem
);

166 *
out
 = 
	`cJSON_Pröt
(
roŸ
);

167 
	`cJSON_Dñëe
(
roŸ
);

168 if(
	`£nd
(
sock_fd
 ,(*)
out
 ,
MSG_LEN
,0) <= 0 ){

169 
	`≥º‹
("send");

172 
	`‰ì
(
out
);

174 
	}
}

177 
	$Frõnds_Srv_AµlyRes
(c⁄° *
JSON
){

178 
cJSON
 *
roŸ
 = 
	`cJSON_P¨£
(
JSON
);

179 
cJSON
 *
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
,"fuid");

180 if(
NULL
 =
ôem
) {

181 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"name");

182 
	`¥ötf
("\n%†ÂêåÊÑè‰∫Ü‰Ω†ÁöÑÂ•ΩÂèãËØ∑Ê±Ç\n",
ôem
 -> 
vÆue°rög
);

183 
	`Frõnds_Srv_RecvAdd
(
JSON
);

184 
	`cJSON_Dñëe
(
roŸ
);

187 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"fname");

189 
	`¥ötf
("%s\n",
JSON
);

190 
	`¥ötf
("\n%†ÊãíÁªù‰∫Ü‰Ω†ÁöÑÂ•ΩÂèãËØ∑Ê±Ç\n",
ôem
 -> 
vÆue°rög
);

191 
	`cJSON_Dñëe
(
roŸ
);

193 
	}
}

	@Client/Service/Friends_Srv.h

8 #i‚de‡
_FRIENDS_SRV_H


9 
	#_FRIENDS_SRV_H


	)

11 
	~"../Comm⁄/cJSON.h
"

12 
	~"C⁄√˘.h
"

13 
	~"../Comm⁄/Li°.h
"

19 
	s‰õnds
{

20 
	muid
;

21 
	m«me
[30];

22 
	m£x
;

23 
	mis_vù
;

24 
	mis_fﬁlow
;

25 
	mis_⁄löe
;

26 
	mNewMsgNum
;

27 
	m°©e
;

28 
‰õnds
 *
	m√xt
;

29 } 
	t‰õnds_t
;

35 
Frõnds_Srv_SídAdd
(c⁄° *
‚ame
);

37 
Frõnds_Srv_RecvAdd
(c⁄° *
JSON
);

39 
Frõnds_Srv_GëLi°
();

42 
Frõnds_Srv_Aµly
(
uid
 ,
fuid
 ,
is_agªe
);

45 
Frõnds_Srv_AµlyRes
(c⁄° *
JSON
);

	@Client/Service/Group_Srv.c

8 
	~<°dio.h
>

9 
	~<°dlib.h
>

10 
	~<°rög.h
>

11 
	~<±hªad.h
>

12 
	~<sys/sockë.h
>

13 
	~"Group_Srv.h
"

14 
	~"Frõnds_Srv.h
"

15 
	~"../Comm⁄/cJSON.h
"

16 
	~"../Comm⁄/Comm⁄.h
"

17 
	~"../Comm⁄/Li°.h
"

18 
	#MSG_LEN
 1024

	)

20 
gl_uid
;

21 
sock_fd
;

22 
my_muãx
;

23 
masßge
[1024];

24 
‰õnds_t
 *
FrõndsLi°
;

25 
group_t
 *
curGroup
;

26 
group_t
 *
	gGroupLi°
;

28 
	$Group_Srv_Cª©e
(c⁄° *
g«me
){

29 
πn
 = 0;

30 
cJSON
 *
roŸ
 = 
	`cJSON_Cª©eObje˘
();

31 
cJSON
 *
ôem
 = 
	`cJSON_Cª©eSåög
("c");

32 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"ty≥" ,
ôem
);

33 
ôem
 = 
	`cJSON_Cª©eSåög
(
g«me
);

34 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"g«me",
ôem
);

35 
ôem
 = 
	`cJSON_Cª©eNumbî
(
gl_uid
);

36 
	`cJSON_AddIãmToObje˘
(
roŸ
, "uid" ,
ôem
);

37 *
out
 = 
	`cJSON_Pröt
(
roŸ
);

38 
	`cJSON_Dñëe
(
roŸ
);

39 if(
	`£nd
(
sock_fd
 ,
out
 ,
MSG_LEN
 ,0) <= 0){

40 
	`‰ì
(
out
);

41 
	`≥º‹
("send");

44 
	`‰ì
(
out
);

45 
	`My_Lock
();

46 
roŸ
 = 
	`cJSON_P¨£
(
masßge
);

47 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"res");

48 
ªs
 = 
ôem
 -> 
vÆueöt
;

49 if(
ªs
){

50 
	`¥ötf
("Áæ§ÂàõÂª∫ÊàêÂäü!");

51 
	`gëch¨
();

52 
πn
 = 1;

54 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"reason");

55 
	`¥ötf
("ÂàõÂª∫Â§±Ë¥• :%†",
ôem
 -> 
vÆue°rög
);

56 
	`gëch¨
();

57 
πn
 = 0;

59 
	`cJSON_Dñëe
(
roŸ
);

60 
	`My_U∆ock
();

61  
πn
;

62 
	}
}

63 
	$Group_Srv_GëLi°
(){

64 
πn
;

65 if(
NULL
 !
GroupLi°
){

66 
	`Li°_De°roy
(
GroupLi°
 ,
group_t
);

68 
	`Li°_Inô
(
GroupLi°
 ,
group_t
);

69 
cJSON
 *
roŸ
 = 
	`cJSON_Cª©eObje˘
();

70 
cJSON
 *
ôem
 = 
	`cJSON_Cª©eSåög
("g");

71 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"ty≥" ,
ôem
);

72 
ôem
 = 
	`cJSON_Cª©eNumbî
(
gl_uid
);

73 
	`cJSON_AddIãmToObje˘
(
roŸ
, "uid" ,
ôem
);

74 *
out
 = 
	`cJSON_Pröt
(
roŸ
);

75 if(
	`£nd
(
sock_fd
 ,(*)
out
 ,
MSG_LEN
,0) < 0){

76 
	`≥º‹
("send: ËØ∑Ê±ÇÊúçÂä°Âô®Â§±Ë¥•");

79 
	`‰ì
(
out
);

80 
	`cJSON_Dñëe
(
roŸ
);

81 
group_t
 *
√wNode
 = 
NULL
;

84 
	`My_Lock
();

85 
roŸ
 = 
	`cJSON_P¨£
(
masßge
);

86 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"gid");

87 if–
ôem
 -> 
vÆueöt
 == 0){

88 
	`My_U∆ock
();

92 
√wNode
 = (
group_t
 *)
	`mÆloc
((group_t));

93 
√wNode
 -> 
gid
 = 
ôem
 -> 
vÆueöt
;

94 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"name");

95 
	`°r˝y
(
√wNode
 -> 
«me
 ,
ôem
 -> 
vÆue°rög
);

96 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"owner");

97 
√wNode
 -> 
ow√r
 = 
ôem
 -> 
vÆueöt
;

98 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"num");

99 
√wNode
 -> 
num
 = 
ôem
 -> 
vÆueöt
;

100 
	`cJSON_Dñëe
(
roŸ
);

101 
√wNode
 -> 
√xt
 = 
NULL
;

102 
	`Li°_AddHód
(
GroupLi°
 ,
√wNode
);

103 
	`My_U∆ock
();

107 
	`My_Lock
();

108 
roŸ
 = 
	`cJSON_P¨£
(
masßge
);

109 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
,"res");

110 
ªs
 = 
ôem
 -> 
vÆueöt
;

111 if(
ªs
 == 1){

112 
πn
 = 1;

114 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"reason");

115 
	`¥ötf
("ËØ∑Ê±ÇÂ§±Ë¥•: %s",
ôem
 -> 
vÆue°rög
);

116 
πn
 = 0;

118 
	`cJSON_Dñëe
(
roŸ
);

119 
	`My_U∆ock
();

121  
πn
;

122 
	}
}

123 
	$Group_Srv_AddMembî
(
gid
 ,
uid
){

125 
cJSON
 *
roŸ
 = 
	`cJSON_Cª©eObje˘
();

126 
cJSON
 *
ôem
 = 
	`cJSON_Cª©eSåög
("M");

127 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"ty≥" ,
ôem
);

128 
ôem
 = 
	`cJSON_Cª©eNumbî
(
gid
);

129 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"gid",
ôem
);

130 
ôem
 = 
	`cJSON_Cª©eNumbî
(
uid
);

131 
	`cJSON_AddIãmToObje˘
(
roŸ
 , "uid" ,
ôem
);

132 *
out
 = 
	`cJSON_Pröt
(
roŸ
);

133 
	`cJSON_Dñëe
(
roŸ
);

134 if(
	`£nd
(
sock_fd
 ,
out
 ,
MSG_LEN
 ,0) <= 0){

135 
	`‰ì
(
out
);

136 
	`≥º‹
("send");

139 
	`‰ì
(
out
);

140 
	`My_Lock
();

141 
roŸ
 = 
	`cJSON_P¨£
(
masßge
);

142 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"res");

143 
ªs
 = 
ôem
 -> 
vÆueöt
;

144 if(
ªs
){

145 
	`¥ötf
("ÈÇÄËØ∑ÊàêÂäü!");

146 
	`gëch¨
();

148 
	`¥ötf
("ÈÇÄËØ∑Â§±Ë¥•,ËØ•ÊàêÂëòÂ∑≤Âú®ÂΩìÂâçÁæ§ËÅä‰∏≠!");

149 
	`gëch¨
();

151 
	`cJSON_Dñëe
(
roŸ
);

152 
	`My_U∆ock
();

154 
	}
}

155 
	$Group_Srv_Joö
(c⁄° * 
masßge
){

156 
group_t
 *
√wNode
 =

157 (
group_t
 *)
	`mÆloc
((group_t));

158 
cJSON
 *
roŸ
 = 
	`cJSON_P¨£
(
masßge
);

159 
cJSON
 *
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
,"gid");

160 
√wNode
 -> 
gid
 = 
ôem
 -> 
vÆueöt
;

161 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"name");

162 
	`°r˝y
(
√wNode
 -> 
«me
 ,
ôem
 -> 
vÆue°rög
);

163 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"owner");

164 
√wNode
 -> 
ow√r
 = 
ôem
 -> 
vÆueöt
;

165 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"num");

166 
√wNode
 -> 
num
 = 
ôem
 -> 
vÆueöt
;

167 
√wNode
 -> 
NewMsgNum
 = 0;

168 
√wNode
 -> 
√xt
 = 
NULL
;

169 
	`Li°_AddHód
(
GroupLi°
 ,
√wNode
);

170 if(
√wNode
 -> 
ow√r
 =
gl_uid
) ;

171 
‰õnds_t
 *
f
;

172 
	`Li°_F‹Each
(
FrõndsLi°
 ,
f
){

173 if(
√wNode
 -> 
ow√r
 =
f
 -> 
uid
){

174 
	`¥ötf
("\n%†ÈÇÄËØ∑‰Ω†Âä†ÂÖ•‰∫ÜÁæ§ËÅä %s\n",
f
 -> 
«me
 ,
√wNode
 ->Çame);

178 
	}
}

180 
	$Group_Srv_ShowMembî
(c⁄° *
masßge
){

181 
cJSON
 *
roŸ
 ,*
ôem
;

182 
‰õnds_t
 
GroupMembî
;

183 
roŸ
 = 
	`cJSON_P¨£
(
masßge
);

184 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"name");

185 
	`°r˝y
(
GroupMembî
.
«me
 ,
ôem
 -> 
vÆue°rög
);

186 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"sex");

187 
GroupMembî
.
£x
 = 
ôem
 -> 
vÆueöt
;

188 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"is_online");

189 
GroupMembî
.
is_⁄löe
 = 
ôem
 -> 
vÆueöt
;

190 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"is_vip");

191 
GroupMembî
.
is_vù
 = 
ôem
 -> 
vÆueöt
;

192 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"permission");

193 *
is_⁄löe
[2] = {"‚óè","\e[32m‚óè\e[0m"};

194 *
is_vù
[2] = {"","\e[31m"};

195 *
£x
[2] = {"\e[35m‚ôÄ\e[0m","\e[36m‚ôÇ\e[0m"};

196 *
≥r
[3] ={"" ,"[\e[32mÁÆ°ÁêÜÂëò\e[0m]" ,"[\e[33mÁæ§‰∏ª\e[0m]"};

197 
	`¥ötf
(" %s %s%s\e[0m %s %s\n" ,

198 
is_⁄löe
[
GroupMembî
.is_online] ,

199 
is_vù
[
GroupMembî
.is_vip],

200 
GroupMembî
.
«me
 ,
£x
[GroupMember.sex],

201 
≥r
[
ôem
 -> 
vÆueöt
]);

202 
	`cJSON_Dñëe
(
roŸ
);

204 
	}
}

206 
	$Group_Srv_GëMembî
(
gid
){

207 
cJSON
 *
roŸ
 = 
	`cJSON_Cª©eObje˘
();

208 
	`cJSON_AddSåögToObje˘
(
roŸ
 ,"type" ,"m");

209 
	`cJSON_AddNumbîToObje˘
(
roŸ
 ,"gid" ,
gid
);

210 * 
out
 = 
	`cJSON_Pröt
(
roŸ
);

211 
	`cJSON_Dñëe
(
roŸ
);

212 if(
	`£nd
(
sock_fd
 ,
out
 ,
MSG_LEN
 ,0) <= 0){

213 
	`≥º‹
("send");

215 
	`‰ì
(
out
);

216 
	}
}

218 
	$Group_Srv_Quô
(
group_t
 *
curGroup
){

219 
choi˚
[5];

220 
cJSON
 *
roŸ
 = 
	`cJSON_Cª©eObje˘
();

221 
	`cJSON_AddSåögToObje˘
(
roŸ
 ,"type" ,"Q");

222 
	`cJSON_AddNumbîToObje˘
(
roŸ
 ,"gid" ,
curGroup
 -> 
gid
);

223 if(
curGroup
 -> 
ow√r
 =
gl_uid
){

225 
	`cJSON_AddSåögToObje˘
(
roŸ
 ,"do" ,"Ëß£Êï£");

226 
	`¥ötf
("ÊÇ®ÊòØÁæ§‰∏ª,Á°ÆËÆ§Ëß£Êï£Áæ§ËÅä %†?[yes/no]", 
curGroup
 -> 
«me
);

228 
	`cJSON_AddSåögToObje˘
(
roŸ
 ,"do" ,"ÈÄÄÁæ§");

229 
	`cJSON_AddNumbîToObje˘
(
roŸ
 ,"uid" ,
gl_uid
);

230 
	`¥ötf
("Á°ÆËÆ§Ë¶ÅÈÄÄÂá∫Áæ§ËÅä %†?[yes/no]" ,
curGroup
 -> 
«me
);

232 *
out
 = 
	`cJSON_Pröt
(
roŸ
);

233 
	`cJSON_Dñëe
(
roŸ
);

234 
	`sgës
(
choi˚
 ,5);

235 if(
	`°rcmp
(
choi˚
 ,"yes") != 0) {

236 
	`‰ì
(
out
);

239 if(
	`£nd
(
sock_fd
 ,
out
 ,
MSG_LEN
 ,0) <= 0){

240 
	`≥º‹
("send");

242 
	`‰ì
(
out
);

243 
	`Li°_FªeNode
(
GroupLi°
 ,
curGroup
 ,
group_t
);

244 
	`¥ötf
("Êìç‰ΩúÊàêÂäüÔºÅ");

245 
	`gëch¨
();

246 
	}
}

248 
	$Group_Srv_Dñëe
(c⁄° *
masßge
){

249 
cJSON
 *
roŸ
 = 
	`cJSON_P¨£
(
masßge
);

250 
cJSON
 *
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"gid");

251 
gid
 = 
ôem
 -> 
vÆueöt
;

252 
	`cJSON_Dñëe
(
roŸ
);

253 
group_t
 *
g
;

254 
	`Li°_F‹Each
(
GroupLi°
 ,
g
){

255 if(
g
 -> 
gid
 == gid){

256 
	`¥ötf
("\nÁæ§‰∏ªÂ∑≤Â∞ÜÁæ§ËÅä %†Ëß£Êï£!\n",
g
 -> 
«me
);

257 
	`Li°_FªeNode
(
GroupLi°
 ,
g
 ,
group_t
);

258 
curGroup
 = 
NULL
;

262 
	}
}

	@Client/Service/Group_Srv.h

8 #i‚de‡
_GROUP_SRV_H


9 
	#_GROUP_SRV_H


	)

10 
	sgroup_t
 {

11 
	mgid
;

12 
	m«me
[30];

13 
	mow√r
;

14 
	mnum
;

15 
	mNewMsgNum
;

16 
group_t
 *
	m√xt
;

17 } 
	tgroup_t
;

20 
Group_Srv_Cª©e
(c⁄° *
g«me
);

22 
Group_Srv_AddMembî
(
gid
 ,
uid
);

24 
Group_Srv_GëLi°
();

30 
Group_Srv_Joö
(c⁄° *
masßge
);

32 
Group_Srv_ShowMembî
(c⁄° *
masßge
);

34 
Group_Srv_GëMembî
(
gid
);

36 
Group_Srv_Quô
(
group_t
 *
curGroup
);

38 
Group_Srv_Dñëe
(c⁄° *
masßge
);

	@Client/View/Account_UI.c

8 
	~<°dio.h
>

9 
	~"Accou¡_UI.h
"

10 
	~"../Comm⁄/Comm⁄.h
"

11 
	~"../Sîvi˚/Accou¡_Srv.h
"

12 
	$Accou¡_UI_SignIn
(){

13 
«me
[30] , 
∑ssw‹d
[30];

14 
£x
;

15 
	`¥ötf
("ËØ∑ËæìÂÖ•Ë¶ÅÊ≥®ÂÜåÁöÑÁî®Êà∑Âêç:");

16 
	`sˇnf
("%30s",
«me
);

17 
	`ffÊush
();

19 
	`¥ötf
("ËØ∑ËæìÂÖ•ÊÄßÂà´(Áî∑/Â•≥):");

20 
	`sˇnf
("%30s",
∑ssw‹d
);

21 
	`ffÊush
();

22 if(
	`°rcmp
(
∑ssw‹d
 ,"Áî∑") == 0){

23 
£x
 = 1;

26 if(
	`°rcmp
(
∑ssw‹d
 ,"Â•≥") == 0){

27 
£x
 = 0;

31 
	`¥ötf
("ÁõÆÂâç‰∏çÂ≠òÂú®ÁöÑÊÄßÂà´...\n");

34 
	`¥ötf
("ËØ∑ËæìÂÖ•ÂØÜÁ†Å:");

35 
	`sˇnf
("%s",
∑ssw‹d
);

36 
	`ffÊush
();

37  
	`Accou¡_Srv_SignIn
(
«me
 ,
£x
 ,
∑ssw‹d
);

38 
	}
}

40 
	$Accou¡_UI_Logö
(){

41 
«me
[30] , 
∑ssw‹d
[30];

42 
	`¥ötf
("ËØ∑ËæìÂÖ•Áî®Êà∑Âêç:");

43 
	`sˇnf
("%s",
«me
);

44 
	`ffÊush
();

45 
	`¥ötf
("ËØ∑ËæìÂÖ•ÂØÜÁ†Å:");

46 
	`sˇnf
("%s",
∑ssw‹d
);

47 
	`ffÊush
();

48  
	`Accou¡_Srv_Logö
(
«me
 , 
∑ssw‹d
);

50 
	}
}

	@Client/View/Account_UI.h

8 #i‚de‡
_ACCOUNT_UI_H


9 
	#_ACCOUNT_UI_H


	)

11 
	~<°dio.h
>

12 
	~<°dlib.h
>

13 
	~<°rög.h
>

15 
Accou¡_UI_SignIn
();

17 
Accou¡_UI_Logö
();

19 
Accou¡_UI_ChInfo
();

21 
Accou¡_UI_Passw‹d
();

	@Client/View/Chat_UI.c

8 
	~<°dio.h
>

9 
	~<°rög.h
>

10 
	~<uni°d.h
>

11 
	~"Group_UI.h
"

12 
	~"../Comm⁄/Comm⁄.h
"

13 
	~"../Comm⁄/Li°.h
"

14 
	~"../Sîvi˚/Frõnds_Srv.h
"

15 
	~"../Sîvi˚/Ch©_Srv.h
"

16 
	~"../Sîvi˚/Group_Srv.h
"

17 
gl_uid
;

18 
‰õnds_t
 * 
FrõndsLi°
;

19 
group_t
 * 
GroupLi°
;

20 
¥iv©e_msg_t
* 
PriMsgLi°
;

21 
group_msg_t
* 
GroMsgLi°
;

22 
group_t
 *
	gcurGroup
 = 
NULL
;

23 
	$Ch©_UI_Priv©e
(){

24 
‰õnds_t
 *
curFrõnd
 = 
NULL
;

25 
msg
[1000];

26 
‚ame
[30];

27 
‰õnds_t
 * 
f
;

29 
	`¥ötf
("ËØ∑ËæìÂÖ•Â•ΩÂèãÁî®Êà∑Âêç:");

30 
	`sˇnf
("%30s",
‚ame
);

31 
	`ffÊush
();

32 
	`Li°_F‹Each
(
FrõndsLi°
 ,
f
){

34 if(
	`°rcmp
(
f
->
«me
 ,
‚ame
) == 0){

35 
curFrõnd
 = 
f
;

38 if(
curFrõnd
 =
NULL
 ){

39 
	`¥ötf
("%†‰∏çÊòØ‰Ω†ÁöÑÂ•ΩÂèã." , 
‚ame
);

40 
	`gëch¨
();

46 
this_msg_num
;

47 
¥iv©e_msg_t
 * 
m
;

49 
	`sy°em
("clear");

50 
	`¥ötf
( "---------------------------------------\n"

53 
this_msg_num
 = 0;

54 
	`Li°_F‹Each
(
PriMsgLi°
 ,
m
){

55 if(
m
 -> 
‰om_uid
 =
curFrõnd
 -> 
uid
 || m -> from_uid =
gl_uid
){

56 
this_msg_num
 ++;

60 
	`Li°_F‹Each
(
PriMsgLi°
 ,
m
){

61 if–
m
-> 
‰om_uid
 =
curFrõnd
 -> 
uid
 ){

62 if(
this_msg_num
 > 10){

63 
	`Li°_FªeNode
(
PriMsgLi°
 ,
m
 ,
¥iv©e_msg_t
);

64 
this_msg_num
 --;

66 
	`¥ötf
("\t\e[31m%s\e[0m ",
m
->
time
);

67 
	`¥ötf
("%s\n",
m
 -> 
«me
);

68 
	`¥ötf
("\à \e[1m%s\e[0m\n",
m
 -> 
msg
);

71 }if(
m
 -> 
‰om_uid
 =
gl_uid
){

72 if(
this_msg_num
 > 10){

73 
	`Li°_FªeNode
(
PriMsgLi°
 ,
m
 ,
¥iv©e_msg_t
);

74 
this_msg_num
 --;

76 
	`¥ötf
("\t\e[32m%s\e[0m ",
m
->
time
);

77 
	`¥ötf
("Êàë\n");

78 
	`¥ötf
("\à \e[1m%s\e[0m\n",
m
 -> 
msg
);

82 
	`¥ötf
( "---------------------------------------\n"

88 
	`¥ötf
("Ê∂àÊÅØ/ÂäüËÉΩ:");

89 
	`sgës
(
msg
 ,1000);

90 if(*
msg
 == '\0') ;

91 if(
	`°rcmp
(
msg
,"/r") == 0) {

92 
curFrõnd
 -> 
NewMsgNum
 = 0;

94 }if(
	`°rcmp
(
msg
,"/f") == 0){

95 if(
curFrõnd
 -> 
is_⁄löe
 == 0){

96 
	`¥ötf
("ÂΩìÂâçÂ•ΩÂèã‰∏çÂú®Á∫ø,Êó†Ê≥ïÂèëÈÄÅÊñá‰ª∂\n");

97 
	`gëch¨
();

100 
fûíame
[100];

102 
	`¥ötf
("ËØ∑ËæìÂÖ•Êñá‰ª∂Ë∑ØÂæÑ:");

103 
	`sgës
(
fûíame
 ,100);

104 if(*
fûíame
 == '\0') {

107 if(
	`Ch©_Srv_SídFûe
(
fûíame
 ,
curFrõnd
 -> 
uid
)){

108 
	`¥ötf
("Êñá‰ª∂ÂèëÈÄÅÊàêÂäü");

110 
	`gëch¨
();

114 if(
	`°rcmp
(
msg
,"/m") == 0) {

115 
	`Ch©_Srv_GëPriv©eRec
(
curFrõnd
 -> 
uid
);

116 
	`gëch¨
();

118 
	`Ch©_Srv_SídPriv©e
(
curFrõnd
 -> 
uid
,
msg
);

121 
	}
}

123 
	$Ch©_UI_Group
(){

124 
group_t
 *
g
 = 
NULL
;

125 
msg
[1000];

126 
g«me
[30];

128 
	`¥ötf
("ËØ∑ËæìÁæ§ÂêçÁß∞:");

129 
	`sˇnf
("%s",
g«me
);

130 
	`ffÊush
();

131 
	`Li°_F‹Each
(
GroupLi°
 ,
g
){

132 if(
	`°rcmp
(
g
->
«me
 ,
g«me
) == 0){

133 
curGroup
 = 
g
;

136 if(
curGroup
 =
NULL
 ){

137 
	`¥ötf
("‰Ω†‰∏çÂú®Áæ§ËÅä %†‰∏≠" , 
g«me
);

138 
	`gëch¨
();

144 
this_msg_num
;

145 
group_msg_t
 * 
m
;

147 if(
curGroup
 =
NULL
)  ;

148 
	`sy°em
("clear");

149 
	`¥ötf
( "---------------------------------------\n"

152 
this_msg_num
 = 0;

153 
	`Li°_F‹Each
(
GroMsgLi°
 ,
m
){

154 if(
m
 -> 
gid
 =
curGroup
 -> gid || m -> 
‰om_uid
 =
gl_uid
){

155 
this_msg_num
 ++;

159 
	`Li°_F‹Each
(
GroMsgLi°
 ,
m
){

160 if–
m
-> 
gid
 =
curGroup
 -> gid ){

161 if(
this_msg_num
 > 10){

162 
	`Li°_FªeNode
(
GroMsgLi°
 ,
m
 ,
group_msg_t
);

163 
this_msg_num
 --;

165 if(
m
 -> 
‰om_uid
 =
gl_uid
){

166 
	`¥ötf
("\t\e[32m%s\e[0m ",
m
->
time
);

167 
	`¥ötf
("Êàë\n");

168 
	`¥ötf
("\à \e[1m%s\e[0m\n",
m
 -> 
msg
);

170 
	`¥ötf
("\t\e[31m%s\e[0m ",
m
->
time
);

171 
	`¥ötf
("%s\n",
m
 -> 
u«me
);

172 
	`¥ötf
("\à \e[1m%s\e[0m\n",
m
 -> 
msg
);

177 
	`¥ötf
( "---------------------------------------\n"

181 
	`¥ötf
("Ê∂àÊÅØ/ÂäüËÉΩ:");

182 
	`sgës
(
msg
 ,1000);

183 if(*
msg
 == '\0') ;

184 if(
	`°rcmp
(
msg
,"/r") == 0) {

185 
curGroup
 -> 
NewMsgNum
 = 0;

187 }if(
	`°rcmp
(
msg
 ,"/m") == 0){

189 }if(
	`°rcmp
(
msg
 ,"/l") == 0){

190 
	`sy°em
("clear");

191 
	`¥ötf
("Áæ§ÊàêÂëòÂàóË°®(%s):\n", 
curGroup
-> 
«me
);

192 
	`Group_Srv_GëMembî
(
curGroup
 -> 
gid
);

194 
	`¶ìp
(1);

195 
	`gëch¨
();

196 }if(
	`°rcmp
(
msg
 ,"/a") == 0){

198 
	`Group_UI_AddMembî
(
curGroup
 -> 
gid
);

199 }if(
	`°rcmp
(
msg
 ,"/q") == 0){

201 
	`Group_Srv_Quô
(
curGroup
);

202 
curGroup
 = 
NULL
;

205 
	`Ch©_Srv_SídGroup
(
curGroup
 -> 
gid
,
msg
);

208 
	}
}

	@Client/View/Chat_UI.h

8 #i‚de‡
_CHAT_UI_H


9 
	#_CHAT_UI_H


	)

11 
Ch©_UI_Priv©e
();

13 
Ch©_UI_Group
();

	@Client/View/Friends_UI.c

8 
	~<°dio.h
>

9 
	~"Frõnds_UI.h
"

10 
	~"Accou¡_UI.h
"

11 
	~"../Sîvi˚/Frõnds_Srv.h
"

12 
	~"../Comm⁄/Li°.h
"

14 
‰õnds_t
 *
FrõndsLi°
;

15 
PriMsgNum
;

16 
gl_uid
;

17 
	gf_num
 = 0 ,
	g⁄löe_num
 = 0 ,
	ga_num
 = 0;

18 
	$Frõnds_UI_ShowLi°
(){

19 
‰õnds_t
 *
curPos
 = 
NULL
;

20 
	`¥ötf
("‚ñ∂ ÊàëÁöÑÂ•ΩÂèã(%d/%d)\n",
⁄löe_num
 ,
f_num
);

21 
f_num
 = 
⁄löe_num
 = 0;

22 *
is_⁄löe
[2] = {"‚óè","\e[32m‚óè\e[0m"};

23 *
is_vù
[2] = {"","\e[31m"};

24 *
£x
[2] = {"\e[35m‚ôÄ\e[0m","\e[36m‚ôÇ\e[0m"};

25 *
is_fﬁlow
[2] = {"","\e[31m‚ô•\e[0m"};

26 
is_msg
[2][20]={"",""};

27 
	`Li°_F‹Each
(
FrõndsLi°
 ,
curPos
){

28 if(
curPos
 -> 
°©e
 != 1) {

29 
a_num
 ++;

32 
f_num
 ++;

33 if(
curPos
->
is_⁄löe
Ë
⁄löe_num
 ++;

34 
	`•rötf
(
is_msg
[0],"(\e[31m%d\e[0m)" ,
curPos
 -> 
NewMsgNum
);

35 
	`¥ötf
(" %s %s%s\e[0m %s %s %s\n" ,

36 
is_⁄löe
[
curPos
->is_online] ,

37 
is_vù
[
curPos
->is_vip],

38 
curPos
 -> 
«me
 ,
£x
[curPos->sex] ,

39 
is_fﬁlow
[
curPos
->is_follow],

40 
is_msg
[(
curPos
->
NewMsgNum
 == 0)]);

43 
	}
}

44 
	$Frõnds_UI_ShowAµly
(){

46 
	`¥ötf
("‚ñ∂ Áî≥ËØ∑ÂàóË°®(%d)\n" ,
a_num
);

47 
a_num
 = 0;

48 
‰õnds_t
 *
curPos
;

49 
	`Li°_F‹Each
(
FrõndsLi°
 ,
curPos
){

50 if(
curPos
 -> 
°©e
 !0 || curPo†-> 
uid
 =
gl_uid
) ;

51 
	`¥ötf
(" %†Áî≥ËØ∑Âä†‰Ω†‰∏∫Â•ΩÂèã\n",
curPos
->
«me
);

53 
	}
}

56 
	$Frõnds_UI_Add
(){

57 
‚ame
[30];

58 
	`¥ötf
("ËØ∑ËæìÂÖ•ÂæÖÊ∑ªÂä†ÁöÑÂ•ΩÂèãÂêç:");

59 
	`sˇnf
("%30s",
‚ame
);

60 
	`ffÊush
();

61 
‰õnds_t
 *
f
;

62 
	`Li°_F‹Each
(
FrõndsLi°
 ,
f
){

63 if(
	`°rcmp
(
f
->
«me
 ,
‚ame
) == 0) {

64 
	`¥ötf
("%†Â∑≤ÁªèÊòØ‰Ω†ÁöÑÂ•ΩÂèã‰∫Ü.",
‚ame
);

65 
	`gëch¨
();

69 
	`Frõnds_Srv_SídAdd
(
‚ame
);

70 
	}
}

72 
	$Frõnds_UI_Aµly
(){

73 
‰õnds_t
 *
f
;

74 
choi˚
;

75 
	`Li°_F‹Each
(
FrõndsLi°
 ,
f
){

76 if(
f
 -> 
°©e
 != 0) ;

77 
	`¥ötf
("ÊòØÂê¶ÂêåÊÑè %†ÁöÑÂ•ΩÂèãËØ∑Ê±Ç?\nËØ∑ËæìÂÖ•:(y/¿ÂÖ∂‰ªñËøîÂõû)", 
f
->
«me
);

78 
	`sˇnf
("%c",&
choi˚
);

79 if(
choi˚
 == 'y'){

80 
	`Frõnds_Srv_Aµly
(
f
 -> 
uid
 ,
gl_uid
 ,1);

81 
f
 -> 
°©e
 = 1;

82 }if(
choi˚
 == 'n'){

83 
	`Frõnds_Srv_Aµly
(
f
->
uid
 ,
gl_uid
 ,0);

84 
	`Li°_FªeNode
(
FrõndsLi°
 ,
f
 ,
‰õnds_t
);

87 
	}
}

	@Client/View/Friends_UI.h

8 #i‚de‡
_FRIENDS_UI_H


9 
	#_FRIENDS_UI_H


	)

11 
Frõnds_UI_ShowLi°
();

13 
Frõnds_UI_Add
();

15 
Frõnds_UI_Aµly
();

17 
Frõnds_UI_ShowAµly
();

	@Client/View/Group_UI.c

8 
	~<°dio.h
>

9 
	~<°rög.h
>

10 
	~"Group_UI.h
"

11 
	~"../Comm⁄/Comm⁄.h
"

12 
	~"../Comm⁄/Li°.h
"

13 
	~"../Sîvi˚/Group_Srv.h
"

14 
	~"../Sîvi˚/Frõnds_Srv.h
"

16 
group_t
 *
GroupLi°
;

17 
‰õnds_t
 *
FrõndsLi°
;

18 
	$Group_UI_Cª©e
(){

19 
g«me
[30];

20 
	`¥ötf
("ËØ∑ËæìÂÖ•Ë¶ÅÂàõÂª∫ÁöÑÁæ§ÂêçÁß∞:");

21 
	`sgës
(
g«me
,30);

22 
	`Group_Srv_Cª©e
(
g«me
);

23 
	}
}

24 
	$Group_UI_ShowLi°
(){

25 
g_num
 = 0;

26 
	`¥ötf
("‚ñ∂ ÊàëÁöÑÁæ§ËÅä(%d)\n" ,
g_num
);

27 
g_num
 = 0;

28 
group_t
 * 
g
;

29 
	`Li°_F‹Each
(
GroupLi°
 ,
g
){

30 
	`¥ötf
(" %s",
g
 -> 
«me
);

31 if(
g
 -> 
NewMsgNum
 > 0Ë
	`¥ötf
(" (\e[31m%d\e[0m)",g -> NewMsgNum);

32 
	`¥ötf
("\n");

33 
g_num
 ++;

35 
	}
}

37 
	$Group_UI_AddMembî
(
gid
){

38 
«me
[30];

39 
	`¥ötf
("ËØ∑ËæìÂÖ•Ë¶ÅÈÇÄËØ∑ÁöÑÂ•ΩÂèãÂêçÁß∞:");

40 
	`sˇnf
("%30s",
«me
);

41 
	`ffÊush
();

42 
‰õnds_t
 *
f
;

43 
	`Li°_F‹Each
(
FrõndsLi°
 ,
f
){

44 if(
	`°rcmp
(
f
 -> 
«me
 ,name) == 0) ;

46 if(
f
 =
NULL
){

47 
	`¥ötf
("%†‰∏çÊòØ‰Ω†ÁöÑÂ•ΩÂèãÔºåÊó†Ê≥ïÈÇÄËØ∑" ,
«me
);

48 
	`gëch¨
();

51 
	`Group_Srv_AddMembî
(
gid
 ,
f
 -> 
uid
);

52 
	}
}

	@Client/View/Group_UI.h

8 #i‚de‡
_GROUP_UI_H


9 
	#_GROUP_UI_H


	)

10 
Group_UI_ShowLi°
();

12 
Group_UI_Cª©e
();

14 
Group_UI_AddMembî
(
gid
);

	@Client/View/Main_UI.c

8 
	~<°dio.h
>

9 
	~"Maö_UI.h
"

10 
	~"Accou¡_UI.h
"

11 
	~"Frõnds_UI.h
"

12 
	~"Ch©_UI.h
"

13 
	~"Group_UI.h
"

14 
	~"../Sîvi˚/Accou¡_Srv.h
"

15 
	~"../Sîvi˚/Frõnds_Srv.h
"

16 
	~"../Sîvi˚/Ch©_Srv.h
"

17 
	~"../Sîvi˚/Group_Srv.h
"

18 
	ggl_uid
;

19 
	$Maö_UI_Hñlo
(){

20 
choi˚
;

22 if(
gl_uid
 > 0){

23 
	`Maö_UI_Míu
();

25 
	`sy°em
("clear");

26 
	`¥ötf
(

30 
	`¥ötf
(

37 
	`sˇnf
("%d" , &
choi˚
);

38 
	`ffÊush
();

39 
choi˚
){

41 
gl_uid
 = 
	`Accou¡_UI_Logö
();

44 
	`Accou¡_UI_SignIn
();

53 
	}
}

55 
	$Maö_UI_Míu
(){

56 
	`Ch©_Srv_InôLi°
();

57 
	`Frõnds_Srv_GëLi°
();

58 
	`Group_Srv_GëLi°
();

59 
choi˚
;

61 
	`sy°em
("clear");

62 
	`Frõnds_UI_ShowLi°
();

63 
	`Group_UI_ShowLi°
();

64 
	`Frõnds_UI_ShowAµly
();

65 
	`¥ötf
( "--------------------------------\n");

66 
	`¥ötf
( "1.ÈÄâÊã©Â•ΩÂèã|2.ÈÄâÊã©Áæ§ËÅä|3.Â§ÑÁêÜÁî≥ËØ∑\n"

68 
	`¥ötf
( "--------------------------------\n"

71 
	`sˇnf
("%c",&
choi˚
);

72 if(
choi˚
 == '\n') ;

73 
	`ffÊush
();

74 
choi˚
){

76 
	`Ch©_UI_Priv©e
();

79 
	`Ch©_UI_Group
();

82 
	`Frõnds_UI_Aµly
();

85 
	`Frõnds_UI_Add
();

88 
	`Group_UI_Cª©e
();

91 
	`Accou¡_Srv_Out
(
gl_uid
);

94 }
choi˚
 != '6');

95 
	}
}

	@Client/View/Main_UI.h

8 #i‚de‡
_MAIN_UI_H


9 
	#_MAIN_UI_H


	)

11 
Maö_UI_Hñlo
();

13 
Maö_UI_Míu
();

	@Client/chat_room_cli.c

8 
	~<°dio.h
>

9 
	~<uni°d.h
>

10 
	~<°rög.h
>

11 
	~<f˙é.h
>

12 
	~<°dlib.h
>

13 
	~"Comm⁄/cJSON.h
"

14 
	~"Võw/Maö_UI.h
"

15 
	~"Sîvi˚/C⁄√˘.h
"

16 
sock_fd
;

17 
	ggl_uid
;

18 
	$maö
(){

19 
buf
[1024];

20 
ho°
[50];

21 
fd
 = 
	`›í
("c⁄fig.js⁄" ,
O_RDONLY
);

22 if(
fd
 == -1) {

23 
	`¥ötf
("ÈÖçÁΩÆÊñá‰ª∂ÊâìÂºÄÂ§±Ë¥•!");

24 
	`gëch¨
();

25 
	`exô
(0);

27 
	`ªad
(
fd
 ,
buf
 ,1024);

28 
cJSON
* 
roŸ
 = 
	`cJSON_P¨£
(
buf
);

29 
cJSON
* 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"host");

30 
	`°r˝y
(
ho°
 ,
ôem
 -> 
vÆue°rög
);

31 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"port");

32 
p‹t
 = 
ôem
 -> 
vÆueöt
;

33 
	`˛o£
(
fd
);

34 
	`cJSON_Dñëe
(
roŸ
);

35 
	`C⁄√˘
(
ho°
 ,
p‹t
);

36 
	`Maö_UI_Hñlo
();

37 
	`˛o£
(
sock_fd
);

38 
	}
}

	@Server/Common/Common.c

8 
	~<°dio.h
>

9 
	~<°rög.h
>

10 
	~<°dlib.h
>

11 
	~"Comm⁄.h
"

12 *
	$sgës
(*
°r
,
Àn
){

13 
	`fgës
(
°r
,
Àn
,
°dö
);

14 if(
°r
[
	`°æí
(str)-1]=='\n'){

15 
°r
[
	`°æí
(str)-1]='\0';

17  
°r
;

18 
	}
}

19 
	$ffÊush
(){

20 
ch
;

21 (
ch
=
	`gëch¨
())!='\n' && ch!=
EOF
){

24 
	}
}

32 
	$D©eCmp
(
u£r_d©e_t
 
dt1
, u£r_d©e_à
dt2
) {

33 i‡(
dt1
.
yór
 < 
dt2
.year)

35 i‡(
dt1
.
yór
 =
dt2
.yó∏&& dt1.
m⁄th
 < dt2.month)

37 i‡(
dt1
.
yór
 =
dt2
.yó∏&& dt1.
m⁄th
 =dt2.m⁄th && dt1.
day
 < dt2.day)

39 i‡(
dt1
.
yór
 =
dt2
.yó∏&& dt1.
m⁄th
 == dt2.month

40 && 
dt1
.
day
 =
dt2
.day)

44 
	}
}

47 
u£r_d©e_t
 
	$D©eNow
() {

48 
u£r_d©e_t
 
curD©e
;

49 
time_t
 
now
;

50 
tm
 *
timeNow
;

51 
	`time
(&
now
);

52 
timeNow
 = 
	`loˇ…ime
(&
now
);

53 
curD©e
.
yór
=
timeNow
->
tm_yór
+1900;

54 
curD©e
.
m⁄th
=
timeNow
->
tm_m⁄
+1;

55 
curD©e
.
day
=
timeNow
->
tm_mday
;

57  
curD©e
;

58 
	}
}

61 
u£r_time_t
 
	$TimeNow
(){

62 
u£r_time_t
 
curTime
;

63 
time_t
 
now
;

64 
tm
 *
timeNow
;

65 
	`time
(&
now
);

66 
timeNow
 = 
	`loˇ…ime
(&
now
);

67 
curTime
.
hour
=
timeNow
->
tm_hour
;

68 
curTime
.
möuã
=
timeNow
->
tm_mö
;

69 
curTime
.
£c⁄d
=
timeNow
->
tm_£c
;

70  
curTime
;

71 
	}
}

	@Server/Common/Common.h

8 #i‚de‡
_COMMON_H


9 
	#_COMMON_H


	)

10 
	~<°dio.h
>

11 
	~<time.h
>

14 
	myór
;

15 
	mm⁄th
;

16 
	mday
;

17 }
	tu£r_d©e_t
;

20 
	mhour
;

21 
	mmöuã
;

22 
	m£c⁄d
;

23 }
	tu£r_time_t
;

27 *
sgës
(*
°r
,
Àn
);

30 
ffÊush
();

33 
D©eCmp
(
u£r_d©e_t
 
dt1
, u£r_d©e_à
dt2
);

36 
u£r_d©e_t
 
D©eNow
();

39 
u£r_time_t
 
TimeNow
();

	@Server/Common/List.h

17 #i‚de‡
LIST_H_


18 
	#LIST_H_


	)

20 
	~<°dlib.h
>

21 
	~<as£π.h
>

26 
	#Li°_Inô
(
li°
, 
li°_node_t
Ë{ \

	)

27 
	gli°
=(
li°_node_t
*)
mÆloc
((list_node_t)); \

28 (
	gli°
)->
	g√xt
=
NULL
; \

32 
	#Li°_Fªe
(
li°
, 
li°_node_t
Ë{ \

	)

33 
as£π
(
NULL
!=
li°
); \

34 
li°_node_t
 *
	gtmpPå
; \

35 
	gNULL
!=(
tmpPå
=(
li°
)->
√xt
)){ \

36 (
li°
)->
√xt
=
tmpPå
->next; \

37 
‰ì
(
tmpPå
); \

42 
	#Li°_De°roy
(
li°
, 
li°_node_t
Ë{ \

	)

43 
as£π
(
NULL
!=
li°
); \

44 
Li°_Fªe
(
li°
, 
li°_node_t
) \

45 
‰ì
(
li°
); \

46 (
	gli°
)=
NULL
; \

52 
	#Li°_F‹Each
(
li°
, 
curPos
Ë\

	)

53  
	gcurPos
 = (
li°
)->
√xt
; \

54 
	gcurPos
 !
NULL
; \

55 
	gcurPos
=
curPos
->
√xt
 \

61 
	#Li°_AddHód
(
li°
, 
√wNode
Ë{ \

	)

62 (
	g√wNode
)->
	g√xt
=(
li°
)->
√xt
; \

63 (
	gli°
)->
	g√xt
=
√wNode
; \

69 
	#Li°_AddTaû
(
li°
, 
curPos
 ,
√wNode
Ë{ \

	)

70 
	gcurPos
 = (
li°
); ;curPos=
curPos
->
√xt
){ \

71 if((
curPos
)->
√xt
 =
NULL
){ \

72 (
curPos
)->
√xt
 = (
√wNode
); \

80 
	#Li°_In£πBef‹e
(
node
, 
√wNode
Ë{ \

	)

81 (
	g√wNode
)->
	g¥ev
=(
node
)->
¥ev
; \

82 (
	gnode
)->
	g¥ev
->
	g√xt
=
√wNode
; \

83 (
	gnode
)->
	g¥ev
=
√wNode
; \

84 (
	g√wNode
)->
	g√xt
=
node
; \

88 
	#Li°_In£πA·î
(
node
, 
√wNode
Ë{ \

	)

89 (
	g√wNode
)->
	g√xt
=
node
->
√xt
; \

90 (
	gnode
)->
	g√xt
=
√wNode
; \

94 
	#Li°_IsEm±y
(
li°
Ë((÷i°Ë!
NULL
)

	)

98 
	#Li°_FªeNode
(
hód
 ,
node
,
li°_node_t
Ë{ \

	)

99 
as£π
(
NULL
!=
node
); \

100 if(
	gnode
 -> 
	g√xt
 !
NULL
){ \

101 
li°_node_t
 *
ãmp
 = 
node
->
√xt
; \

102 
mem˝y
(
node
,
ãmp
,(
li°_node_t
)); \

103 
‰ì
(
ãmp
); \

105 
li°_node_t
 *
	gãmp
 = 
hód
; \

106 
	gãmp
 -> 
	g√xt
 !
node
) \

107 
ãmp
 =Åem∞-> 
√xt
; \

108 
	gãmp
 -> 
	g√xt
 = 
NULL
; \

109 
‰ì
(
node
); \

110 
	gnode
 = 
NULL
; \

	@Server/Common/cJSON.c

26 
	~<°rög.h
>

27 
	~<°dio.h
>

28 
	~<m©h.h
>

29 
	~<°dlib.h
>

30 
	~<Êﬂt.h
>

31 
	~<limôs.h
>

32 
	~<˘y≥.h
>

33 
	~"cJSON.h
"

35 c⁄° *
	gï
;

37 c⁄° *
	$cJSON_GëEº‹På
(Ë{ 
ï
;
	}
}

39 
	$cJSON_°rˇ£cmp
(c⁄° *
s1
,c⁄° *
s2
)

41 i‡(!
s1
Ë (s1==
s2
)?0:1;if (!s2)  1;

42 ; 
	`tﬁowî
(*
s1
Ë=tﬁowî(*
s2
); ++s1, ++s2) if(*s1 == 0)  0;

43  
	`tﬁowî
(*(c⁄° *)
s1
Ë-Åﬁowî(*(c⁄° *)
s2
);

44 
	}
}

46 *(*
	gcJSON_mÆloc
)(
size_t
 
	gsz
Ë
mÆloc
;

47 (*
cJSON_‰ì
)(*
±r
Ë
‰ì
;

49 * 
	$cJSON_°rdup
(c⁄° * 
°r
)

51 
size_t
 
Àn
;

52 * 
c›y
;

54 
Àn
 = 
	`°æí
(
°r
) + 1;

55 i‡(!(
c›y
 = (*)
	`cJSON_mÆloc
(
Àn
)))  0;

56 
	`mem˝y
(
c›y
,
°r
,
Àn
);

57  
c›y
;

58 
	}
}

60 
	$cJSON_InôHooks
(
cJSON_Hooks
* 
hooks
)

62 i‡(!
hooks
) {

63 
cJSON_mÆloc
 = 
mÆloc
;

64 
cJSON_‰ì
 = 
‰ì
;

68 
cJSON_mÆloc
 = (
hooks
->
mÆloc_‚
)?hooks->mÆloc_‚:
mÆloc
;

69 
cJSON_‰ì
 = (
hooks
->
‰ì_‚
)?hooks->‰ì_‚:
‰ì
;

70 
	}
}

73 
cJSON
 *
	$cJSON_New_Iãm
()

75 
cJSON
* 
node
 = (cJSON*)
	`cJSON_mÆloc
((cJSON));

76 i‡(
node
Ë
	`mem£t
“ode,0,(
cJSON
));

77  
node
;

78 
	}
}

81 
	$cJSON_Dñëe
(
cJSON
 *
c
)

83 
cJSON
 *
√xt
;

84 
c
)

86 
√xt
=
c
->next;

87 i‡(!(
c
->
ty≥
&
cJSON_IsRe„ªn˚
Ë&& c->
chûd
Ë
	`cJSON_Dñëe
(c->child);

88 i‡(!(
c
->
ty≥
&
cJSON_IsRe„ªn˚
Ë&& c->
vÆue°rög
Ë
	`cJSON_‰ì
(c->valuestring);

89 i‡(!(
c
->
ty≥
&
cJSON_SåögIsC⁄°
Ë&& c->
°rög
Ë
	`cJSON_‰ì
(c->string);

90 
	`cJSON_‰ì
(
c
);

91 
c
=
√xt
;

93 
	}
}

96 c⁄° *
	$∑r£_numbî
(
cJSON
 *
ôem
,c⁄° *
num
)

98 
n
=0,
sign
=1,
sˇÀ
=0;
subsˇÀ
=0,
signsubsˇÀ
=1;

100 i‡(*
num
=='-'Ë
sign
=-1,num++;

101 i‡(*
num
=='0')Çum++;

102 i‡(*
num
>='1' && *num<='9'Ëdÿ
n
=(n*10.0)+(*num++ -'0'); *num>='0' && *num<='9');

103 i‡(*
num
=='.' &&Çum[1]>='0' &&Çum[1]<='9'Ë{num++; dÿ
n
=“*10.0)+(*num++ -'0'),
sˇÀ
--; *num>='0' && *num<='9');}

104 i‡(*
num
=='e' || *num=='E')

105 { 
num
++;i‡(*num=='+'Ënum++; i‡(*num=='-'Ë
signsubsˇÀ
=-1,num++;

106 *
num
>='0' && *num<='9'Ë
subsˇÀ
=(subscale*10)+(*num++ - '0');

109 
n
=
sign
*n*
	`pow
(10.0,(
sˇÀ
+
subsˇÀ
*
signsubsˇÀ
));

111 
ôem
->
vÆuedoubÀ
=
n
;

112 
ôem
->
vÆueöt
=()
n
;

113 
ôem
->
ty≥
=
cJSON_Numbî
;

114  
num
;

115 
	}
}

117 
	$pow2gt
 (
x
Ë{ --x; x|=x>>1; x|=x>>2; x|=x>>4; x|=x>>8; x|=x>>16;  x+1; 
	}
}

119 °ru˘ {*
	mbuf„r
; 
	mÀngth
; 
	moff£t
; } 
	t¥ötbuf„r
;

121 * 
	$ísuª
(
¥ötbuf„r
 *
p
,
√eded
)

123 *
√wbuf„r
;
√wsize
;

124 i‡(!
p
 || !p->
buf„r
)  0;

125 
√eded
+=
p
->
off£t
;

126 i‡(
√eded
<=
p
->
Àngth
ËÖ->
buf„r
+p->
off£t
;

128 
√wsize
=
	`pow2gt
(
√eded
);

129 
√wbuf„r
=(*)
	`cJSON_mÆloc
(
√wsize
);

130 i‡(!
√wbuf„r
Ë{
	`cJSON_‰ì
(
p
->
buf„r
);p->
Àngth
=0,p->buffer=0; 0;}

131 i‡(
√wbuf„r
Ë
	`mem˝y
“ewbuf„r,
p
->
buf„r
,p->
Àngth
);

132 
	`cJSON_‰ì
(
p
->
buf„r
);

133 
p
->
Àngth
=
√wsize
;

134 
p
->
buf„r
=
√wbuf„r
;

135  
√wbuf„r
+
p
->
off£t
;

136 
	}
}

138 
	$upd©e
(
¥ötbuf„r
 *
p
)

140 *
°r
;

141 i‡(!
p
 || !p->
buf„r
)  0;

142 
°r
=
p
->
buf„r
+p->
off£t
;

143  
p
->
off£t
+
	`°æí
(
°r
);

144 
	}
}

147 *
	$¥öt_numbî
(
cJSON
 *
ôem
,
¥ötbuf„r
 *
p
)

149 *
°r
=0;

150 
d
=
ôem
->
vÆuedoubÀ
;

151 i‡(
d
==0)

153 i‡(
p
Ë
°r
=
	`ísuª
(p,2);

154 
°r
=(*)
	`cJSON_mÆloc
(2);

155 i‡(
°r
Ë
	`°r˝y
(str,"0");

157 i‡(
	`Ábs
((()
ôem
->
vÆueöt
)-
d
)<=
DBL_EPSILON
 && d<=
INT_MAX
 && d>=
INT_MIN
)

159 i‡(
p
Ë
°r
=
	`ísuª
(p,21);

160 
°r
=(*)
	`cJSON_mÆloc
(21);

161 i‡(
°r
Ë
	`•rötf
(°r,"%d",
ôem
->
vÆueöt
);

165 i‡(
p
Ë
°r
=
	`ísuª
(p,64);

166 
°r
=(*)
	`cJSON_mÆloc
(64);

167 i‡(
°r
)

169 i‡(
	`Ábs
(
	`Êo‹
(
d
)-d)<=
DBL_EPSILON
 && fabs(d)<1.0e60)
	`•rötf
(
°r
,"%.0f",d);

170 i‡(
	`Ábs
(
d
)<1.0e-6 || fabs(d)>1.0e9Ë
	`•rötf
(
°r
,"%e",d);

171 
	`•rötf
(
°r
,"%f",
d
);

174  
°r
;

175 
	}
}

177 
	$∑r£_hex4
(c⁄° *
°r
)

179 
h
=0;

180 i‡(*
°r
>='0' && *°r<='9'Ë
h
+=(*str)-'0'; if (*str>='A' && *str<='F') h+=10+(*str)-'A'; if (*str>='a' && *str<='f') h+=10+(*str)-'a';  0;

181 
h
=h<<4;
°r
++;

182 i‡(*
°r
>='0' && *°r<='9'Ë
h
+=(*str)-'0'; if (*str>='A' && *str<='F') h+=10+(*str)-'A'; if (*str>='a' && *str<='f') h+=10+(*str)-'a';  0;

183 
h
=h<<4;
°r
++;

184 i‡(*
°r
>='0' && *°r<='9'Ë
h
+=(*str)-'0'; if (*str>='A' && *str<='F') h+=10+(*str)-'A'; if (*str>='a' && *str<='f') h+=10+(*str)-'a';  0;

185 
h
=h<<4;
°r
++;

186 i‡(*
°r
>='0' && *°r<='9'Ë
h
+=(*str)-'0'; if (*str>='A' && *str<='F') h+=10+(*str)-'A'; if (*str>='a' && *str<='f') h+=10+(*str)-'a';  0;

187  
h
;

188 
	}
}

191 c⁄° 
	gfú°ByãM¨k
[7] = { 0x00, 0x00, 0xC0, 0xE0, 0xF0, 0xF8, 0xFC };

192 c⁄° *
	$∑r£_°rög
(
cJSON
 *
ôem
,c⁄° *
°r
)

194 c⁄° *
±r
=
°r
+1;*
±r2
;*
out
;
Àn
=0;
uc
,
uc2
;

195 i‡(*
°r
!='\"'Ë{
ï
=str; 0;}

197 *
±r
!='\"' && *±∏&& ++
Àn
) if (*ptr++ == '\\')Ötr++;

199 
out
=(*)
	`cJSON_mÆloc
(
Àn
+1);

200 i‡(!
out
)  0;

202 
±r
=
°r
+1;
±r2
=
out
;

203 *
±r
!='\"' && *ptr)

205 i‡(*
±r
!='\\'Ë*
±r2
++=*ptr++;

208 
±r
++;

209 *
±r
)

211 'b': *
±r2
++='\b'; ;

212 'f': *
±r2
++='\f'; ;

213 'n': *
±r2
++='\n'; ;

214 'r': *
±r2
++='\r'; ;

215 't': *
±r2
++='\t'; ;

217 
uc
=
	`∑r£_hex4
(
±r
+1);ptr+=4;

219 i‡((
uc
>=0xDC00 && uc<=0xDFFF) || uc==0) ;

221 i‡(
uc
>=0xD800 && uc<=0xDBFF)

223 i‡(
±r
[1]!='\\' ||Ötr[2]!='u') ;

224 
uc2
=
	`∑r£_hex4
(
±r
+3);ptr+=6;

225 i‡(
uc2
<0xDC00 || uc2>0xDFFF) ;

226 
uc
=0x10000 + (((uc&0x3FF)<<10Ë| (
uc2
&0x3FF));

229 
Àn
=4;i‡(
uc
<0x80ËÀn=1;i‡(uc<0x800ËÀn=2;i‡(uc<0x10000ËÀn=3; 
±r2
+=len;

231 
Àn
) {

232 4: *--
±r2
 =((
uc
 | 0x80) & 0xBF); uc >>= 6;

233 3: *--
±r2
 =((
uc
 | 0x80) & 0xBF); uc >>= 6;

234 2: *--
±r2
 =((
uc
 | 0x80) & 0xBF); uc >>= 6;

235 1: *--
±r2
 =(
uc
 | 
fú°ByãM¨k
[
Àn
]);

237 
±r2
+=
Àn
;

239 : *
±r2
++=*
±r
; ;

241 
±r
++;

244 *
±r2
=0;

245 i‡(*
±r
=='\"')Ötr++;

246 
ôem
->
vÆue°rög
=
out
;

247 
ôem
->
ty≥
=
cJSON_Såög
;

248  
±r
;

249 
	}
}

252 *
	$¥öt_°rög_±r
(c⁄° *
°r
,
¥ötbuf„r
 *
p
)

254 c⁄° *
±r
;*
±r2
,*
out
;
Àn
=0,
Êag
=0;
tokí
;

256 
±r
=
°r
;*±r;±r++Ë
Êag
|=((*ptr>0 && *ptr<32)||(*ptr=='\"')||(*ptr=='\\'))?1:0;

257 i‡(!
Êag
)

259 
Àn
=
±r
-
°r
;

260 i‡(
p
Ë
out
=
	`ísuª
’,
Àn
+3);

261 
out
=(*)
	`cJSON_mÆloc
(
Àn
+3);

262 i‡(!
out
)  0;

263 
±r2
=
out
;*ptr2++='\"';

264 
	`°r˝y
(
±r2
,
°r
);

265 
±r2
[
Àn
]='\"';

266 
±r2
[
Àn
+1]=0;

267  
out
;

270 i‡(!
°r
)

272 i‡(
p
Ë
out
=
	`ísuª
(p,3);

273 
out
=(*)
	`cJSON_mÆloc
(3);

274 i‡(!
out
)  0;

275 
	`°r˝y
(
out
,"\"\"");

276  
out
;

278 
±r
=
°r
;(
tokí
=*±rË&& ++
Àn
Ë{i‡(
	`°rchr
("\"\\\b\f\n\r\t",token))Üen++; if (token<32)Üen+=5;ptr++;}

280 i‡(
p
Ë
out
=
	`ísuª
’,
Àn
+3);

281 
out
=(*)
	`cJSON_mÆloc
(
Àn
+3);

282 i‡(!
out
)  0;

284 
±r2
=
out
;
±r
=
°r
;

285 *
±r2
++='\"';

286 *
±r
)

288 i‡(()*
±r
>31 && *±r!='\"' && *±r!='\\'Ë*
±r2
++=*ptr++;

291 *
±r2
++='\\';

292 
tokí
=*
±r
++)

294 '\\': *
±r2
++='\\'; ;

295 '\"': *
±r2
++='\"'; ;

296 '\b': *
±r2
++='b'; ;

297 '\f': *
±r2
++='f'; ;

298 '\n': *
±r2
++='n'; ;

299 '\r': *
±r2
++='r'; ;

300 '\t': *
±r2
++='t'; ;

301 : 
	`•rötf
(
±r2
,"u%04x",
tokí
);ptr2+=5; ;

305 *
±r2
++='\"';*ptr2++=0;

306  
out
;

307 
	}
}

309 *
	$¥öt_°rög
(
cJSON
 *
ôem
,
¥ötbuf„r
 *
p
Ë{ 
	`¥öt_°rög_±r
(ôem->
vÆue°rög
,p);
	}
}

312 c⁄° *
∑r£_vÆue
(
cJSON
 *
ôem
,c⁄° *
vÆue
);

313 *
¥öt_vÆue
(
cJSON
 *
ôem
,
dïth
,
fmt
,
¥ötbuf„r
 *
p
);

314 c⁄° *
∑r£_¨øy
(
cJSON
 *
ôem
,c⁄° *
vÆue
);

315 *
¥öt_¨øy
(
cJSON
 *
ôem
,
dïth
,
fmt
,
¥ötbuf„r
 *
p
);

316 c⁄° *
∑r£_obje˘
(
cJSON
 *
ôem
,c⁄° *
vÆue
);

317 *
¥öt_obje˘
(
cJSON
 *
ôem
,
dïth
,
fmt
,
¥ötbuf„r
 *
p
);

320 c⁄° *
	$skù
(c⁄° *
ö
Ë{ö && *ö && ()*ö<=32Ëö++;  in;
	}
}

323 
cJSON
 *
	$cJSON_P¨£WôhO±s
(c⁄° *
vÆue
,c⁄° **
ªtu∫_∑r£_íd
,
ªquúe_nuŒ_ãrmö©ed
)

325 c⁄° *
íd
=0;

326 
cJSON
 *
c
=
	`cJSON_New_Iãm
();

327 
ï
=0;

328 i‡(!
c
)  0;

330 
íd
=
	`∑r£_vÆue
(
c
,
	`skù
(
vÆue
));

331 i‡(!
íd
Ë{
	`cJSON_Dñëe
(
c
); 0;}

334 i‡(
ªquúe_nuŒ_ãrmö©ed
Ë{
íd
=
	`skù
”nd);i‡(*ídË{
	`cJSON_Dñëe
(
c
);
ï
=end; 0;}}

335 i‡(
ªtu∫_∑r£_íd
Ë*ªtu∫_∑r£_íd=
íd
;

336  
c
;

337 
	}
}

339 
cJSON
 *
	$cJSON_P¨£
(c⁄° *
vÆue
Ë{ 
	`cJSON_P¨£WôhO±s
(vÆue,0,0);
	}
}

342 *
	$cJSON_Pröt
(
cJSON
 *
ôem
Ë{ 
	`¥öt_vÆue
(ôem,0,1,0);
	}
}

343 *
	$cJSON_PrötUnf‹m©ãd
(
cJSON
 *
ôem
Ë{ 
	`¥öt_vÆue
(ôem,0,0,0);
	}
}

345 *
	$cJSON_PrötBuf„ªd
(
cJSON
 *
ôem
,
¥ebuf„r
,
fmt
)

347 
¥ötbuf„r
 
p
;

348 
p
.
buf„r
=(*)
	`cJSON_mÆloc
(
¥ebuf„r
);

349 
p
.
Àngth
=
¥ebuf„r
;

350 
p
.
off£t
=0;

351  
	`¥öt_vÆue
(
ôem
,0,
fmt
,&
p
);

352  
p
.
buf„r
;

353 
	}
}

357 c⁄° *
	$∑r£_vÆue
(
cJSON
 *
ôem
,c⁄° *
vÆue
)

359 i‡(!
vÆue
)  0;

360 i‡(!
	`°∫cmp
(
vÆue
,"nuŒ",4)Ë{ 
ôem
->
ty≥
=
cJSON_NULL
;  value+4; }

361 i‡(!
	`°∫cmp
(
vÆue
,"Ál£",5)Ë{ 
ôem
->
ty≥
=
cJSON_FÆ£
;  value+5; }

362 i‡(!
	`°∫cmp
(
vÆue
,"åue",4)Ë{ 
ôem
->
ty≥
=
cJSON_True
; iãm->
vÆueöt
=1;  value+4; }

363 i‡(*
vÆue
=='\"'Ë{  
	`∑r£_°rög
(
ôem
,value); }

364 i‡(*
vÆue
=='-' || (*vÆue>='0' && *vÆue<='9')Ë{  
	`∑r£_numbî
(
ôem
,value); }

365 i‡(*
vÆue
=='['Ë{  
	`∑r£_¨øy
(
ôem
,value); }

366 i‡(*
vÆue
=='{'Ë{  
	`∑r£_obje˘
(
ôem
,value); }

368 
ï
=
vÆue
; 0;

369 
	}
}

372 *
	$¥öt_vÆue
(
cJSON
 *
ôem
,
dïth
,
fmt
,
¥ötbuf„r
 *
p
)

374 *
out
=0;

375 i‡(!
ôem
)  0;

376 i‡(
p
)

378 (
ôem
->
ty≥
)&255)

380 
cJSON_NULL
: {
out
=
	`ísuª
(
p
,5); i‡(outË
	`°r˝y
(out,"null"); ;}

381 
cJSON_FÆ£
: {
out
=
	`ísuª
(
p
,6); i‡(outË
	`°r˝y
(out,"false"); ;}

382 
cJSON_True
: {
out
=
	`ísuª
(
p
,5); i‡(outË
	`°r˝y
(out,"true"); ;}

383 
cJSON_Numbî
: 
out
=
	`¥öt_numbî
(
ôem
,
p
);;

384 
cJSON_Såög
: 
out
=
	`¥öt_°rög
(
ôem
,
p
);;

385 
cJSON_Aºay
: 
out
=
	`¥öt_¨øy
(
ôem
,
dïth
,
fmt
,
p
);;

386 
cJSON_Obje˘
: 
out
=
	`¥öt_obje˘
(
ôem
,
dïth
,
fmt
,
p
);;

391 (
ôem
->
ty≥
)&255)

393 
cJSON_NULL
: 
out
=
	`cJSON_°rdup
("null"); ;

394 
cJSON_FÆ£
: 
out
=
	`cJSON_°rdup
("false");;

395 
cJSON_True
: 
out
=
	`cJSON_°rdup
("true"); ;

396 
cJSON_Numbî
: 
out
=
	`¥öt_numbî
(
ôem
,0);;

397 
cJSON_Såög
: 
out
=
	`¥öt_°rög
(
ôem
,0);;

398 
cJSON_Aºay
: 
out
=
	`¥öt_¨øy
(
ôem
,
dïth
,
fmt
,0);;

399 
cJSON_Obje˘
: 
out
=
	`¥öt_obje˘
(
ôem
,
dïth
,
fmt
,0);;

402  
out
;

403 
	}
}

406 c⁄° *
	$∑r£_¨øy
(
cJSON
 *
ôem
,c⁄° *
vÆue
)

408 
cJSON
 *
chûd
;

409 i‡(*
vÆue
!='['Ë{
ï
=value; 0;}

411 
ôem
->
ty≥
=
cJSON_Aºay
;

412 
vÆue
=
	`skù
(value+1);

413 i‡(*
vÆue
==']')  value+1;

415 
ôem
->
chûd
=chûd=
	`cJSON_New_Iãm
();

416 i‡(!
ôem
->
chûd
)  0;

417 
vÆue
=
	`skù
(
	`∑r£_vÆue
(
chûd
,skip(value)));

418 i‡(!
vÆue
)  0;

420 *
vÆue
==',')

422 
cJSON
 *
√w_ôem
;

423 i‡(!(
√w_ôem
=
	`cJSON_New_Iãm
()))  0;

424 
chûd
->
√xt
=
√w_ôem
;√w_ôem->
¥ev
=child;child=new_item;

425 
vÆue
=
	`skù
(
	`∑r£_vÆue
(
chûd
,skip(value+1)));

426 i‡(!
vÆue
)  0;

429 i‡(*
vÆue
==']')  value+1;

430 
ï
=
vÆue
; 0;

431 
	}
}

434 *
	$¥öt_¨øy
(
cJSON
 *
ôem
,
dïth
,
fmt
,
¥ötbuf„r
 *
p
)

436 **
íåõs
;

437 *
out
=0,*
±r
,*
ªt
;
Àn
=5;

438 
cJSON
 *
chûd
=
ôem
->child;

439 
numíåõs
=0,
i
=0,
Áû
=0;

440 
size_t
 
tm∂í
=0;

443 
chûd
Ë
numíåõs
++,chûd=chûd->
√xt
;

445 i‡(!
numíåõs
)

447 i‡(
p
Ë
out
=
	`ísuª
(p,3);

448 
out
=(*)
	`cJSON_mÆloc
(3);

449 i‡(
out
Ë
	`°r˝y
(out,"[]");

450  
out
;

453 i‡(
p
)

456 
i
=
p
->
off£t
;

457 
±r
=
	`ísuª
(
p
,1);i‡(!±rË 0; *±r='[';Ö->
off£t
++;

458 
chûd
=
ôem
->child;

459 
chûd
 && !
Áû
)

461 
	`¥öt_vÆue
(
chûd
,
dïth
+1,
fmt
,
p
);

462 
p
->
off£t
=
	`upd©e
(p);

463 i‡(
chûd
->
√xt
Ë{
Àn
=
fmt
?2:1;
±r
=
	`ísuª
(
p
,Àn+1);i‡(!±rË 0;*±r++=',';if(fmt)*±r++=' ';*±r=0;p->
off£t
+=len;}

464 
chûd
=chûd->
√xt
;

466 
±r
=
	`ísuª
(
p
,2);if (!ptr)  0; *ptr++=']';*ptr=0;

467 
out
=(
p
->
buf„r
)+
i
;

472 
íåõs
=(**)
	`cJSON_mÆloc
(
numíåõs
*(*));

473 i‡(!
íåõs
)  0;

474 
	`mem£t
(
íåõs
,0,
numíåõs
*(*));

476 
chûd
=
ôem
->child;

477 
chûd
 && !
Áû
)

479 
ªt
=
	`¥öt_vÆue
(
chûd
,
dïth
+1,
fmt
,0);

480 
íåõs
[
i
++]=
ªt
;

481 i‡(
ªt
Ë
Àn
+=
	`°æí
‘ë)+2+(
fmt
?1:0); 
Áû
=1;

482 
chûd
=chûd->
√xt
;

486 i‡(!
Áû
Ë
out
=(*)
	`cJSON_mÆloc
(
Àn
);

488 i‡(!
out
Ë
Áû
=1;

491 i‡(
Áû
)

493 
i
=0;i<
numíåõs
;i++Ëi‡(
íåõs
[i]Ë
	`cJSON_‰ì
(entries[i]);

494 
	`cJSON_‰ì
(
íåõs
);

499 *
out
='[';

500 
±r
=
out
+1;*ptr=0;

501 
i
=0;i<
numíåõs
;i++)

503 
tm∂í
=
	`°æí
(
íåõs
[
i
]);
	`mem˝y
(
±r
,entries[i],tmplen);ptr+=tmplen;

504 i‡(
i
!=
numíåõs
-1Ë{*
±r
++=',';if(
fmt
)*ptr++=' ';*ptr=0;}

505 
	`cJSON_‰ì
(
íåõs
[
i
]);

507 
	`cJSON_‰ì
(
íåõs
);

508 *
±r
++=']';*ptr++=0;

510  
out
;

511 
	}
}

514 c⁄° *
	$∑r£_obje˘
(
cJSON
 *
ôem
,c⁄° *
vÆue
)

516 
cJSON
 *
chûd
;

517 i‡(*
vÆue
!='{'Ë{
ï
=value; 0;}

519 
ôem
->
ty≥
=
cJSON_Obje˘
;

520 
vÆue
=
	`skù
(value+1);

521 i‡(*
vÆue
=='}')  value+1;

523 
ôem
->
chûd
=chûd=
	`cJSON_New_Iãm
();

524 i‡(!
ôem
->
chûd
)  0;

525 
vÆue
=
	`skù
(
	`∑r£_°rög
(
chûd
,skip(value)));

526 i‡(!
vÆue
)  0;

527 
chûd
->
°rög
=chûd->
vÆue°rög
;child->valuestring=0;

528 i‡(*
vÆue
!=':'Ë{
ï
=value; 0;}

529 
vÆue
=
	`skù
(
	`∑r£_vÆue
(
chûd
,skip(value+1)));

530 i‡(!
vÆue
)  0;

532 *
vÆue
==',')

534 
cJSON
 *
√w_ôem
;

535 i‡(!(
√w_ôem
=
	`cJSON_New_Iãm
()))  0;

536 
chûd
->
√xt
=
√w_ôem
;√w_ôem->
¥ev
=child;child=new_item;

537 
vÆue
=
	`skù
(
	`∑r£_°rög
(
chûd
,skip(value+1)));

538 i‡(!
vÆue
)  0;

539 
chûd
->
°rög
=chûd->
vÆue°rög
;child->valuestring=0;

540 i‡(*
vÆue
!=':'Ë{
ï
=value; 0;}

541 
vÆue
=
	`skù
(
	`∑r£_vÆue
(
chûd
,skip(value+1)));

542 i‡(!
vÆue
)  0;

545 i‡(*
vÆue
=='}')  value+1;

546 
ï
=
vÆue
; 0;

547 
	}
}

550 *
	$¥öt_obje˘
(
cJSON
 *
ôem
,
dïth
,
fmt
,
¥ötbuf„r
 *
p
)

552 **
íåõs
=0,**
«mes
=0;

553 *
out
=0,*
±r
,*
ªt
,*
°r
;
Àn
=7,
i
=0,
j
;

554 
cJSON
 *
chûd
=
ôem
->child;

555 
numíåõs
=0,
Áû
=0;

556 
size_t
 
tm∂í
=0;

558 
chûd
Ë
numíåõs
++,chûd=chûd->
√xt
;

560 i‡(!
numíåõs
)

562 i‡(
p
Ë
out
=
	`ísuª
’,
fmt
?
dïth
+4:3);

563 
out
=(*)
	`cJSON_mÆloc
(
fmt
?
dïth
+4:3);

564 i‡(!
out
)  0;

565 
±r
=
out
;*ptr++='{';

566 i‡(
fmt
Ë{*
±r
++='\n';
i
=0;i<
dïth
-1;i++) *ptr++='\t';}

567 *
±r
++='}';*ptr++=0;

568  
out
;

570 i‡(
p
)

573 
i
=
p
->
off£t
;

574 
Àn
=
fmt
?2:1; 
±r
=
	`ísuª
(
p
,len+1); if (!ptr)  0;

575 *
±r
++='{'; i‡(
fmt
Ë*±r++='\n'; *±r=0; 
p
->
off£t
+=
Àn
;

576 
chûd
=
ôem
->chûd;
dïth
++;

577 
chûd
)

579 i‡(
fmt
)

581 
±r
=
	`ísuª
(
p
,
dïth
); if (!ptr)  0;

582 
j
=0;j<
dïth
;j++Ë*
±r
++='\t';

583 
p
->
off£t
+=
dïth
;

585 
	`¥öt_°rög_±r
(
chûd
->
°rög
,
p
);

586 
p
->
off£t
=
	`upd©e
(p);

588 
Àn
=
fmt
?2:1;

589 
±r
=
	`ísuª
(
p
,
Àn
); if (!ptr)  0;

590 *
±r
++=':';i‡(
fmt
) *ptr++='\t';

591 
p
->
off£t
+=
Àn
;

593 
	`¥öt_vÆue
(
chûd
,
dïth
,
fmt
,
p
);

594 
p
->
off£t
=
	`upd©e
(p);

596 
Àn
=(
fmt
?1:0)+(
chûd
->
√xt
?1:0);

597 
±r
=
	`ísuª
(
p
,
Àn
+1); if (!ptr)  0;

598 i‡(
chûd
->
√xt
Ë*
±r
++=',';

599 i‡(
fmt
Ë*
±r
++='\n';*ptr=0;

600 
p
->
off£t
+=
Àn
;

601 
chûd
=chûd->
√xt
;

603 
±r
=
	`ísuª
(
p
,
fmt
?(
dïth
+1):2); if (!ptr)  0;

604 i‡(
fmt
Ë
i
=0;i<
dïth
-1;i++Ë*
±r
++='\t';

605 *
±r
++='}';*ptr=0;

606 
out
=(
p
->
buf„r
)+
i
;

611 
íåõs
=(**)
	`cJSON_mÆloc
(
numíåõs
*(*));

612 i‡(!
íåõs
)  0;

613 
«mes
=(**)
	`cJSON_mÆloc
(
numíåõs
*(*));

614 i‡(!
«mes
Ë{
	`cJSON_‰ì
(
íåõs
); 0;}

615 
	`mem£t
(
íåõs
,0,(*)*
numíåõs
);

616 
	`mem£t
(
«mes
,0,(*)*
numíåõs
);

619 
chûd
=
ôem
->chûd;
dïth
++;i‡(
fmt
Ë
Àn
+=depth;

620 
chûd
)

622 
«mes
[
i
]=
°r
=
	`¥öt_°rög_±r
(
chûd
->
°rög
,0);

623 
íåõs
[
i
++]=
ªt
=
	`¥öt_vÆue
(
chûd
,
dïth
,
fmt
,0);

624 i‡(
°r
 && 
ªt
Ë
Àn
+=
	`°æí
‘ë)+°æí(°r)+2+(
fmt
?2+
dïth
:0); 
Áû
=1;

625 
chûd
=chûd->
√xt
;

629 i‡(!
Áû
Ë
out
=(*)
	`cJSON_mÆloc
(
Àn
);

630 i‡(!
out
Ë
Áû
=1;

633 i‡(
Áû
)

635 
i
=0;i<
numíåõs
;i++Ë{i‡(
«mes
[i]Ë
	`cJSON_‰ì
“ames[i]);i‡(
íåõs
[i]) cJSON_free(entries[i]);}

636 
	`cJSON_‰ì
(
«mes
);cJSON_‰ì(
íåõs
);

641 *
out
='{';
±r
=out+1;i‡(
fmt
)*ptr++='\n';*ptr=0;

642 
i
=0;i<
numíåõs
;i++)

644 i‡(
fmt
Ë
j
=0;j<
dïth
;j++Ë*
±r
++='\t';

645 
tm∂í
=
	`°æí
(
«mes
[
i
]);
	`mem˝y
(
±r
,names[i],tmplen);ptr+=tmplen;

646 *
±r
++=':';i‡(
fmt
) *ptr++='\t';

647 
	`°r˝y
(
±r
,
íåõs
[
i
]);±r+=
	`°æí
(entries[i]);

648 i‡(
i
!=
numíåõs
-1Ë*
±r
++=',';

649 i‡(
fmt
Ë*
±r
++='\n';*ptr=0;

650 
	`cJSON_‰ì
(
«mes
[
i
]);cJSON_‰ì(
íåõs
[i]);

653 
	`cJSON_‰ì
(
«mes
);cJSON_‰ì(
íåõs
);

654 i‡(
fmt
Ë
i
=0;i<
dïth
-1;i++Ë*
±r
++='\t';

655 *
±r
++='}';*ptr++=0;

657  
out
;

658 
	}
}

661 
	$cJSON_GëAºaySize
(
cJSON
 *
¨øy
Ë{cJSON *
c
˜ºay->
chûd
;
i
=0;c)i++,c=c->
√xt
; i;
	}
}

662 
cJSON
 *
	$cJSON_GëAºayIãm
(
cJSON
 *
¨øy
,
ôem
Ë{cJSON *
c
˜ºay->
chûd
; ¯&& iãm>0Ëôem--,c=c->
√xt
;  c;
	}
}

663 
cJSON
 *
	$cJSON_GëObje˘Iãm
(
cJSON
 *
obje˘
,c⁄° *
°rög
Ë{cJSON *
c
=obje˘->
chûd
; ¯&& 
	`cJSON_°rˇ£cmp
(c->°rög,°rög)Ëc=c->
√xt
;  c;
	}
}

666 
	$suffix_obje˘
(
cJSON
 *
¥ev
,cJSON *
ôem
Ë{¥ev->
√xt
=ôem;ôem->¥evıªv;
	}
}

668 
cJSON
 *
	$¸óã_ª„ªn˚
(
cJSON
 *
ôem
Ë{cJSON *
ªf
=
	`cJSON_New_Iãm
();i‡(!ªfË 0;
	`mem˝y
‘ef,ôem,(cJSON));ªf->
°rög
=0;ªf->
ty≥
|=
cJSON_IsRe„ªn˚
;ªf->
√xt
Ùef->
¥ev
=0;Ñef;
	}
}

671 
	$cJSON_AddIãmToAºay
(
cJSON
 *
¨øy
, cJSON *
ôem
Ë{cJSON *
c
˜ºay->
chûd
;i‡(!ôemË; i‡(!cË{¨øy->chûd=ôem;} {¯&& c->
√xt
Ëc=c->√xt; 
	`suffix_obje˘
(c,ôem);}
	}
}

672 
	$cJSON_AddIãmToObje˘
(
cJSON
 *
obje˘
,c⁄° *
°rög
,cJSON *
ôem
Ë{i‡(!ôemË; i‡(ôem->°rögË
	`cJSON_‰ì
(ôem->°rög);ôem->°rög=
	`cJSON_°rdup
(°rög);
	`cJSON_AddIãmToAºay
(obje˘,ôem);
	}
}

673 
	$cJSON_AddIãmToObje˘CS
(
cJSON
 *
obje˘
,c⁄° *
°rög
,cJSON *
ôem
Ë{i‡(!ôemË; i‡(!(ôem->
ty≥
&
cJSON_SåögIsC⁄°
Ë&& iãm->°rögË
	`cJSON_‰ì
(ôem->°rög);ôem->°rög=(*)°rög;ôem->ty≥|=cJSON_SåögIsC⁄°;
	`cJSON_AddIãmToAºay
(obje˘,ôem);
	}
}

674 
	$cJSON_AddIãmRe„ªn˚ToAºay
(
cJSON
 *
¨øy
, cJSON *
ôem
Ë{
	`cJSON_AddIãmToAºay
◊ºay,
	`¸óã_ª„ªn˚
(ôem));
	}
}

675 
	$cJSON_AddIãmRe„ªn˚ToObje˘
(
cJSON
 *
obje˘
,c⁄° *
°rög
,cJSON *
ôem
Ë{
	`cJSON_AddIãmToObje˘
(obje˘,°rög,
	`¸óã_ª„ªn˚
(ôem));
	}
}

677 
cJSON
 *
	$cJSON_DëachIãmFromAºay
(
cJSON
 *
¨øy
,
which
Ë{cJSON *
c
˜ºay->
chûd
;¯&& which>0Ëc=c->
√xt
,which--;if (!c)  0;

678 i‡(
c
->
¥ev
Ëc->¥ev->
√xt
=c->√xt;i‡(c->√xtËc->√xt->¥ev=c->¥ev;i‡(c==
¨øy
->
chûd
Ë¨øy->chûd=c->√xt;c->¥ev=c->√xt=0; c;
	}
}

679 
	$cJSON_DñëeIãmFromAºay
(
cJSON
 *
¨øy
,
which
Ë{
	`cJSON_Dñëe
(
	`cJSON_DëachIãmFromAºay
◊ºay,which));
	}
}

680 
cJSON
 *
	$cJSON_DëachIãmFromObje˘
(
cJSON
 *
obje˘
,c⁄° *
°rög
Ë{
i
=0;cJSON *
c
=obje˘->
chûd
;¯&& 
	`cJSON_°rˇ£cmp
(c->°rög,°rög)Ëi++,c=c->
√xt
;i‡(cË 
	`cJSON_DëachIãmFromAºay
(obje˘,i); 0;
	}
}

681 
	$cJSON_DñëeIãmFromObje˘
(
cJSON
 *
obje˘
,c⁄° *
°rög
Ë{
	`cJSON_Dñëe
(
	`cJSON_DëachIãmFromObje˘
(obje˘,°rög));
	}
}

684 
	$cJSON_In£πIãmInAºay
(
cJSON
 *
¨øy
,
which
,cJSON *
√wôem
Ë{cJSON *
c
˜ºay->
chûd
;¯&& which>0Ëc=c->
√xt
,which--;i‡(!cË{
	`cJSON_AddIãmToAºay
(array,newitem);;}

685 
√wôem
->
√xt
=
c
;√wôem->
¥ev
=c->¥ev;c->¥evÚewôem;i‡(c==
¨øy
->
chûd
Ë¨øy->chûdÚewôem; √wôem->¥ev->√xtÚewôem;
	}
}

686 
	$cJSON_Rïœ˚IãmInAºay
(
cJSON
 *
¨øy
,
which
,cJSON *
√wôem
Ë{cJSON *
c
˜ºay->
chûd
;¯&& which>0Ëc=c->
√xt
,which--;if (!c) ;

687 
√wôem
->
√xt
=
c
->√xt;√wôem->
¥ev
=c->prev;if (newitem->next)Çewitem->next->prev=newitem;

688 i‡(
c
==
¨øy
->
chûd
Ë¨øy->chûd=
√wôem
; √wôem->
¥ev
->
√xt
Úewôem;c->√xt=c->¥ev=0;
	`cJSON_Dñëe
(c);
	}
}

689 
	$cJSON_Rïœ˚IãmInObje˘
(
cJSON
 *
obje˘
,c⁄° *
°rög
,cJSON *
√wôem
){
i
=0;cJSON *
c
=obje˘->
chûd
;¯&& 
	`cJSON_°rˇ£cmp
(c->°rög,°rög))i++,c=c->
√xt
;if(c){√wôem->°rög=
	`cJSON_°rdup
(°rög);
	`cJSON_Rïœ˚IãmInAºay
(obje˘,i,√wôem);}
	}
}

692 
cJSON
 *
	$cJSON_Cª©eNuŒ
(Ë{
cJSON
 *
ôem
=
	`cJSON_New_Iãm
();if(ôem)ôem->
ty≥
=
cJSON_NULL
; iãm;
	}
}

693 
cJSON
 *
	$cJSON_Cª©eTrue
(Ë{
cJSON
 *
ôem
=
	`cJSON_New_Iãm
();if(ôem)ôem->
ty≥
=
cJSON_True
; iãm;
	}
}

694 
cJSON
 *
	$cJSON_Cª©eFÆ£
(Ë{
cJSON
 *
ôem
=
	`cJSON_New_Iãm
();if(ôem)ôem->
ty≥
=
cJSON_FÆ£
; iãm;
	}
}

695 
cJSON
 *
	$cJSON_Cª©eBoﬁ
(
b
Ë{
cJSON
 *
ôem
=
	`cJSON_New_Iãm
();if(ôem)ôem->
ty≥
=b?
cJSON_True
:
cJSON_FÆ£
; iãm;
	}
}

696 
cJSON
 *
	$cJSON_Cª©eNumbî
(
num
Ë{
cJSON
 *
ôem
=
	`cJSON_New_Iãm
();if(ôem){ôem->
ty≥
=
cJSON_Numbî
;ôem->
vÆuedoubÀ
Úum;ôem->
vÆueöt
=(Íum;} iãm;
	}
}

697 
cJSON
 *
	$cJSON_Cª©eSåög
(c⁄° *
°rög
Ë{
cJSON
 *
ôem
=
	`cJSON_New_Iãm
();if(ôem){ôem->
ty≥
=
cJSON_Såög
;ôem->
vÆue°rög
=
	`cJSON_°rdup
(°rög);} iãm;
	}
}

698 
cJSON
 *
	$cJSON_Cª©eAºay
(Ë{
cJSON
 *
ôem
=
	`cJSON_New_Iãm
();if(ôem)ôem->
ty≥
=
cJSON_Aºay
; iãm;
	}
}

699 
cJSON
 *
	$cJSON_Cª©eObje˘
(Ë{
cJSON
 *
ôem
=
	`cJSON_New_Iãm
();if(ôem)ôem->
ty≥
=
cJSON_Obje˘
; iãm;
	}
}

702 
cJSON
 *
	$cJSON_Cª©eI¡Aºay
(c⁄° *
numbîs
,
cou¡
Ë{
i
;
cJSON
 *
n
=0,*
p
=0,*
a
=
	`cJSON_Cª©eAºay
();i=0;®&& i<cou¡;i++){n=
	`cJSON_Cª©eNumbî
“umbîs[i]);if(!iÔ->
chûd
Ú;
	`suffix_obje˘
’,n);pÚ;}á;
	}
}

703 
cJSON
 *
	$cJSON_Cª©eFlﬂtAºay
(c⁄° *
numbîs
,
cou¡
Ë{
i
;
cJSON
 *
n
=0,*
p
=0,*
a
=
	`cJSON_Cª©eAºay
();i=0;®&& i<cou¡;i++){n=
	`cJSON_Cª©eNumbî
“umbîs[i]);if(!iÔ->
chûd
Ú;
	`suffix_obje˘
’,n);pÚ;}á;
	}
}

704 
cJSON
 *
	$cJSON_Cª©eDoubÀAºay
(c⁄° *
numbîs
,
cou¡
Ë{
i
;
cJSON
 *
n
=0,*
p
=0,*
a
=
	`cJSON_Cª©eAºay
();i=0;®&& i<cou¡;i++){n=
	`cJSON_Cª©eNumbî
“umbîs[i]);if(!iÔ->
chûd
Ú;
	`suffix_obje˘
’,n);pÚ;}á;
	}
}

705 
cJSON
 *
	$cJSON_Cª©eSåögAºay
(c⁄° **
°rögs
,
cou¡
Ë{
i
;
cJSON
 *
n
=0,*
p
=0,*
a
=
	`cJSON_Cª©eAºay
();i=0;®&& i<cou¡;i++){n=
	`cJSON_Cª©eSåög
(°rögs[i]);if(!iÔ->
chûd
Ú;
	`suffix_obje˘
’,n);pÚ;}á;
	}
}

708 
cJSON
 *
	$cJSON_Du∂iˇã
(
cJSON
 *
ôem
,
ªcur£
)

710 
cJSON
 *
√wôem
,*
˝å
,*
≈å
=0,*
√wchûd
;

712 i‡(!
ôem
)  0;

714 
√wôem
=
	`cJSON_New_Iãm
();

715 i‡(!
√wôem
)  0;

717 
√wôem
->
ty≥
=
ôem
->ty≥&(~
cJSON_IsRe„ªn˚
),√wôem->
vÆueöt
=ôem->vÆueöt,√wôem->
vÆuedoubÀ
=item->valuedouble;

718 i‡(
ôem
->
vÆue°rög
Ë{
√wôem
->vÆue°rög=
	`cJSON_°rdup
(ôem->vÆue°rög); i‡(!√wôem->vÆue°rögË{
	`cJSON_Dñëe
(newitem); 0;}}

719 i‡(
ôem
->
°rög
Ë{
√wôem
->°rög=
	`cJSON_°rdup
(ôem->°rög); i‡(!√wôem->°rögË{
	`cJSON_Dñëe
(newitem); 0;}}

721 i‡(!
ªcur£
Ë 
√wôem
;

723 
˝å
=
ôem
->
chûd
;

724 
˝å
)

726 
√wchûd
=
	`cJSON_Du∂iˇã
(
˝å
,1);

727 i‡(!
√wchûd
Ë{
	`cJSON_Dñëe
(
√wôem
); 0;}

728 i‡(
≈å
Ë{≈å->
√xt
=
√wchûd
,√wchûd->
¥ev
=nptr;nptr=newchild;}

729 {
√wôem
->
chûd
=
√wchûd
;
≈å
=newchild;}

730 
˝å
=˝å->
√xt
;

732  
√wôem
;

733 
	}
}

735 
	$cJSON_Möify
(*
js⁄
)

737 *
öto
=
js⁄
;

738 *
js⁄
)

740 i‡(*
js⁄
==' ') json++;

741 i‡(*
js⁄
=='\t') json++;

742 i‡(*
js⁄
=='\r') json++;

743 i‡(*
js⁄
=='\n') json++;

744 i‡(*
js⁄
=='/' && json[1]=='/') *json && *json!='\n') json++;

745 i‡(*
js⁄
=='/' && json[1]=='*') {*json && !(*json=='*' && json[1]=='/')) json++;json+=2;}

746 i‡(*
js⁄
=='\"'){*
öto
++=*json++;*json && *json!='\"'){if (*json=='\\') *into++=*json++;*into++=*json++;}*into++=*json++;}

747 *
öto
++=*
js⁄
++;

749 *
öto
=0;

750 
	}
}

	@Server/Common/cJSON.h

23 #i‚de‡
cJSON__h


24 
	#cJSON__h


	)

26 #ifde‡
__˝lu•lus


32 
	#cJSON_FÆ£
 0

	)

33 
	#cJSON_True
 1

	)

34 
	#cJSON_NULL
 2

	)

35 
	#cJSON_Numbî
 3

	)

36 
	#cJSON_Såög
 4

	)

37 
	#cJSON_Aºay
 5

	)

38 
	#cJSON_Obje˘
 6

	)

40 
	#cJSON_IsRe„ªn˚
 256

	)

41 
	#cJSON_SåögIsC⁄°
 512

	)

44 
	scJSON
 {

45 
cJSON
 *
√xt
,*
¥ev
;

46 
cJSON
 *
chûd
;

48 
ty≥
;

50 *
vÆue°rög
;

51 
vÆueöt
;

52 
vÆuedoubÀ
;

54 *
°rög
;

55 } 
	tcJSON
;

57 
	scJSON_Hooks
 {

58 *(*
mÆloc_‚
)(
size_t
 
sz
);

59 (*
‰ì_‚
)(*
±r
);

60 } 
	tcJSON_Hooks
;

63 
cJSON_InôHooks
(
cJSON_Hooks
* 
hooks
);

67 
cJSON
 *
cJSON_P¨£
(c⁄° *
vÆue
);

69 *
cJSON_Pröt
(
cJSON
 *
ôem
);

71 *
cJSON_PrötUnf‹m©ãd
(
cJSON
 *
ôem
);

73 *
cJSON_PrötBuf„ªd
(
cJSON
 *
ôem
,
¥ebuf„r
,
fmt
);

75 
cJSON_Dñëe
(
cJSON
 *
c
);

78 
cJSON_GëAºaySize
(
cJSON
 *
¨øy
);

80 
cJSON
 *
cJSON_GëAºayIãm
(cJSON *
¨øy
,
ôem
);

82 
cJSON
 *
cJSON_GëObje˘Iãm
(cJSON *
obje˘
,c⁄° *
°rög
);

85 c⁄° *
cJSON_GëEº‹På
();

88 
cJSON
 *
cJSON_Cª©eNuŒ
();

89 
cJSON
 *
cJSON_Cª©eTrue
();

90 
cJSON
 *
cJSON_Cª©eFÆ£
();

91 
cJSON
 *
cJSON_Cª©eBoﬁ
(
b
);

92 
cJSON
 *
cJSON_Cª©eNumbî
(
num
);

93 
cJSON
 *
cJSON_Cª©eSåög
(c⁄° *
°rög
);

94 
cJSON
 *
cJSON_Cª©eAºay
();

95 
cJSON
 *
cJSON_Cª©eObje˘
();

98 
cJSON
 *
cJSON_Cª©eI¡Aºay
(c⁄° *
numbîs
,
cou¡
);

99 
cJSON
 *
cJSON_Cª©eFlﬂtAºay
(c⁄° *
numbîs
,
cou¡
);

100 
cJSON
 *
cJSON_Cª©eDoubÀAºay
(c⁄° *
numbîs
,
cou¡
);

101 
cJSON
 *
cJSON_Cª©eSåögAºay
(c⁄° **
°rögs
,
cou¡
);

104 
cJSON_AddIãmToAºay
(
cJSON
 *
¨øy
, cJSON *
ôem
);

105 
cJSON_AddIãmToObje˘
(
cJSON
 *
obje˘
,c⁄° *
°rög
,cJSON *
ôem
);

106 
cJSON_AddIãmToObje˘CS
(
cJSON
 *
obje˘
,c⁄° *
°rög
,cJSON *
ôem
);

108 
cJSON_AddIãmRe„ªn˚ToAºay
(
cJSON
 *
¨øy
, cJSON *
ôem
);

109 
cJSON_AddIãmRe„ªn˚ToObje˘
(
cJSON
 *
obje˘
,c⁄° *
°rög
,cJSON *
ôem
);

112 
cJSON
 *
cJSON_DëachIãmFromAºay
(cJSON *
¨øy
,
which
);

113 
cJSON_DñëeIãmFromAºay
(
cJSON
 *
¨øy
,
which
);

114 
cJSON
 *
cJSON_DëachIãmFromObje˘
(cJSON *
obje˘
,c⁄° *
°rög
);

115 
cJSON_DñëeIãmFromObje˘
(
cJSON
 *
obje˘
,c⁄° *
°rög
);

118 
cJSON_In£πIãmInAºay
(
cJSON
 *
¨øy
,
which
,cJSON *
√wôem
);

119 
cJSON_Rïœ˚IãmInAºay
(
cJSON
 *
¨øy
,
which
,cJSON *
√wôem
);

120 
cJSON_Rïœ˚IãmInObje˘
(
cJSON
 *
obje˘
,c⁄° *
°rög
,cJSON *
√wôem
);

123 
cJSON
 *
cJSON_Du∂iˇã
(cJSON *
ôem
,
ªcur£
);

129 
cJSON
 *
cJSON_P¨£WôhO±s
(c⁄° *
vÆue
,c⁄° **
ªtu∫_∑r£_íd
,
ªquúe_nuŒ_ãrmö©ed
);

131 
cJSON_Möify
(*
js⁄
);

134 
	#cJSON_AddNuŒToObje˘
(
obje˘
,
«me
Ë
	`cJSON_AddIãmToObje˘
(obje˘,Çame, 
	`cJSON_Cª©eNuŒ
())

	)

135 
	#cJSON_AddTrueToObje˘
(
obje˘
,
«me
Ë
	`cJSON_AddIãmToObje˘
(obje˘,Çame, 
	`cJSON_Cª©eTrue
())

	)

136 
	#cJSON_AddFÆ£ToObje˘
(
obje˘
,
«me
Ë
	`cJSON_AddIãmToObje˘
(obje˘,Çame, 
	`cJSON_Cª©eFÆ£
())

	)

137 
	#cJSON_AddBoﬁToObje˘
(
obje˘
,
«me
,
b
Ë
	`cJSON_AddIãmToObje˘
(obje˘,Çame, 
	`cJSON_Cª©eBoﬁ
(b))

	)

138 
	#cJSON_AddNumbîToObje˘
(
obje˘
,
«me
,
n
Ë
	`cJSON_AddIãmToObje˘
(obje˘,Çame, 
	`cJSON_Cª©eNumbî
“))

	)

139 
	#cJSON_AddSåögToObje˘
(
obje˘
,
«me
,
s
Ë
	`cJSON_AddIãmToObje˘
(obje˘,Çame, 
	`cJSON_Cª©eSåög
(s))

	)

142 
	#cJSON_SëI¡VÆue
(
obje˘
,
vÆ
Ë((obje˘)?(obje˘)->
vÆueöt
=(obje˘)->
vÆuedoubÀ
=(vÆ):(vÆ))

	)

143 
	#cJSON_SëNumbîVÆue
(
obje˘
,
vÆ
Ë((obje˘)?(obje˘)->
vÆueöt
=(obje˘)->
vÆuedoubÀ
=(vÆ):(vÆ))

	)

145 #ifde‡
__˝lu•lus


	@Server/Persistence/Account_Persist.c

8 
	~<°dio.h
>

9 
	~<°rög.h
>

10 
	~<°dlib.h
>

11 
	~"Accou¡_Pîsi°.h
"

12 
	~"MySQL.h
"

13 
	~"../Sîvi˚/Frõnds_Srv.h
"

14 
MYSQL
 * 
mysql
;

16 
	$Accou¡_Pî°_ChIsO∆öe
(
uid
 ,
is_⁄löe
){

17 
SQL
[100];

18 
	`•rötf
(
SQL
 ,"UPDATEáccou¡ SET is_⁄löê'%d' WHERE uid = '%d'" ,
is_⁄löe
 ,
uid
);

19 if(
	`mysql_ªÆ_quîy
(
mysql
 , 
SQL
 , 
	`°æí
(SQL))){

20 
	`¥ötf
("%s\n",
	`mysql_îr‹
(
mysql
));

25 
	}
}

28 
	$Accou¡_Pî°_IsU£rName
(c⁄° * 
«me
){

29 
SQL
[100];

30 
MYSQL_RES
 * 
ªs
;

31 
MYSQL_ROW
 
row
;

32 
πn
 = 0;

33 
	`•rötf
(
SQL
,"SELECT uid FROMáccou¡ WHEREÇamê'%s'",
«me
);

34 if(
	`mysql_ªÆ_quîy
(
mysql
 , 
SQL
 , 
	`°æí
(SQL))){

37 
ªs
 = 
	`mysql_°‹e_ªsu…
(
mysql
);

38 
row
 = 
	`mysql_„tch_row
(
ªs
);

39 if(
row
Ë
πn
 = 
	`©oi
(row[0]);

40 
	`mysql_‰ì_ªsu…
(
ªs
);

41  
πn
;

42 
	}
}

44 
	$Accou¡_Pî°_AddU£r
(c⁄° *
«me
 ,
£x
 , c⁄° *
∑ssw‹d
){

45 
SQL
[100];

46 
	`•rötf
(
SQL
,"INSERT INTOáccou¡ VALUES (NULL , '%s' ,'%d' , 0, 0 , md5('%s'))", 
«me
 ,
£x
 , 
∑ssw‹d
);

47 if(
	`mysql_ªÆ_quîy
(
mysql
 , 
SQL
 , 
	`°æí
(SQL))){

48 
	`¥ötf
("%s\n",
	`mysql_îr‹
(
mysql
));

53 
	}
}

56 
	$Accou¡_Pî°_M©chU£rAndPassw‹d
(
uid
 , c⁄° * 
∑ssw‹d
){

57 
SQL
[100];

58 
MYSQL_RES
 * 
ªs
;

59 
MYSQL_ROW
 
row
;

60 
πn
;

61 
	`•rötf
(
SQL
,"SELECT * FROMáccount WHERE (uid = '%d' ANDÖassword = md5('%s'))"

62 , 
uid
 , 
∑ssw‹d
);

63 if(
	`mysql_ªÆ_quîy
(
mysql
 , 
SQL
 ,
	`°æí
(SQL))){

66 
ªs
 = 
	`mysql_°‹e_ªsu…
(
mysql
);

67 
row
 = 
	`mysql_„tch_row
(
ªs
);

68 if(
row
Ë
πn
 = 1;

69 
πn
 = 0;

70 
	`mysql_‰ì_ªsu…
(
ªs
);

71  
πn
;

72 
	}
}

74 * 
	$Accou¡_Pî°_GëU£rNameFromUid
(
uid
){

75 
MYSQL_RES
 *
ªs
;

76 
MYSQL_ROW
 
row
;

77 * 
πn
 = 
NULL
;

78 
SQL
[100];

79 
	`•rötf
(
SQL
, "SELECTÇamêFROMáccou¡ WHERE uid = '%d'" ,
uid
);

80 if(
	`mysql_ªÆ_quîy
(
mysql
 , 
SQL
 ,
	`°æí
(SQL))){

81 
	`¥ötf
("%s\n" ,
	`mysql_îr‹
(
mysql
));

84 
ªs
 = 
	`mysql_°‹e_ªsu…
(
mysql
);

85 
row
 = 
	`mysql_„tch_row
(
ªs
);

86 if(
row
){

87 
πn
 = (*)
	`mÆloc
(() * 30);

88 
	`°r˝y
(
πn
 ,
row
[0]);

90 
	`mysql_‰ì_ªsu…
(
ªs
);

91  
πn
;

92 
	}
}

	@Server/Persistence/Account_Persist.h

8 #i‚de‡
_ACCOUNT_PERSIST_H


9 
	#_ACCOUNT_PERSIST_H


	)

16 
Accou¡_Pî°_ChIsO∆öe
(
uid
 ,
is_⁄löe
);

24 
Accou¡_Pî°_IsU£rName
(c⁄° * 
«me
);

32 
Accou¡_Pî°_AddU£r
(c⁄° * 
«me
 ,
£x
, c⁄° *
∑ssw‹d
);

40 
Accou¡_Pî°_M©chU£rAndPassw‹d
(
uid
 , c⁄° * 
∑ssw‹d
);

42 * 
Accou¡_Pî°_GëU£rNameFromUid
(
uid
);

	@Server/Persistence/Chat_Persist.c

8 
	~<°dio.h
>

9 
	~<°rög.h
>

10 
	~<°dlib.h
>

11 
	~"Ch©_Pîsi°.h
"

12 
	~<mysql/mysql.h
>

13 
MYSQL
 *
mysql
;

15 
	$Ch©_Pî°_Priv©e
(
‰om_uid
 ,
to_uid
 ,c⁄° *
msg
, 
is_ofÊöe
){

16 
SQL
[100 + 
	`°æí
(
msg
)];

17 
	`•rötf
(
SQL
 ,

19 
‰om_uid
 ,
to_uid
 ,
msg
 ,
is_ofÊöe
);

20 if(
	`mysql_ªÆ_quîy
(
mysql
 ,
SQL
 ,
	`°æí
(SQL))){

21 
	`¥ötf
("%s",
	`mysql_îr‹
(
mysql
));

25 
	}
}

26 
	$Ch©_Pî°_Group
(
uid
 ,
gid
 ,c⁄° *
msg
, c⁄° *
ofÊi°
){

27 
SQL
[100 + 
	`°æí
(
msg
)];

28 
	`•rötf
(
SQL
 ,

30 
gid
 ,
uid
 ,
msg
 ,
ofÊi°
);

31 if(
	`mysql_ªÆ_quîy
(
mysql
 ,
SQL
 ,
	`°æí
(SQL))){

32 
	`¥ötf
("%s",
	`mysql_îr‹
(
mysql
));

36 
	}
}

38 
MYSQL_RES
 * 
	$Ch©_Pî°_GëOfÊöePriv©eMsg
(
uid
){

39 
SQL
[100];

40 
MYSQL_RES
 *
ªs
;

41 
	`•rötf
(
SQL
,"SELECT msg FROMÖriv©e_ª¯WHERE (to_uid = '%d' AND is_ofÊöê1)" ,
uid
);

42 if(
	`mysql_ªÆ_quîy
(
mysql
 ,
SQL
 ,
	`°æí
(SQL))){

43 
	`¥ötf
("%s\n",
	`mysql_îr‹
(
mysql
));

44  
NULL
;

46 
ªs
 = 
	`mysql_°‹e_ªsu…
(
mysql
);

47 
	`•rötf
(
SQL
, "UPDATEÖriv©e_ª¯£àis_ofÊöê'0' WHEREÅo_uid = '%d'" ,
uid
);

48 if(
	`mysql_ªÆ_quîy
(
mysql
 ,
SQL
 ,
	`°æí
(SQL))){

49 
	`¥ötf
("%s\n",
	`mysql_îr‹
(
mysql
));

50  
NULL
;

52  
ªs
;

53 
	}
}

55 
MYSQL_RES
 *
	$Ch©_Pî°_GëPriv©eRec
(
uid
 ,
fuid
){

56 
SQL
[200];

57 
	`•rötf
(
SQL
 ,"SELECT msg FROMÖrivate_rec WHERE ((to_uid = '%d' AND from_uid = '%d')"

58 " OR (to_uid = '%d' AND from_uid = '%d'))" ,
uid
 ,
fuid
, fuid ,uid);

59 if(
	`mysql_ªÆ_quîy
(
mysql
 ,
SQL
 ,
	`°æí
(SQL))){

60 
	`¥ötf
("%s\n",
	`mysql_îr‹
(
mysql
));

61  
NULL
;

63  
	`mysql_°‹e_ªsu…
(
mysql
);

64 
	}
}

	@Server/Persistence/Chat_Persist.h

8 #i‚de‡
_CHAT_PERSIST_H


9 
	#_CHAT_PERSIST_H


	)

10 
	~<mysql/mysql.h
>

12 
Ch©_Pî°_Priv©e
(
‰om_uid
 ,
to_uid
 ,c⁄° *
msg
 ,
is_ofÊöe
);

15 
Ch©_Pî°_Group
(
uid
 ,
gid
 ,c⁄° *
msg
 ,c⁄° *
ofÊi°
);

17 
MYSQL_RES
* 
Ch©_Pî°_GëOfÊöePriv©eMsg
(
uid
);

19 
MYSQL_RES
 *
Ch©_Pî°_GëPriv©eRec
(
uid
 ,
fuid
);

	@Server/Persistence/Friends_Persist.c

8 
	~<°dio.h
>

9 
	~"Frõnds_Pîsi°.h
"

10 
	~"../Sîvi˚/Frõnds_Srv.h
"

11 
	~"../Comm⁄/Li°.h
"

12 
MYSQL
* 
mysql
;

15 
	$Frõnds_Pî°_Add
(
uid
 ,
fuid
){

16 
SQL
[100];

17 
	`•rötf
(
SQL
 ,"INSERT INTO frõnd†VALUES('%d' ,'%d' ,'0' ,'0')",
uid
 ,
fuid
);

18 if(
	`mysql_ªÆ_quîy
(
mysql
 ,
SQL
 ,
	`°æí
(SQL))){

19 
	`¥ötf
("%s",
	`mysql_îr‹
(
mysql
));

23 
	}
}

25 
	$Frõnds_Pî°_Aµly
(
uid
 ,
fuid
 ,
is_agªe
){

26 
SQL
[100];

27 if(
is_agªe
)

28 
	`•rötf
(
SQL
 ,"UPDATE frõnd†SET sèã = '1' WHERE (uid ='%d' AND fuid = '%d')",
uid
 ,
fuid
);

30 
	`•rötf
(
SQL
 ,"DELETE FROM frõnd†WHERE uid = '%d' AND fuid = '%d'",
uid
 ,
fuid
);

31 if(
	`mysql_ªÆ_quîy
(
mysql
 ,
SQL
 ,
	`°æí
(SQL))){

32 
	`¥ötf
("%s",
	`mysql_îr‹
(
mysql
));

36 
	}
}

38 
	$Frõnds_Pî°_GëLi°
(
‰õnds_t
 * 
FrõndsLi°
 ,
uid
){

39 
MYSQL_RES
 * 
ªs
 , *
_ªs
;

40 
MYSQL_ROW
 
row
 ,
_row
;

41 
SQL
[100];

42 
‰õnds_t
 *
NewNode
 = 
NULL
;

43 
	`•rötf
(
SQL
 ,

45 
uid
 ,uid);

46 if(
	`mysql_ªÆ_quîy
(
mysql
 ,
SQL
 ,
	`°æí
(SQL))){

47 
	`¥ötf
("%s",
	`mysql_îr‹
(
mysql
));

50 
ªs
 = 
	`mysql_°‹e_ªsu…
(
mysql
);

51 (
row
 = 
	`mysql_„tch_row
(
ªs
))){

52 
NewNode
 = (
‰õnds_t
 *)
	`mÆloc
((friends_t));

53 
NewNode
 -> 
uid
 = 
	`©oi
(
row
[(uid !=átoi(row[1]))]);

54 
NewNode
 -> 
is_fﬁlow
 = 
	`©oi
(
row
[2]);

55 
NewNode
 -> 
°©e
 = 
	`©oi
(
row
[3]);

56 
	`•rötf
(
SQL
 ,"SELECT * FROMáccou¡ WHERE uid = '%d'" ,
NewNode
 -> 
uid
);

57 
	`mysql_ªÆ_quîy
(
mysql
 ,
SQL
,
	`°æí
(SQL));

58 
_ªs
 = 
	`mysql_°‹e_ªsu…
(
mysql
);

59 
_row
 = 
	`mysql_„tch_row
(
_ªs
);

60 
	`°r˝y
(
NewNode
 -> 
«me
 ,
_row
[1]);

61 
NewNode
 -> 
£x
 = 
	`©oi
(
_row
[2]);

62 
NewNode
 -> 
is_vù
 = 
	`©oi
(
_row
[3]);

63 
NewNode
 -> 
is_⁄löe
 = 
	`©oi
(
_row
[4]);

64 
	`Li°_AddHód
(
FrõndsLi°
 ,
NewNode
);

65 
	`mysql_‰ì_ªsu…
(
_ªs
);

67 
	`mysql_‰ì_ªsu…
(
ªs
);

69 
	}
}

70 
	$Frõnds_Pî°_GëFrõndInfo
(
‰õnds_t
 *
Node
){

71 
SQL
[100];

72 
MYSQL_RES
 *
ªs
;

73 
MYSQL_ROW
 
row
;

74 
	`•rötf
(
SQL
 ,"SELECT * FROMáccou¡ WHERE uid = '%d'" ,
Node
 -> 
uid
);

75 
	`mysql_ªÆ_quîy
(
mysql
 ,
SQL
, 
	`°æí
(SQL));

76 
ªs
 = 
	`mysql_°‹e_ªsu…
(
mysql
);

77 
row
 = 
	`mysql_„tch_row
(
ªs
);

78 
	`°r˝y
(
Node
 -> 
«me
 ,
row
[1]);

79 
Node
 -> 
£x
 = 
	`©oi
(
row
[2]);

80 
Node
 -> 
is_vù
 = 
	`©oi
(
row
[3]);

81 
Node
 -> 
is_⁄löe
 = 
	`©oi
(
row
[4]);

82 
Node
 -> 
is_fﬁlow
 = 0;

83 
Node
 -> 
°©e
 = 0;

84 
	`mysql_‰ì_ªsu…
(
ªs
);

86 
	}
}

	@Server/Persistence/Friends_Persist.h

8 #i‚de‡
_FRIENDS_PERSIST_H


9 
	#_FRIENDS_PERSIST_H


	)

10 
	~"../Sîvi˚/Frõnds_Srv.h
"

11 
	~<mysql/mysql.h
>

13 
Frõnds_Pî°_Add
(
uid
 ,
fuid
);

15 
Frõnds_Pî°_Aµly
(
uid
 ,
fuid
 ,
is_¨gì
);

17 
Frõnds_Pî°_GëLi°
(
‰õnds_t
 * 
FrõndsLi°
 ,
uid
);

23 
Frõnds_Pî°_GëFrõndInfo
(
‰õnds_t
 * 
Node
 );

	@Server/Persistence/Group_Persist.c

8 
	~<°dio.h
>

9 
	~<°rög.h
>

10 
	~"MySQL.h
"

11 
	~"Group_Pîsi°.h
"

12 
	~"../Sîvi˚/Group_Srv.h
"

13 
	~"../Comm⁄/Li°.h
"

14 
	~"../Sîvi˚/Group_Srv.h
"

15 
MYSQL
 *
mysql
;

16 
	$Group_Pî°_IsGroup
(c⁄° *
«me
){

17 
SQL
[100];

18 
MYSQL_RES
 * 
ªs
;

19 
MYSQL_ROW
 
row
;

20 
πn
 = 0;

21 
	`•rötf
(
SQL
,"SELECT gid FROM group†WHEREÇamê'%s'",
«me
);

22 if(
	`mysql_ªÆ_quîy
(
mysql
 , 
SQL
 , 
	`°æí
(SQL))){

23 
	`¥ötf
("%s\n",
	`mysql_îr‹
(
mysql
));

26 
ªs
 = 
	`mysql_°‹e_ªsu…
(
mysql
);

27 
row
 = 
	`mysql_„tch_row
(
ªs
);

28 if(
row
Ë
πn
 = 
	`©oi
(row[0]);

29 
	`mysql_‰ì_ªsu…
(
ªs
);

30  
πn
;

31 
	}
}

32 
	$Group_Pî°_Cª©e
(
uid
 ,c⁄° *
«me
){

33 
gid
;

34 
SQL
[100];

35 
	`•rötf
(
SQL
 ,"INSERT INTO group†VALUES(NULL ,'%s', '%d' , 1)", 
«me
 ,
uid
);

36 if(
	`mysql_ªÆ_quîy
(
mysql
 ,
SQL
 ,
	`°æí
(SQL))){

37 
	`¥ötf
("%s\n" ,
	`mysql_îr‹
(
mysql
));

40 
	`•rötf
(
SQL
 ,"SELECT LAST_INSERT_ID()");

41 if(
	`mysql_ªÆ_quîy
(
mysql
 ,
SQL
 ,
	`°æí
(SQL))){

42 
	`¥ötf
("%s\n" ,
	`mysql_îr‹
(
mysql
));

45 
MYSQL_RES
 *
ªs
 = 
	`mysql_°‹e_ªsu…
(
mysql
);

46 
MYSQL_ROW
 
row
 = 
	`mysql_„tch_row
(
ªs
);

47 
gid
 = 
	`©oi
(
row
[0]);

48 
	`•rötf
(
SQL
 ,"INSERT INTO group_membî VALUES('%d' ,'%d','2' ,'1')",
gid
 ,
uid
);

49 if(
	`mysql_ªÆ_quîy
(
mysql
 ,
SQL
 ,
	`°æí
(SQL))){

50 
	`¥ötf
("%s\n" ,
	`mysql_îr‹
(
mysql
));

54  
gid
;

55 
	}
}

57 
	$Group_Pî°_AddMembî
(
gid
 ,
uid
 ){

58 
SQL
[100];

59 
	`•rötf
(
SQL
 ,"INSERT INTO group_membî VALUES('%d' ,'%d','0' ,'1')",
gid
 ,
uid
);

60 if(
	`mysql_ªÆ_quîy
(
mysql
 ,
SQL
 ,
	`°æí
(SQL))){

61 
	`¥ötf
("%s\n" ,
	`mysql_îr‹
(
mysql
));

66 
	}
}

68 
	$Group_Pî°_DñëeMembî
(
gid
 ,
uid
){

69 
SQL
[100];

70 
	`•rötf
(
SQL
 ,"DELETE FROM group_membî WHERE (gid = '%d' AND uid ='%d')", 
gid
 ,
uid
);

71 if(
	`mysql_ªÆ_quîy
(
mysql
 ,
SQL
 ,
	`°æí
(SQL))){

72 
	`¥ötf
("%s",
	`mysql_îr‹
(
mysql
));

76 
	}
}

78 
	$Group_Pî°_Dñëe
(
gid
){

79 
SQL
[100];

80 
	`•rötf
(
SQL
 ,"DELETE FROM group†WHERE gid = '%d'",
gid
);

81 if(
	`mysql_ªÆ_quîy
(
mysql
 ,
SQL
 ,
	`°æí
(SQL))){

82 
	`¥ötf
("%s\n",
	`mysql_îr‹
(
mysql
));

85 
	`•rötf
(
SQL
,"DELETE FROM group_membî WHERE gid = '%d'" ,
gid
);

86 if(
	`mysql_ªÆ_quîy
(
mysql
 ,
SQL
 ,
	`°æí
(SQL))){

87 
	`¥ötf
("%s\n",
	`mysql_îr‹
(
mysql
));

91 
	}
}

93 
	$Group_Pî°_GëMyGroup
(
group_t
 *
MyGroupLi°
 ,
uid
){

94 
group_t
 *
NewNode
;

95 
SQL
[100];

96 
MYSQL_RES
 *
ªs
 ;

97 
MYSQL_ROW
 
row
 ;

98 
	`•rötf
(
SQL
 ,"SELECT gid FROM group_membî WHERE uid = '%d'",
uid
);

99 if(
	`mysql_ªÆ_quîy
(
mysql
 ,
SQL
 ,
	`°æí
(SQL))){

100 
	`¥ötf
("%s",
	`mysql_îr‹
(
mysql
));

103 
ªs
 = 
	`mysql_°‹e_ªsu…
(
mysql
);

104 (
row
 = 
	`mysql_„tch_row
(
ªs
))){

105 
NewNode
 = 
	`Group_Pî°_GëInfo
(
	`©oi
(
row
[0]));

106 
	`Li°_AddHód
(
MyGroupLi°
 ,
NewNode
);

108 
	`mysql_‰ì_ªsu…
(
ªs
);

110 
	}
}

113 
	$Group_Pî°_GëGroupMembî
(
group_membî_t
* 
GroupMembî
,
gid
){

114 
MYSQL_RES
 *
ªs
,*
_ªs
;

115 
MYSQL_ROW
 
row
 ,
_row
;

116 
SQL
[100];

117 
group_membî_t
 *
NewNode
;

118 
	`•rötf
(
SQL
 ,"SELECT * FROM group_membî WHERE gid = '%d'" ,
gid
);

119 if(
	`mysql_ªÆ_quîy
(
mysql
 ,
SQL
 ,
	`°æí
(SQL))){

120 
	`¥ötf
("%s",
	`mysql_îr‹
(
mysql
));

123 
ªs
 = 
	`mysql_°‹e_ªsu…
(
mysql
);

124 (
row
 = 
	`mysql_„tch_row
(
ªs
))){

125 
	`•rötf
(
SQL
 ,"SELECT * FROMáccou¡ WHERE uid = '%s'" ,
row
[1]);

126 if(
	`mysql_ªÆ_quîy
(
mysql
 ,
SQL
 ,
	`°æí
(SQL))){

127 
	`¥ötf
("%s",
	`mysql_îr‹
(
mysql
));

130 
_ªs
 = 
	`mysql_°‹e_ªsu…
(
mysql
);

131 
_row
 = 
	`mysql_„tch_row
(
_ªs
);

132 
NewNode
 = (
group_membî_t
 *)

133 
	`mÆloc
((
group_membî_t
));

134 
NewNode
 -> 
gid
 = 
	`©oi
(
row
[0]);

135 
NewNode
 -> 
u£r_öfo
.
uid
 = 
	`©oi
(
row
[1]);

136 
	`°r˝y
(
NewNode
 -> 
u£r_öfo
.
«me
 ,
_row
[1]);

137 
NewNode
 -> 
u£r_öfo
.
£x
 = 
	`©oi
(
_row
[2]);

138 
NewNode
 -> 
u£r_öfo
.
is_vù
 = 
	`©oi
(
_row
[3]);

139 
NewNode
 -> 
u£r_öfo
.
is_⁄löe
 = 
	`©oi
(
_row
[4]);

140 
NewNode
 -> 
u£r_öfo
.
is_fﬁlow
 = 0;

141 
NewNode
 -> 
u£r_öfo
.
°©e
 = 0;

142 
NewNode
 -> 
u£r_öfo
.
√xt
 = 
NULL
;

143 
NewNode
 -> 
≥rmissi⁄
 = 
	`©oi
(
row
[2]);

144 
	`Li°_AddHód
(
GroupMembî
 ,
NewNode
);

145 
	`mysql_‰ì_ªsu…
(
_ªs
);

147 
	`mysql_‰ì_ªsu…
(
ªs
);

150 
	}
}

152 
group_t
 * 
	$Group_Pî°_GëInfo
(
gid
){

153 
MYSQL_RES
 *
ªs
;

154 
MYSQL_ROW
 
row
;

155 
SQL
[100];

156 
group_t
 *
NewNode
 = (group_à*)
	`mÆloc
((group_t));

157 
NewNode
 -> 
gid
 = gid;

158 
	`•rötf
(
SQL
,"SELECT * FROM group†WHERE gid = '%d'",
NewNode
 -> 
gid
);

159 if(
	`mysql_ªÆ_quîy
(
mysql
 ,
SQL
 ,
	`°æí
(SQL))){

160 
	`¥ötf
("%s",
	`mysql_îr‹
(
mysql
));

163 
ªs
 = 
	`mysql_°‹e_ªsu…
(
mysql
);

164 
row
 = 
	`mysql_„tch_row
(
ªs
);

165 
	`°r˝y
(
NewNode
 -> 
«me
 ,
row
[1]);

166 
NewNode
 -> 
ow√r
 = 
	`©oi
(
row
[2]);

167 
NewNode
 -> 
num
 = 
	`©oi
(
row
[3]);

168 
	`mysql_‰ì_ªsu…
(
ªs
);

169  
NewNode
;

170 
	}
}

	@Server/Persistence/Group_Persist.h

8 #i‚de‡
_GROUP_PERSIST_H


9 
	#_GROUP_PERSIST_H


	)

10 
	~"../Sîvi˚/Group_Srv.h
"

12 
Group_Pî°_IsGroup
(c⁄° *
g«me
);

15 
Group_Pî°_Cª©e
(
uid
 ,c⁄° *
«me
);

18 
Group_Pî°_AddMembî
(
gid
 ,
uid
);

21 
Group_Pî°_DñëeMembî
(
gid
 ,
uid
);

24 
Group_Pî°_Dñëe
(
gid
);

26 
Group_Pî°_GëMyGroup
(
group_t
 *
MyGroupLi°
 ,
uid
);

28 
Group_Pî°_GëGroupMembî
(
group_membî_t
* 
GroupMembî
,
gid
);

30 
group_t
 * 
Group_Pî°_GëInfo
(
gid
);

	@Server/Persistence/MySQL.c

8 
	~<°dio.h
>

9 
	~"MySQL.h
"

11 
MYSQL
 * 
	gmysql
;

13 
	$MySQL_C⁄√˘
(c⁄° *
ho°
 ,c⁄° *
u£r
 ,c⁄° *
∑ss
 ,c⁄° *
d©aba£
){

14 
mysql
 = 
	`mysql_öô
(
NULL
);

15 if(
	`mysql_ªÆ_c⁄√˘
(
mysql
,
ho°
,
u£r
,
∑ss
,
d©aba£
,0,
NULL
,0) == 0){

19 
	}
}

22 
	$MySQL_Clo£
(){

23 
	`mysql_˛o£
(
mysql
);

24 
	}
}

	@Server/Persistence/MySQL.h

8 #i‚de‡
_MYSQL_H


9 
	#_MYSQL_H


	)

12 
	~<mysql/mysql.h
>

17 
MySQL_C⁄√˘
(c⁄° *
ho°
 ,c⁄° *
u£r
 ,c⁄° *
∑ss
 ,c⁄° *
d©aba£
);

23 
MySQL_Clo£
();

	@Server/Service/Account_Srv.c

8 
	~<°dio.h
>

9 
	~<°rög.h
>

10 
	~<sys/sockë.h
>

11 
	~<sys/ty≥s.h
>

12 
	~<√töë/ö.h
>

13 
	~<uni°d.h
>

14 
	~"Accou¡_Srv.h
"

15 
	~"Ch©_Srv.h
"

16 
	~"Frõnds_Srv.h
"

17 
	~"../Pîsi°í˚/Accou¡_Pîsi°.h
"

18 
	~"../Pîsi°í˚/Frõnds_Pîsi°.h
"

19 
	~"../Comm⁄/cJSON.h
"

20 
	~"../Comm⁄/Li°.h
"

21 
	#MSG_LEN
 1024

	)

23 
⁄löe_t
 * 
O∆öeLi°
;

25 
	$Accou¡_Srv_SídIsO∆öe
(
uid
 ,
is_⁄löe
){

26 
f_sock_fd
;

27 
‰õnds_t
 *
FrõndsLi°
 ,*
f
;

28 
	`Li°_Inô
(
FrõndsLi°
 ,
‰õnds_t
);

29 
	`Frõnds_Pî°_GëLi°
(
FrõndsLi°
 ,
uid
);

30 
	`Li°_F‹Each
(
FrõndsLi°
 ,
f
){

31 if(
f
->
is_⁄löe
){

32 
f_sock_fd
 = 
	`Ch©_Srv_GëFrõndSock
(
f
->
uid
);

33 if(
f_sock_fd
 == -1)  0;

34 
cJSON
 *
roŸ
 = 
	`cJSON_Cª©eObje˘
();

35 
cJSON
 *
ôem
 = 
	`cJSON_Cª©eSåög
("I");

36 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"ty≥" ,
ôem
);

37 
ôem
 = 
	`cJSON_Cª©eNumbî
(
uid
);

38 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"fuid",
ôem
);

39 
ôem
 = 
	`cJSON_Cª©eBoﬁ
(
is_⁄löe
);

40 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"is_⁄löe",
ôem
);

41 *
out
 = 
	`cJSON_Pröt
(
roŸ
);

42 
	`cJSON_Dñëe
(
roŸ
);

44 if(
	`£nd
(
f_sock_fd
 ,(*)
out
 ,
MSG_LEN
 ,0) <= 0){

45 
	`≥º‹
("send ÂÆ¢Êà∑Á´ØÂìçÂ∫îÂ§±Ë¥•");

46 
	`‰ì
(
out
);

49 
	`‰ì
(
out
);

52 
	`Li°_De°roy
(
FrõndsLi°
, 
‰õnds_t
);

54 
	}
}

56 
	$Accou¡_Srv_ChIsO∆öe
(
uid
 ,
is_⁄löe
 ,
sock_fd
){

57 
⁄löe_t
 *
curPos
;

58 
πn
 = 0;

59 if(
is_⁄löe
){

60 
	`Li°_F‹Each
(
O∆öeLi°
 ,
curPos
){

61 if(
curPos
 -> 
uid
 == uid){

62 
	`˛o£
(
curPos
 -> 
sock_fd
);

63 
curPos
 -> 
sock_fd
 = sock_fd;

64 
πn
 = 1;

65 
≥r
;

68 
curPos
 = (
⁄löe_t
 *)
	`mÆloc
((online_t));

69 
curPos
 -> 
uid
 = uid;

70 
curPos
 -> 
sock_fd
 = sock_fd;

71 
curPos
 -> 
√xt
 = 
NULL
;

72 
	`Li°_AddHód
(
O∆öeLi°
 ,
curPos
);

73 
πn
 = 1;

75 
	`Li°_F‹Each
(
O∆öeLi°
 ,
curPos
){

76 if(
curPos
 -> 
sock_fd
 == sock_fd){

77 
uid
 = 
πn
 = 
curPos
 -> uid;

78 
	`Li°_FªeNode
(
O∆öeLi°
 ,
curPos
 ,
⁄löe_t
);

83 if(
uid
 == -1)  0;

84 
≥r
: if(
	`Accou¡_Pî°_ChIsO∆öe
(
uid
 ,
is_⁄löe
Ë=0Ë
πn
 = 0;

85  
πn
;

87 
	}
}

89 
	$Accou¡_Srv_Out
(
sock_fd
 ,*
JSON
){

90 
uid
;

91 
πn
;

92 
cJSON
 *
roŸ
 = 
	`cJSON_P¨£
(
JSON
);

93 
cJSON
 *
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"uid");

94 
uid
 = 
ôem
 -> 
vÆueöt
;

95 
	`cJSON_Dñëe
(
roŸ
);

96 
πn
 = 
	`Accou¡_Srv_ChIsO∆öe
(
uid
 ,0 ,
sock_fd
);

97 if(
πn
 != -1){

98 
	`Accou¡_Srv_SídIsO∆öe
(
uid
 ,0);

101 
roŸ
 = 
	`cJSON_Cª©eObje˘
();

102 
ôem
 = 
	`cJSON_Cª©eSåög
("R");

103 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"ty≥" ,
ôem
);

104 
ôem
 = 
	`cJSON_Cª©eBoﬁ
((
πn
 > 0));

105 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"ªs",
ôem
);

106 
ôem
 = 
	`cJSON_Cª©eSåög
("ÊúçÂä°Âô®ÂºÇÂ∏∏ ÂñµÂñµ?");

107 
	`cJSON_AddIãmToObje˘
(
roŸ
 , "ªas⁄" ,
ôem
);

108 *
out
 = 
	`cJSON_Pröt
(
roŸ
);

109 if(
	`£nd
(
sock_fd
 ,(*)
out
 , 
MSG_LEN
 ,0) <= 0){

111 
πn
 = 0;

115  
πn
;

116 
	}
}

119 
	$Accou¡_Srv_SignIn
(
sock_fd
 ,* 
JSON
){

120 
«me
[30] , 
∑ssw‹d
[30];

121 
£x
;

122 
cJSON
 *
roŸ
 = 
	`cJSON_P¨£
(
JSON
);

123 
cJSON
 *
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 , "name");

124 
	`°r˝y
(
«me
,
ôem
 -> 
vÆue°rög
);

125 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"sex");

126 
£x
 = 
ôem
 -> 
vÆueöt
;

127 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 , "password");

128 
	`°r˝y
(
∑ssw‹d
 , 
ôem
 -> 
vÆue°rög
);

129 
	`cJSON_Dñëe
(
roŸ
);

130 
roŸ
 = 
	`cJSON_Cª©eObje˘
();

131 
ôem
 = 
	`cJSON_Cª©eSåög
("R");

132 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"ty≥" ,
ôem
);

133 if(
	`Accou¡_Pî°_IsU£rName
(
«me
)){

134 
ôem
 = 
	`cJSON_Cª©eBoﬁ
(0);

135 
	`cJSON_AddIãmToObje˘
(
roŸ
 , "ªs" , 
ôem
);

136 
ôem
 = 
	`cJSON_Cª©eSåög
("Áî®Êà∑ÂêçÂ∑≤Â≠òÂú®");

137 
	`cJSON_AddIãmToObje˘
(
roŸ
 , "ªas⁄" , 
ôem
);

138 *
out
 = 
	`cJSON_Pröt
(
roŸ
);

139 if(
	`£nd
(
sock_fd
 , (*)
out
 , 
MSG_LEN
 , 0) < 0){

142 
	`cJSON_Dñëe
(
roŸ
);

143 
	`‰ì
(
out
);

145 if(
	`Accou¡_Pî°_AddU£r
(
«me
 ,
£x
 ,
∑ssw‹d
)){

146 
ôem
 = 
	`cJSON_Cª©eBoﬁ
(1);

147 
	`cJSON_AddIãmToObje˘
(
roŸ
 , "ªs" , 
ôem
);

148 *
out
 = 
	`cJSON_Pröt
(
roŸ
);

149 if(
	`£nd
(
sock_fd
 , (*)
out
 , 
MSG_LEN
 , 0) < 0){

152 
	`cJSON_Dñëe
(
roŸ
);

153 
	`‰ì
(
out
);

156 
ôem
 = 
	`cJSON_Cª©eBoﬁ
(0);

157 
	`cJSON_AddIãmToObje˘
(
roŸ
 , "ªs" , 
ôem
);

158 
ôem
 = 
	`cJSON_Cª©eSåög
("ÊúçÂä°Âô®ÂºÇÂ∏∏");

159 
	`cJSON_AddIãmToObje˘
(
roŸ
 , "ªas⁄" , 
ôem
);

160 *
out
 = 
	`cJSON_Pröt
(
roŸ
);

161 if(
	`£nd
(
sock_fd
 , (*)
out
 , 
MSG_LEN
 , 0) < 0){

164 
	`cJSON_Dñëe
(
roŸ
);

165 
	`‰ì
(
out
);

168 
	}
}

171 
	$Accou¡_Srv_Logö
(
sock_fd
 ,*
JSON
){

172 
«me
[30] , 
∑ssw‹d
[30];

173 
uid
;

174 
cJSON
 *
roŸ
 = 
	`cJSON_P¨£
(
JSON
);

175 
cJSON
 *
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 , "name");

176 
	`°r˝y
(
«me
,
ôem
 -> 
vÆue°rög
);

177 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 , "password");

178 
	`°r˝y
(
∑ssw‹d
 , 
ôem
 -> 
vÆue°rög
);

179 
	`cJSON_Dñëe
(
roŸ
);

180 
roŸ
 = 
	`cJSON_Cª©eObje˘
();

181 
ôem
 = 
	`cJSON_Cª©eSåög
("R");

182 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"ty≥" ,
ôem
);

183 if((
uid
 = 
	`Accou¡_Pî°_IsU£rName
(
«me
)) == 0){

184 
ôem
 = 
	`cJSON_Cª©eBoﬁ
(0);

185 
	`cJSON_AddIãmToObje˘
(
roŸ
 , "ªs" , 
ôem
);

186 
ôem
 = 
	`cJSON_Cª©eSåög
("Áî®Êà∑Âêç‰∏çÂ≠òÂú®");

187 
	`cJSON_AddIãmToObje˘
(
roŸ
 , "ªas⁄" , 
ôem
);

188 *
out
 = 
	`cJSON_Pröt
(
roŸ
);

189 if(
	`£nd
(
sock_fd
 , (*)
out
 , 
MSG_LEN
 , 0) < 0){

192 
	`cJSON_Dñëe
(
roŸ
);

193 
	`‰ì
(
out
);

196 if(
	`Accou¡_Pî°_M©chU£rAndPassw‹d
(
uid
 ,
∑ssw‹d
)){

198 
	`Accou¡_Srv_ChIsO∆öe
(
uid
 ,1 ,
sock_fd
);

201 
ôem
 = 
	`cJSON_Cª©eBoﬁ
(1);

202 
	`cJSON_AddIãmToObje˘
(
roŸ
 , "ªs" , 
ôem
);

203 
ôem
 = 
	`cJSON_Cª©eNumbî
(
uid
);

204 
	`cJSON_AddIãmToObje˘
(
roŸ
 , "uid" ,
ôem
);

205 *
out
 = 
	`cJSON_Pröt
(
roŸ
);

206 if(
	`£nd
(
sock_fd
 , (*)
out
 , 
MSG_LEN
 , 0) < 0){

209 
	`cJSON_Dñëe
(
roŸ
);

210 
	`‰ì
(
out
);

214 
ôem
 = 
	`cJSON_Cª©eBoﬁ
(0);

215 
	`cJSON_AddIãmToObje˘
(
roŸ
 , "ªs" , 
ôem
);

216 
ôem
 = 
	`cJSON_Cª©eSåög
("Áî®Êà∑ÂêçÂØÜÁ†Å‰∏çÂåπÈÖç");

217 
	`cJSON_AddIãmToObje˘
(
roŸ
 , "ªas⁄" , 
ôem
);

218 *
out
 = 
	`cJSON_Pröt
(
roŸ
);

219 if(
	`£nd
(
sock_fd
 , (*)
out
 , 
MSG_LEN
 , 0) < 0){

222 
	`cJSON_Dñëe
(
roŸ
);

223 
	`‰ì
(
out
);

226 
	}
}

	@Server/Service/Account_Srv.h

8 #i‚de‡
_ACCOUNT_SER_H


9 
	#_ACCOUNT_SER_H


	)

10 
	~"Frõnds_Srv.h
"

15 
	s⁄löe
{

16 
	muid
;

17 
	msock_fd
;

18 
⁄löe
 *
	m√xt
;

19 } 
	t⁄löe_t
;

29 
Accou¡_Srv_ChIsO∆öe
(
uid
 ,
is_⁄löe
 ,
sock_fd
);

32 
Accou¡_Srv_SídIsO∆öe
(
uid
, 
is_⁄löe
);

35 
Accou¡_Srv_Out
(
sock_fd
 , *
JSON
);

37 
Accou¡_Srv_SignIn
(
sock_fd
 , * 
JSON
);

39 
Accou¡_Srv_Logö
(
sock_fd
 ,* 
JSON
);

	@Server/Service/Chat_Srv.c

8 
	~<°dio.h
>

9 
	~<°rög.h
>

10 
	~<mysql/mysql.h
>

11 
	~"Accou¡_Srv.h
"

12 
	~"C⁄√˘.h
"

13 
	~"Ch©_Srv.h
"

14 
	~"Group_Srv.h
"

15 
	~"../Pîsi°í˚/Accou¡_Pîsi°.h
"

16 
	~"../Pîsi°í˚/Ch©_Pîsi°.h
"

17 
	~"../Pîsi°í˚/Group_Pîsi°.h
"

18 
	~"../Comm⁄/Comm⁄.h
"

19 
	~"../Comm⁄/Li°.h
"

20 
	~"../Comm⁄/cJSON.h
"

21 
	#MSG_LEN
 1024

	)

23 
⁄löe_t
 *
O∆öeLi°
;

25 
	$Ch©_Srv_Fûe
(c⁄° *
JSON
){

26 
cJSON
 *
roŸ
 = 
	`cJSON_P¨£
(
JSON
);

27 
cJSON
 *
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"fuid");

28 
fuid
 = 
ôem
 -> 
vÆueöt
;

29 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"size");

31 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
,"con");

33 
f_sock_fd
 = -1;

34 
⁄löe_t
 *
o
;

35 
	`Li°_F‹Each
(
O∆öeLi°
 ,
o
){

36 if(
o
 -> 
uid
 =
fuid
){

37 
f_sock_fd
 = 
o
-> 
sock_fd
;

41 if(
f_sock_fd
 == -1)  ;

42 if(
	`£nd
(
f_sock_fd
 ,
JSON
 ,
MSG_LEN
,0) <= 0){

43 
	`≥º‹
("send");

44 
	`cJSON_Dñëe
(
roŸ
);

47 
	`cJSON_Dñëe
(
roŸ
);

49 
	}
}

51 
	$Ch©_Srv_GëFrõndSock
(
fuid
){

52 
⁄löe_t
 *
curPos
;

53 
to_sock
 = -1;

54 
	`Li°_F‹Each
(
O∆öeLi°
 ,
curPos
){

55 if(
curPos
 -> 
uid
 =
fuid
){

56 
to_sock
 = 
curPos
 -> 
sock_fd
;

59  
to_sock
;

60 
	}
}

61 
	$Ch©_Srv_Priv©e
(
sock_fd
 ,c⁄° *
JSON
){

62 
‰om_uid
 ,
to_uid
 ,
to_sock
 ;

63 
u£r_d©e_t
 
Srvd©e
 = 
	`D©eNow
();

64 
u£r_time_t
 
Srvtime
 = 
	`TimeNow
();

65 
Srvd©ëime
[25];

66 
	`•rötf
(
Srvd©ëime
 ,"%04d-%02d-%02d %02d:%02d:%02d",

67 
Srvd©e
.
yór
 ,Srvd©e.
m⁄th
 ,Srvd©e.
day
,

68 
Srvtime
.
hour
 ,Srvtime.
möuã
 ,Srvtime.
£c⁄d
);

69 
cJSON
 *
roŸ
 = 
	`cJSON_P¨£
(
JSON
);

70 
cJSON
 *
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"from_uid");

71 
‰om_uid
 = 
ôem
 -> 
vÆueöt
;

72 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"to_uid");

73 
to_uid
 = 
ôem
 -> 
vÆueöt
;

74 
ôem
 = 
	`cJSON_Cª©eSåög
(
Srvd©ëime
);

75 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"time" ,
ôem
);

76 *
out
 = 
	`cJSON_Pröt
(
roŸ
);

77 
	`cJSON_Dñëe
(
roŸ
);

78 
to_sock
 = 
	`Ch©_Srv_GëFrõndSock
(
to_uid
);

79 
	`Ch©_Pî°_Priv©e
(
‰om_uid
 ,
to_uid
 ,
out
 ,(
to_sock
 == -1));

80 if(
to_sock
 == -1)  2;

81 if(
	`£nd
(
to_sock
 ,(*)
out
 ,
MSG_LEN
 ,0) <= 0){

82 
	`≥º‹
("send:");

83 
	`‰ì
(
out
);

86 
	`‰ì
(
out
);

88 
	}
}

89 
	$Ch©_Srv_Group
(
sock_fd
 ,c⁄° *
JSON
){

90 
‰om_uid
 ,
to_gid
 ,
to_sock
 ;

91 
ofÊi°
[100] = "," ,
°r
[4];

92 
group_membî_t
 *
GroupMembî
 ,*
g
;

93 
	`Li°_Inô
(
GroupMembî
 ,
group_membî_t
);

94 
u£r_d©e_t
 
Srvd©e
 = 
	`D©eNow
();

95 
u£r_time_t
 
Srvtime
 = 
	`TimeNow
();

96 
Srvd©ëime
[25];

97 
	`•rötf
(
Srvd©ëime
 ,"%04d-%02d-%02d %02d:%02d:%02d",

98 
Srvd©e
.
yór
 ,Srvd©e.
m⁄th
 ,Srvd©e.
day
,

99 
Srvtime
.
hour
 ,Srvtime.
möuã
 ,Srvtime.
£c⁄d
);

100 
cJSON
 *
roŸ
 = 
	`cJSON_P¨£
(
JSON
);

101 
cJSON
 *
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"from_uid");

102 
‰om_uid
 = 
ôem
 -> 
vÆueöt
;

103 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"to_gid");

104 
to_gid
 = 
ôem
 -> 
vÆueöt
;

105 
ôem
 = 
	`cJSON_Cª©eSåög
(
Srvd©ëime
);

106 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"time" ,
ôem
);

107 
ôem
 = 
	`cJSON_Cª©eSåög
(
	`Accou¡_Pî°_GëU£rNameFromUid
(
‰om_uid
));

108 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"u«me", 
ôem
);

109 *
out
 = 
	`cJSON_Pröt
(
roŸ
);

110 
	`cJSON_Dñëe
(
roŸ
);

111 
	`Group_Pî°_GëGroupMembî
(
GroupMembî
 ,
to_gid
);

112 
	`Li°_F‹Each
(
GroupMembî
 ,
g
){

113 if(
g
 -> 
u£r_öfo
.
uid
 =
‰om_uid
) ;

114 
to_sock
 = 
	`Ch©_Srv_GëFrõndSock
(
g
 -> 
u£r_öfo
.
uid
);

115 if(
to_sock
 == -1) {

116 
	`•rötf
(
°r
 ,"%d,",
g
->
u£r_öfo
.
uid
);

117 
	`°rˇt
(
ofÊi°
 ,
°r
);

120 if(
	`£nd
(
to_sock
 ,(*)
out
 ,
MSG_LEN
 ,0) <= 0){

121 
	`≥º‹
("send:");

122 
	`‰ì
(
out
);

126 
	`Ch©_Pî°_Group
(
‰om_uid
 ,
to_gid
 ,
out
 ,
ofÊi°
);

127 
	`‰ì
(
out
);

129 
	}
}

131 
	$Ch©_Srv_SídOfÊõnPriv©eMsg
(
uid
){

132 
MYSQL_RES
 *
ªs
 = 
	`Ch©_Pî°_GëOfÊöePriv©eMsg
(
uid
);

133 if(
ªs
 =
NULL
) ;

134 
MYSQL_ROW
 
row
;

135 
to_sock
 = 
	`Ch©_Srv_GëFrõndSock
(
uid
);

136 (
row
 = 
	`mysql_„tch_row
(
ªs
))){

137 if(
	`£nd
(
to_sock
 ,
row
[0] ,
MSG_LEN
 ,0) <= 0){

138 
	`≥º‹
("send:");

142 
	`mysql_‰ì_ªsu…
(
ªs
);

143 
	}
}

145 
	$Ch©_Srv_SídPriv©eRes
(
sock_fd
 ,c⁄° *
JSON
){

146 
MYSQL_RES
 *
ªs
 = 
NULL
;

147 
MYSQL_ROW
 
row
;

148 
cJSON
 *
roŸ
 = 
	`cJSON_P¨£
(
JSON
);

149 
cJSON
 *
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"uid");

150 
uid
 = 
ôem
 -> 
vÆueöt
;

151 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"fuid");

152 
fuid
 = 
ôem
 -> 
vÆueöt
;

153 
	`cJSON_Dñëe
(
roŸ
);

154 
ªs
 = 
	`Ch©_Pî°_GëPriv©eRec
(
uid
 ,
fuid
);

155 (
row
 = 
	`mysql_„tch_row
(
ªs
))){

156 
roŸ
 = 
	`cJSON_P¨£
(
row
[0]);

157 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"type");

158 
	`°r˝y
(
ôem
 -> 
vÆue°rög
,"E");

159 *
out
 = 
	`cJSON_Pröt
(
roŸ
);

160 
	`cJSON_Dñëe
(
roŸ
);

161 if(
	`£nd
(
sock_fd
 ,(*)
out
 ,
MSG_LEN
 ,0) <= 0){

162 
	`≥º‹
("send:");

163 
	`‰ì
(
out
);

166 
	`‰ì
(
out
);

168 
	`mysql_‰ì_ªsu…
(
ªs
);

170 
	}
}

	@Server/Service/Chat_Srv.h

8 #i‚de‡
_CHAT_SRV_H


9 
	#_CHAT_SRV_H


	)

11 
Ch©_Srv_Fûe
(c⁄° *
JSON
);

13 
Ch©_Srv_GëFrõndSock
(
fuid
);

15 
Ch©_Srv_Priv©e
(
sock_fd
 ,c⁄° *
JSON
);

17 
Ch©_Srv_Group
(
sock_fd
 ,c⁄° *
JSON
);

19 
Ch©_Srv_SídOfÊõnPriv©eMsg
(
uid
);

21 
Ch©_Srv_SídPriv©eRes
(
sock_fd
 ,c⁄° *
JSON
);

	@Server/Service/Connect.c

8 
	~<°dio.h
>

9 
	~<°dlib.h
>

10 
	~<°rög.h
>

11 
	~<±hªad.h
>

12 
	~<uni°d.h
>

13 
	~"C⁄√˘.h
"

14 
	~"Accou¡_Srv.h
"

15 
	~"Frõnds_Srv.h
"

16 
	~"Ch©_Srv.h
"

17 
	~"Group_Srv.h
"

18 
	~"../Comm⁄/cJSON.h
"

19 
	~"../Comm⁄/Li°.h
"

20 
	~"../Pîsi°í˚/Frõnds_Pîsi°.h
"

21 
	#LISTEN_NUM
 12

22 
	#MSG_LEN
 1024

	)

23 
⁄löe_t
 *
	gO∆öeLi°
;

25 * 
	$thªad
(*
¨g
){

26 
buf
[
MSG_LEN
];

27 
ªt
 ,
ªcv_Àn
;

28 
cJSON
 *
roŸ
 ,*
ôem
;

29 
choi˚
[3];

30 
˛õ¡_fd
 = ()()
¨g
;

32 
ªcv_Àn
 = 0;

33 
ªcv_Àn
 < 
MSG_LEN
){

34 
ªt
 = 0;

35 if((
ªt
 = 
	`ªcv
(
˛õ¡_fd
 , 
buf
 + 
ªcv_Àn
 , 
MSG_LEN
 -Ñecv_len , 0)) <= 0){

36 
uid
 = 
	`Accou¡_Srv_ChIsO∆öe
(-1 , 0 ,
˛õ¡_fd
);

37 if(
uid
 != -1){

38 
	`Accou¡_Srv_SídIsO∆öe
(
uid
 ,0);

41 
	`≥º‹
("recv");

42  
NULL
;

44 
ªcv_Àn
 +
ªt
;

46 
roŸ
 = 
	`cJSON_P¨£
(
buf
);

47 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
,"type");

48 
	`°r˝y
(
choi˚
 ,
ôem
 -> 
vÆue°rög
);

49 
	`cJSON_Dñëe
(
roŸ
);

52 
choi˚
[0]){

55 
	`Accou¡_Srv_Logö
(
˛õ¡_fd
 , 
buf
);

59 
	`Accou¡_Srv_SignIn
(
˛õ¡_fd
 , 
buf
);

63 
	`Frõnds_Srv_Add
(
˛õ¡_fd
, 
buf
);

67 
	`Frõnds_Srv_GëLi°
(
˛õ¡_fd
 ,
buf
);

71 
	`Group_Srv_GëLi°
(
˛õ¡_fd
 ,
buf
);

75 
	`Ch©_Srv_Priv©e
(
˛õ¡_fd
,
buf
);

79 
	`Ch©_Srv_Group
(
˛õ¡_fd
 ,
buf
);

83 
	`Ch©_Srv_Fûe
(
buf
);

86 
	`Accou¡_Srv_Out
(
˛õ¡_fd
 ,
buf
);

89 
	`Frõnds_Srv_Aµly
(
˛õ¡_fd
 ,
buf
);

92 
	`Group_Srv_Cª©e
(
˛õ¡_fd
 ,
buf
);

95 
	`Group_Srv_AddMembî
(
˛õ¡_fd
 ,
buf
);

98 
	`Group_Srv_ShowMembî
(
˛õ¡_fd
 ,
buf
);

102 
	`Group_Srv_Quô
(
˛õ¡_fd
 ,
buf
);

106 
	`Ch©_Srv_SídPriv©eRes
(
˛õ¡_fd
 ,
buf
);

110  
NULL
;

111 
	}
}

114 
	$C⁄√˘
(
p‹t
){

115 
sock_fd
;

116 
˛õ¡_fd
;

117 
Àn
;

118 
›tvÆ
;

119 
	`Li°_Inô
(
O∆öeLi°
 , 
⁄löe_t
);

120 
sockaddr_ö
 
£rv_addr
 , 
˛õ¡_addr
;

121 
Àn
 = (
sockaddr_ö
);

122 
	`mem£t
(&
£rv_addr
 , 0 ,
Àn
);

123 
	`mem£t
(&
˛õ¡_addr
 , 0 , 
Àn
);

124 
£rv_addr
.
sö_Ámûy
 = 
AF_INET
;

125 
£rv_addr
.
sö_p‹t
 = 
	`ht⁄s
(
p‹t
);

126 
£rv_addr
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(
INADDR_ANY
);

127 
sock_fd
 = 
	`sockë
(
AF_INET
 , 
SOCK_STREAM
 , 0);

128 if(
sock_fd
 < 0) {

129 
	`≥º‹
("socket");

130 
	`exô
(0);

132 
›tvÆ
 = 1;

133 if(
	`£tsock›t
(
sock_fd
 , 
SOL_SOCKET
 , 
SO_REUSEADDR
 , (*)&
›tvÆ
 , ()) < 0){

134 
	`≥º‹
("socksetopt");

135 
	`exô
(0);

137 if(
	`böd
(
sock_fd
 , (
sockaddr
 *)&
£rv_addr
 , 
Àn
) < 0){

138 
	`≥º‹
("bind");

139 
	`exô
(0);

141 if(
	`li°í
(
sock_fd
 , 
LISTEN_NUM
) < 0){

142 
	`≥º‹
("listen");

143 
	`exô
(0);

146 
˛õ¡_fd
 = 
	`ac˚±
(
sock_fd
 , (
sockaddr
 *)&
˛õ¡_addr
 , (
sockÀn_t
 *)&
Àn
);

147 if(
˛õ¡_fd
 < 0) {

148 
	`≥º‹
("accept");

149 
	`exô
(0);

151 
±hªad_t
 
thid
;

152 
	`±hªad_¸óã
(&
thid
 , 
NULL
 , 
thªad
 ,(*)()
˛õ¡_fd
);

155 
	}
}

	@Server/Service/Connect.h

3 #i‚de‡
_CONNECT_H


4 
	#_CONNECT_H


	)

6 
	~<°rög.h
>

7 
	~<°dlib.h
>

8 
	~<sys/sockë.h
>

9 
	~<sys/ty≥s.h
>

10 
	~<√töë/ö.h
>

20 
	mty≥
;

21 
	mmsg
[1023];

22 } 
	tmsg_t
;

29 
C⁄√˘
(
p‹t
);

	@Server/Service/Friends_Srv.c

8 
	~<°dio.h
>

9 
	~<°rög.h
>

10 
	~<°dlib.h
>

11 
	~<uni°d.h
>

12 
	~"Accou¡_Srv.h
"

13 
	~"Frõnds_Srv.h
"

14 
	~"Ch©_Srv.h
"

15 
	~"../Pîsi°í˚/Frõnds_Pîsi°.h
"

16 
	~"../Pîsi°í˚/Accou¡_Pîsi°.h
"

17 
	~"../Comm⁄/cJSON.h
"

18 
	~"../Comm⁄/Li°.h
"

19 
	#MSG_LEN
 1024

	)

21 
⁄löe_t
* 
O∆öeLi°
;

22 
	$Frõnds_Srv_GëLi°
(
sock_fd
 ,c⁄° *
JSON
){

23 
buf
[
MSG_LEN
];

24 
uid
;

25 
cJSON
 *
roŸ
 = 
	`cJSON_P¨£
(
JSON
);

26 
cJSON
 *
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"uid");

27 
uid
 = 
ôem
 -> 
vÆueöt
;

28 
	`cJSON_Dñëe
(
roŸ
);

29 
‰õnds_t
 *
FrõndsLi°
 = 
NULL
;

30 
	`Li°_Inô
(
FrõndsLi°
 ,
‰õnds_t
);

31 
	`Frõnds_Pî°_GëLi°
(
FrõndsLi°
 ,
uid
);

32 
‰õnds_t
 *
curPos
;

33 
	`Li°_F‹Each
(
FrõndsLi°
 ,
curPos
){

34 
roŸ
 = 
	`cJSON_Cª©eObje˘
();

35 
ôem
 = 
	`cJSON_Cª©eSåög
("L");

36 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"ty≥" ,
ôem
);

37 
ôem
 = 
	`cJSON_Cª©eNumbî
(
curPos
 -> 
uid
);

38 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"uid" ,
ôem
);

39 
ôem
 = 
	`cJSON_Cª©eSåög
(
curPos
 -> 
«me
);

40 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"«me" ,
ôem
);

41 
ôem
 = 
	`cJSON_Cª©eBoﬁ
(
curPos
 -> 
£x
);

42 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"£x" ,
ôem
);

43 
ôem
 = 
	`cJSON_Cª©eBoﬁ
(
curPos
 -> 
is_vù
);

44 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"is_vù" ,
ôem
);

45 
ôem
 = 
	`cJSON_Cª©eBoﬁ
(
curPos
 -> 
is_fﬁlow
);

46 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"is_fﬁlow" ,
ôem
);

47 
ôem
 = 
	`cJSON_Cª©eBoﬁ
(
curPos
 -> 
is_⁄löe
);

48 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"is_⁄löe" ,
ôem
);

49 
ôem
 = 
	`cJSON_Cª©eBoﬁ
(
curPos
 -> 
°©e
);

50 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"°©e" ,
ôem
);

51 *
out
 = 
	`cJSON_Pröt
(
roŸ
);

52 
	`cJSON_Dñëe
(
roŸ
);

53 if(
	`£nd
(
sock_fd
 ,(*)
out
 ,
MSG_LEN
 ,0) < 0){

54 
	`≥º‹
("send ÂÆ¢Êà∑Á´ØÂìçÂ∫îÂ§±Ë¥•");

55 
	`‰ì
(
out
);

58 
	`‰ì
(
out
);

62 
roŸ
 = 
	`cJSON_Cª©eObje˘
();

63 
ôem
 = 
	`cJSON_Cª©eSåög
("L");

64 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"ty≥" ,
ôem
);

65 
ôem
 = 
	`cJSON_Cª©eNumbî
(0);

66 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"uid" ,
ôem
);

67 *
out
 = 
	`cJSON_Pröt
(
roŸ
);

68 
	`cJSON_Dñëe
(
roŸ
);

69 if(
	`£nd
(
sock_fd
 ,(*)
out
 ,
MSG_LEN
 ,0) < 0){

70 
	`≥º‹
("send ÂÆ¢Êà∑Á´ØÂìçÂ∫îÂ§±Ë¥•");

71 
	`‰ì
(
out
);

74 
	`‰ì
(
out
);

75 
	`Accou¡_Srv_SídIsO∆öe
(
uid
 ,1);

77 
	`Li°_De°roy
(
FrõndsLi°
 ,
‰õnds_t
);

79 
roŸ
 = 
	`cJSON_Cª©eObje˘
();

80 
ôem
 = 
	`cJSON_Cª©eSåög
("R");

81 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"ty≥" ,
ôem
);

82 
ôem
 = 
	`cJSON_Cª©eBoﬁ
(1);

83 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"ªs" ,
ôem
);

84 
out
 = 
	`cJSON_Pröt
(
roŸ
);

85 
	`cJSON_Dñëe
(
roŸ
);

86 if(
	`£nd
(
sock_fd
 ,(*)
out
 ,
MSG_LEN
 ,0) < 0){

87 
	`≥º‹
("recv: ÂÆ¢Êà∑Á´ØÂìçÂ∫îÂ§±Ë¥•");

88 
	`‰ì
(
out
);

91 
	`‰ì
(
out
);

92 
	`Ch©_Srv_SídOfÊõnPriv©eMsg
(
uid
);

94 
	}
}

97 
	$Frõnds_Srv_Add
(
sock_fd
 ,c⁄° *
JSON
){

98 
cJSON
* 
roŸ
 = 
	`cJSON_P¨£
(
JSON
);

99 
cJSON
* 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"uid");

100 
uid
 = 
ôem
 -> 
vÆueöt
;

101 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"fname");

102 
fuid
 = 
	`Accou¡_Pî°_IsU£rName
(
ôem
 -> 
vÆue°rög
);

103 
	`cJSON_Dñëe
(
roŸ
);

104 
roŸ
 = 
	`cJSON_Cª©eObje˘
();

105 
ôem
 = 
	`cJSON_Cª©eSåög
("R");

106 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"ty≥" ,
ôem
);

107 
ôem
 = 
	`cJSON_Cª©eBoﬁ
((
fuid
 != 0));

108 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"ªs",
ôem
);

109 if(
fuid
 == 0){

110 
ôem
 = 
	`cJSON_Cª©eSåög
("Áî®Êà∑Âêç‰∏çÂ≠òÂú®");

111 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"ªas⁄",
ôem
);

113 *
out
 = 
	`cJSON_Pröt
(
roŸ
);

115 if(
	`£nd
(
sock_fd
 ,(*)
out
 ,
MSG_LEN
 ,0) <= 0){

116 
	`≥º‹
("send");

119 
	`‰ì
(
out
);

120 
	`Frõnds_Pî°_Add
(
uid
 ,
fuid
);

121 if(
	`Ch©_Srv_GëFrõndSock
(
fuid
) == 0)  1;

122 
	`Frõnds_Srv_SídAdd
(
uid
 ,
fuid
,"A");

124 
	}
}

126 
	$Frõnds_Srv_SídAdd
(
uid
 ,
fuid
 ,* 
ty≥
){

127 
f_sock_fd
 = -1;

128 
‰õnds_t
 * 
NewFrõnds
 = (‰õnds_à*)
	`mÆloc
((friends_t));

129 if(*
ty≥
 == 'A'){

130 
NewFrõnds
->
uid
 = uid;

131 
	`Frõnds_Pî°_GëFrõndInfo
(
NewFrõnds
);

132 
f_sock_fd
 = 
	`Ch©_Srv_GëFrõndSock
(
fuid
);

135 
NewFrõnds
->
uid
 = 
fuid
;

136 
	`Frõnds_Pî°_GëFrõndInfo
(
NewFrõnds
);

137 
f_sock_fd
 = 
	`Ch©_Srv_GëFrõndSock
(
uid
);

138 
NewFrõnds
 -> 
°©e
 = 1;

140 
cJSON
 *
roŸ
 = 
	`cJSON_Cª©eObje˘
();

141 
cJSON
 *
ôem
 = 
	`cJSON_Cª©eSåög
(
ty≥
);

142 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"ty≥" ,
ôem
);

143 
ôem
 = 
	`cJSON_Cª©eNumbî
(
NewFrõnds
 -> 
uid
);

144 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"uid" ,
ôem
);

145 
ôem
 = 
	`cJSON_Cª©eSåög
(
NewFrõnds
 -> 
«me
);

146 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"«me" ,
ôem
);

147 
ôem
 = 
	`cJSON_Cª©eBoﬁ
(
NewFrõnds
 -> 
£x
);

148 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"£x" ,
ôem
);

149 
ôem
 = 
	`cJSON_Cª©eBoﬁ
(
NewFrõnds
 -> 
is_vù
);

150 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"is_vù" ,
ôem
);

151 
ôem
 = 
	`cJSON_Cª©eBoﬁ
(
NewFrõnds
 -> 
is_fﬁlow
);

152 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"is_fﬁlow" ,
ôem
);

153 
ôem
 = 
	`cJSON_Cª©eBoﬁ
(
NewFrõnds
 -> 
is_⁄löe
);

154 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"is_⁄löe" ,
ôem
);

155 
ôem
 = 
	`cJSON_Cª©eBoﬁ
(
NewFrõnds
 -> 
°©e
);

156 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"°©e" ,
ôem
);

157 
	`‰ì
(
NewFrõnds
);

158 *
out
 = 
	`cJSON_Pröt
(
roŸ
);

159 
	`cJSON_Dñëe
(
roŸ
);

160 if(
	`£nd
(
f_sock_fd
 ,(*)
out
 ,
MSG_LEN
,0) < 0){

161 
	`≥º‹
("send");

162 
	`¥ötf
("ÂèëÁªôsock_fd = %d Â§±Ë¥•\n",
f_sock_fd
);

163 
	`‰ì
(
out
);

166 
	`‰ì
(
out
);

168 
	}
}

170 
	$Frõnds_Srv_Aµly
(
sock_fd
 ,c⁄° *
JSON
){

171 
cJSON
 *
roŸ
 = 
	`cJSON_P¨£
(
JSON
);

172 
cJSON
 *
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"uid");

173 
uid
 = 
ôem
 -> 
vÆueöt
;

174 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"fuid");

175 
fuid
 = 
ôem
 -> 
vÆueöt
;

176 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"is_agree");

177 
is_agªe
 = 
ôem
 -> 
vÆueöt
;

178 
f_sock_fd
 = 
	`Ch©_Srv_GëFrõndSock
(
uid
);

179 
	`Frõnds_Pî°_Aµly
(
uid
 ,
fuid
 ,
is_agªe
);

180 if(
is_agªe
) {

181 
	`Frõnds_Srv_SídAdd
(
uid
 ,
fuid
 ,"a");

183 
‰õnds_t
 *
NewFrõnds
 = (‰õnds_à*)
	`mÆloc
((friends_t));

184 
NewFrõnds
 -> 
uid
 = 
fuid
;

185 
	`Frõnds_Pî°_GëFrõndInfo
(
NewFrõnds
);

186 
ôem
 = 
	`cJSON_Cª©eSåög
(
NewFrõnds
 -> 
«me
);

187 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"‚ame",
ôem
);

188 *
out
 = 
	`cJSON_Pröt
(
roŸ
);

189 
	`cJSON_Dñëe
(
roŸ
);

190 
	`‰ì
(
NewFrõnds
);

191 if(
	`£nd
(
f_sock_fd
 ,(*)
out
 ,
MSG_LEN
 ,0) <= 0){

192 
	`≥º‹
("send");

195 
	`‰ì
(
out
);

198 
	}
}

	@Server/Service/Friends_Srv.h

8 #i‚de‡
_FRIENDS_SRV_H


9 
	#_FRIENDS_SRV_H


	)

12 
	~"C⁄√˘.h
"

18 
	s‰õnds
{

19 
	muid
;

20 
	m«me
[30];

21 
	m£x
;

22 
	mis_vù
;

23 
	mis_⁄löe
;

24 
	mis_fﬁlow
;

25 
	m°©e
;

26 
‰õnds
 *
	m√xt
;

27 } 
	t‰õnds_t
;

33 
Frõnds_Srv_GëLi°
(
sock_fd
 ,c⁄° *
JSON
);

39 
Frõnds_Srv_Add
(
sock_fd
 ,c⁄° *
JSON
);

41 
Frõnds_Srv_SídAdd
(
uid
,
fuid
 ,* 
ty≥
);

43 
Frõnds_Srv_Dñ
(
sock_fd
 ,c⁄° *
JSON
);

45 
Frõnds_Srv_Aµly
(
sock_fd
 ,c⁄° *
JSON
);

	@Server/Service/Group_Srv.c

8 
	~<°dio.h
>

9 
	~<°rög.h
>

10 
	~<uni°d.h
>

11 
	~<sys/sockë.h
>

12 
	~"Group_Srv.h
"

13 
	~"Ch©_Srv.h
"

14 
	~"../Comm⁄/Li°.h
"

15 
	~"../Comm⁄/cJSON.h
"

16 
	~"../Pîsi°í˚/Group_Pîsi°.h
"

17 
	#MSG_LEN
 1024

	)

18 
	$Group_Srv_AddMembî
(
˛õ¡_fd
 ,*
JSON
){

19 
gid
 ,
uid
;

20 
cJSON
 *
roŸ
 = 
	`cJSON_P¨£
(
JSON
);

21 
cJSON
 *
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"gid");

22 
gid
 = 
ôem
 -> 
vÆueöt
;

23 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"uid");

24 
uid
 = 
ôem
 -> 
vÆueöt
;

25 
	`cJSON_Dñëe
(
roŸ
);

26 
roŸ
 = 
	`cJSON_Cª©eObje˘
();

27 
ôem
 = 
	`cJSON_Cª©eSåög
("R");

28 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"ty≥" ,
ôem
);

29 if(
	`Group_Pî°_AddMembî
(
gid
 ,
uid
)){

30 
ôem
 = 
	`cJSON_Cª©eBoﬁ
(1);

33 
	`Group_Srv_SídInfo
(
gid
 ,
uid
);

35 
ôem
 = 
	`cJSON_Cª©eBoﬁ
(0);

37 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"ªs",
ôem
);

38 *
out
 = 
	`cJSON_Pröt
(
roŸ
);

39 
	`cJSON_Dñëe
(
roŸ
);

40 if(
	`£nd
(
˛õ¡_fd
 ,
out
 ,
MSG_LEN
,0) <= 0){

41 
	`≥º‹
("send");

42 
	`‰ì
(
out
);

46 
	}
}

47 
	$Group_Srv_SídInfo
(
gid
 ,
uid
){

48 
cJSON
 *
roŸ
 = 
	`cJSON_Cª©eObje˘
();

49 
cJSON
 *
ôem
 = 
	`cJSON_Cª©eSåög
("J");

50 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"ty≥" ,
ôem
);

51 
group_t
 *
GroupInfo
 = 
	`Group_Pî°_GëInfo
(
gid
);

52 
ôem
 = 
	`cJSON_Cª©eNumbî
(
GroupInfo
 -> 
gid
);

53 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"gid" ,
ôem
);

54 
ôem
 = 
	`cJSON_Cª©eSåög
(
GroupInfo
 -> 
«me
);

55 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"«me" ,
ôem
);

56 
ôem
 = 
	`cJSON_Cª©eNumbî
(
GroupInfo
 -> 
ow√r
);

57 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"ow√r" ,
ôem
);

58 
ôem
 = 
	`cJSON_Cª©eNumbî
(
GroupInfo
 -> 
num
);

59 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"num" , 
ôem
);

60 *
out
 = 
	`cJSON_Pröt
(
roŸ
);

61 
	`cJSON_Dñëe
(
roŸ
);

62 
f_fd
 = 
	`Ch©_Srv_GëFrõndSock
(
uid
);

63 if(
	`£nd
(
f_fd
 ,
out
 ,
MSG_LEN
,0) <= 0){

64 
	`≥º‹
("send");

65 
	`‰ì
(
out
);

68 
	`‰ì
(
out
);

70 
	}
}

72 
	$Group_Srv_Cª©e
(
˛õ¡_fd
 ,*
buf
){

73 
g«me
[30];

74 
uid
;

75 
cJSON
 *
roŸ
 = 
	`cJSON_P¨£
(
buf
);

76 
cJSON
 *
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"gname");

77 
	`°r˝y
(
g«me
 ,
ôem
 -> 
vÆue°rög
);

78 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"uid");

79 
uid
 = 
ôem
 -> 
vÆueöt
;

80 
	`cJSON_Dñëe
(
roŸ
);

81 
roŸ
 = 
	`cJSON_Cª©eObje˘
();

82 
ôem
 = 
	`cJSON_Cª©eSåög
("R");

83 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"ty≥" ,
ôem
);

84 if(
	`Group_Pî°_IsGroup
(
g«me
)){

85 
ôem
 = 
	`cJSON_Cª©eBoﬁ
(0);

86 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"ªs",
ôem
);

87 
ôem
 = 
	`cJSON_Cª©eSåög
("Áæ§ÂêçÁß∞Â∑≤Â≠òÂú®");

88 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"ªas⁄" ,
ôem
);

89 *
out
 = 
	`cJSON_Pröt
(
roŸ
);

90 if(
	`£nd
(
˛õ¡_fd
 ,
out
 ,
MSG_LEN
 ,0) <= 0){

91 
	`≥º‹
("send");

92 
	`‰ì
(
out
);

95 
	`‰ì
(
out
);

98 
	`Group_Srv_SídInfo
(
	`Group_Pî°_Cª©e
(
uid
 ,
g«me
) ,uid);

101 
ôem
 = 
	`cJSON_Cª©eBoﬁ
(1);

103 
	`cJSON_AddIãmToObje˘
(
roŸ
 , "ªs",
ôem
);

104 *
out
 = 
	`cJSON_Pröt
(
roŸ
);

105 if(
	`£nd
(
˛õ¡_fd
 ,
out
 ,
MSG_LEN
 ,0) <= 0){

106 
	`≥º‹
("send");

107 
	`‰ì
(
out
);

110 
	`‰ì
(
out
);

112 
	}
}

113 
	$Group_Srv_GëLi°
(
˛õ¡_fd
 ,*
JSON
){

115 
uid
;

116 
cJSON
 *
roŸ
 = 
	`cJSON_P¨£
(
JSON
);

117 
cJSON
 *
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"uid");

118 
uid
 = 
ôem
 -> 
vÆueöt
;

119 
	`cJSON_Dñëe
(
roŸ
);

120 
group_t
 *
GroupLi°
 = 
NULL
;

121 
	`Li°_Inô
(
GroupLi°
 ,
group_t
);

122 
	`Group_Pî°_GëMyGroup
(
GroupLi°
 ,
uid
);

123 
group_t
 *
curPos
;

124 
	`Li°_F‹Each
(
GroupLi°
 ,
curPos
){

125 
roŸ
 = 
	`cJSON_Cª©eObje˘
();

126 
ôem
 = 
	`cJSON_Cª©eSåög
("l");

127 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"ty≥" ,
ôem
);

128 
ôem
 = 
	`cJSON_Cª©eNumbî
(
curPos
 -> 
gid
);

129 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"gid" ,
ôem
);

130 
ôem
 = 
	`cJSON_Cª©eSåög
(
curPos
 -> 
«me
);

131 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"«me" ,
ôem
);

132 
ôem
 = 
	`cJSON_Cª©eNumbî
(
curPos
 -> 
ow√r
);

133 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"ow√r" ,
ôem
);

134 
ôem
 = 
	`cJSON_Cª©eNumbî
(
curPos
 -> 
num
);

135 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"num",
ôem
);

136 *
out
 = 
	`cJSON_Pröt
(
roŸ
);

137 
	`cJSON_Dñëe
(
roŸ
);

138 if(
	`£nd
(
˛õ¡_fd
 ,(*)
out
 ,
MSG_LEN
 ,0) < 0){

139 
	`≥º‹
("send ÂÆ¢Êà∑Á´ØÂìçÂ∫îÂ§±Ë¥•");

140 
	`‰ì
(
out
);

143 
	`‰ì
(
out
);

147 
roŸ
 = 
	`cJSON_Cª©eObje˘
();

148 
ôem
 = 
	`cJSON_Cª©eSåög
("l");

149 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"ty≥" ,
ôem
);

150 
ôem
 = 
	`cJSON_Cª©eNumbî
(0);

151 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"gid" ,
ôem
);

152 *
out
 = 
	`cJSON_Pröt
(
roŸ
);

153 
	`cJSON_Dñëe
(
roŸ
);

154 if(
	`£nd
(
˛õ¡_fd
 ,(*)
out
 ,
MSG_LEN
 ,0) < 0){

155 
	`≥º‹
("send ÂÆ¢Êà∑Á´ØÂìçÂ∫îÂ§±Ë¥•");

156 
	`‰ì
(
out
);

159 
	`‰ì
(
out
);

161 
	`Li°_De°roy
(
GroupLi°
 ,
group_t
);

162 
roŸ
 = 
	`cJSON_Cª©eObje˘
();

163 
ôem
 = 
	`cJSON_Cª©eSåög
("R");

164 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"ty≥" ,
ôem
);

165 
ôem
 = 
	`cJSON_Cª©eBoﬁ
(1);

166 
	`cJSON_AddIãmToObje˘
(
roŸ
 ,"ªs" ,
ôem
);

167 
out
 = 
	`cJSON_Pröt
(
roŸ
);

168 
	`cJSON_Dñëe
(
roŸ
);

169 if(
	`£nd
(
˛õ¡_fd
 ,(*)
out
 ,
MSG_LEN
 ,0) < 0){

170 
	`≥º‹
("recv: ÂÆ¢Êà∑Á´ØÂìçÂ∫îÂ§±Ë¥•");

171 
	`‰ì
(
out
);

174 
	`‰ì
(
out
);

176 
	}
}

178 
	$Group_Srv_ShowMembî
(
˛õ¡_fd
 ,c⁄° *
JSON
){

179 
cJSON
 *
roŸ
 = 
	`cJSON_P¨£
(
JSON
);

180 
cJSON
 *
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"gid");

181 
gid
 = 
ôem
 -> 
vÆueöt
;

182 
	`cJSON_Dñëe
(
roŸ
);

183 
group_membî_t
 *
GroupMembî
;

184 
	`Li°_Inô
(
GroupMembî
 ,
group_membî_t
);

185 
	`Group_Pî°_GëGroupMembî
(
GroupMembî
 ,
gid
);

186 
group_membî_t
 *
m
;

187 
	`Li°_F‹Each
(
GroupMembî
 ,
m
){

188 
roŸ
 = 
	`cJSON_Cª©eObje˘
();

189 
	`cJSON_AddSåögToObje˘
(
roŸ
 ,"type" ,"m");

190 
	`cJSON_AddNumbîToObje˘
(
roŸ
 ,"gid",
m
 -> 
gid
);

191 
	`cJSON_AddNumbîToObje˘
(
roŸ
 ,"uid",
m
 -> 
u£r_öfo
.
uid
);

192 
	`cJSON_AddSåögToObje˘
(
roŸ
 ,"«me" ,
m
 -> 
u£r_öfo
.
«me
);

193 
	`cJSON_AddNumbîToObje˘
(
roŸ
 ,"£x" ,
m
 -> 
u£r_öfo
.
£x
);

194 
	`cJSON_AddNumbîToObje˘
(
roŸ
 ,"is_vù" , 
m
-> 
u£r_öfo
.
is_vù
);

195 
	`cJSON_AddNumbîToObje˘
(
roŸ
 ,"is_⁄löe" ,
m
 -> 
u£r_öfo
.
is_⁄löe
);

196 
	`cJSON_AddNumbîToObje˘
(
roŸ
 ,"≥rmissi⁄" ,
m
 -> 
≥rmissi⁄
);

197 *
out
 = 
	`cJSON_Pröt
(
roŸ
);

198 
	`cJSON_Dñëe
(
roŸ
);

199 if(
	`£nd
(
˛õ¡_fd
 ,(*)
out
 ,
MSG_LEN
 ,0) < 0){

200 
	`≥º‹
("recv: ÂÆ¢Êà∑Á´ØÂìçÂ∫îÂ§±Ë¥•");

201 
	`‰ì
(
out
);

204 
	`‰ì
(
out
);

206 
	}
}

208 
	$Group_Srv_Quô
(
˛õ¡_fd
 ,c⁄° *
JSON
){

209 
cJSON
 *
roŸ
 = 
	`cJSON_P¨£
(
JSON
);

210 
cJSON
 *
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"do");

211 *
_do
 = 
ôem
 -> 
vÆue°rög
;

212 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"gid");

213 
gid
 = 
ôem
 -> 
vÆueöt
;

214 
f_fd
 = 0;

215 if(
	`°rcmp
(
_do
 ,"Ëß£Êï£") == 0){

216 
group_membî_t
 *
GroupMembî
;

217 
	`Li°_Inô
(
GroupMembî
 ,
group_membî_t
);

218 
	`Group_Pî°_GëGroupMembî
(
GroupMembî
 ,
gid
);

219 
group_membî_t
 *
m
;

220 
roŸ
 = 
	`cJSON_Cª©eObje˘
();

221 
	`cJSON_AddSåögToObje˘
(
roŸ
 ,"type" ,"D");

222 
	`cJSON_AddNumbîToObje˘
(
roŸ
 ,"gid" ,
gid
);

223 *
out
 = 
	`cJSON_Pröt
(
roŸ
);

224 
	`cJSON_Dñëe
(
roŸ
);

225 
	`Li°_F‹Each
(
GroupMembî
 ,
m
){

226 if(
m
 -> 
≥rmissi⁄
 == 2) ;

227 if((
f_fd
 = 
	`Ch©_Srv_GëFrõndSock
(
m
 -> 
u£r_öfo
.
uid
)) > 0){

228 if(
	`£nd
(
f_fd
 ,
out
 ,
MSG_LEN
,0) <= 0){

229 
	`≥º‹
("send");

230 
	`‰ì
(
out
);

234 
	`Group_Pî°_Dñëe
(
gid
);

236 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"uid");

237 
	`Group_Pî°_DñëeMembî
(
gid
 ,
ôem
 ->
vÆueöt
);

239 
	}
}

	@Server/Service/Group_Srv.h

8 #i‚de‡
_GROUP_SRV_H


9 
	#_GROUP_SRV_H


	)

10 
	~"Frõnds_Srv.h
"

11 
	sgroup_t
{

12 
	mgid
;

13 
	m«me
[50];

14 
	mow√r
;

15 
	mnum
;

16 
group_t
 *
	m√xt
;

17 }
	tgroup_t
;

19 
	sgroup_membî
{

20 
	mgid
;

21 
‰õnds_t
 
	mu£r_öfo
;

22 
	m≥rmissi⁄
;

23 
group_membî
 *
	m√xt
;

24 }
	tgroup_membî_t
;

26 
Group_Srv_AddMembî
(
˛õ¡_fd
 ,*
JSON
);

28 
Group_Srv_Cª©e
(
˛õ¡_fd
 ,*
buf
);

30 
Group_Srv_GëLi°
(
˛õ¡_fd
 ,*
JSON
);

35 
Group_Srv_SídInfo
(
gid
 ,
uid
);

37 
Group_Srv_ShowMembî
(
˛õ¡_fd
 ,c⁄° *
JSON
);

39 
Group_Srv_Quô
(
˛õ¡_fd
 ,c⁄° *
JSON
);

	@Server/chat_room_srv.c

8 
	~<°dio.h
>

9 
	~<uni°d.h
>

10 
	~<f˙é.h
>

11 
	~"Comm⁄/cJSON.h
"

12 
	~"Sîvi˚/C⁄√˘.h
"

13 
	~"Pîsi°í˚/MySQL.h
"

14 
	$maö
(){

15 
buf
[1024];

16 
ho°
[50] ,
u£r
[30],
∑ss
[50],
d©aba£
[50];

17 
fd
 = 
	`›í
("c⁄fig.js⁄" ,
O_RDONLY
);

18 if(
fd
 == -1) {

19 
	`¥ötf
("ÈÖçÁΩÆÊñá‰ª∂ÊâìÂºÄÂ§±Ë¥•!");

20 
	`gëch¨
();

21 
	`exô
(0);

23 
	`ªad
(
fd
 ,
buf
 ,1024);

24 
cJSON
* 
roŸ
 = 
	`cJSON_P¨£
(
buf
);

25 
cJSON
* 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"host");

26 
	`°r˝y
(
ho°
 ,
ôem
 -> 
vÆue°rög
);

27 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"user");

28 
	`°r˝y
(
u£r
 ,
ôem
 -> 
vÆue°rög
);

29 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"pass");

30 
	`°r˝y
(
∑ss
 ,
ôem
 -> 
vÆue°rög
);

31 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"database");

32 
	`°r˝y
(
d©aba£
 ,
ôem
 -> 
vÆue°rög
);

33 
ôem
 = 
	`cJSON_GëObje˘Iãm
(
roŸ
 ,"port");

34 
p‹t
 = 
ôem
 -> 
vÆueöt
;

35 
	`˛o£
(
fd
);

36 
	`cJSON_Dñëe
(
roŸ
);

37 if(
	`MySQL_C⁄√˘
(
ho°
 ,
u£r
 ,
∑ss
 ,
d©aba£
) == 0){

38 
	`¥ötf
("Êï∞ÊçÆÂ∫ìËøûÊé•Â§±Ë¥•\n");

39 
	`exô
(0);

41 
	`C⁄√˘
(
p‹t
);

42 
	}
}

	@config/cJSON.c

26 
	~<°rög.h
>

27 
	~<°dio.h
>

28 
	~<m©h.h
>

29 
	~<°dlib.h
>

30 
	~<Êﬂt.h
>

31 
	~<limôs.h
>

32 
	~<˘y≥.h
>

33 
	~"cJSON.h
"

35 c⁄° *
	gï
;

37 c⁄° *
	$cJSON_GëEº‹På
(Ë{ 
ï
;
	}
}

39 
	$cJSON_°rˇ£cmp
(c⁄° *
s1
,c⁄° *
s2
)

41 i‡(!
s1
Ë (s1==
s2
)?0:1;if (!s2)  1;

42 ; 
	`tﬁowî
(*
s1
Ë=tﬁowî(*
s2
); ++s1, ++s2) if(*s1 == 0)  0;

43  
	`tﬁowî
(*(c⁄° *)
s1
Ë-Åﬁowî(*(c⁄° *)
s2
);

44 
	}
}

46 *(*
	gcJSON_mÆloc
)(
size_t
 
	gsz
Ë
mÆloc
;

47 (*
cJSON_‰ì
)(*
±r
Ë
‰ì
;

49 * 
	$cJSON_°rdup
(c⁄° * 
°r
)

51 
size_t
 
Àn
;

52 * 
c›y
;

54 
Àn
 = 
	`°æí
(
°r
) + 1;

55 i‡(!(
c›y
 = (*)
	`cJSON_mÆloc
(
Àn
)))  0;

56 
	`mem˝y
(
c›y
,
°r
,
Àn
);

57  
c›y
;

58 
	}
}

60 
	$cJSON_InôHooks
(
cJSON_Hooks
* 
hooks
)

62 i‡(!
hooks
) {

63 
cJSON_mÆloc
 = 
mÆloc
;

64 
cJSON_‰ì
 = 
‰ì
;

68 
cJSON_mÆloc
 = (
hooks
->
mÆloc_‚
)?hooks->mÆloc_‚:
mÆloc
;

69 
cJSON_‰ì
 = (
hooks
->
‰ì_‚
)?hooks->‰ì_‚:
‰ì
;

70 
	}
}

73 
cJSON
 *
	$cJSON_New_Iãm
()

75 
cJSON
* 
node
 = (cJSON*)
	`cJSON_mÆloc
((cJSON));

76 i‡(
node
Ë
	`mem£t
“ode,0,(
cJSON
));

77  
node
;

78 
	}
}

81 
	$cJSON_Dñëe
(
cJSON
 *
c
)

83 
cJSON
 *
√xt
;

84 
c
)

86 
√xt
=
c
->next;

87 i‡(!(
c
->
ty≥
&
cJSON_IsRe„ªn˚
Ë&& c->
chûd
Ë
	`cJSON_Dñëe
(c->child);

88 i‡(!(
c
->
ty≥
&
cJSON_IsRe„ªn˚
Ë&& c->
vÆue°rög
Ë
	`cJSON_‰ì
(c->valuestring);

89 i‡(!(
c
->
ty≥
&
cJSON_SåögIsC⁄°
Ë&& c->
°rög
Ë
	`cJSON_‰ì
(c->string);

90 
	`cJSON_‰ì
(
c
);

91 
c
=
√xt
;

93 
	}
}

96 c⁄° *
	$∑r£_numbî
(
cJSON
 *
ôem
,c⁄° *
num
)

98 
n
=0,
sign
=1,
sˇÀ
=0;
subsˇÀ
=0,
signsubsˇÀ
=1;

100 i‡(*
num
=='-'Ë
sign
=-1,num++;

101 i‡(*
num
=='0')Çum++;

102 i‡(*
num
>='1' && *num<='9'Ëdÿ
n
=(n*10.0)+(*num++ -'0'); *num>='0' && *num<='9');

103 i‡(*
num
=='.' &&Çum[1]>='0' &&Çum[1]<='9'Ë{num++; dÿ
n
=“*10.0)+(*num++ -'0'),
sˇÀ
--; *num>='0' && *num<='9');}

104 i‡(*
num
=='e' || *num=='E')

105 { 
num
++;i‡(*num=='+'Ënum++; i‡(*num=='-'Ë
signsubsˇÀ
=-1,num++;

106 *
num
>='0' && *num<='9'Ë
subsˇÀ
=(subscale*10)+(*num++ - '0');

109 
n
=
sign
*n*
	`pow
(10.0,(
sˇÀ
+
subsˇÀ
*
signsubsˇÀ
));

111 
ôem
->
vÆuedoubÀ
=
n
;

112 
ôem
->
vÆueöt
=()
n
;

113 
ôem
->
ty≥
=
cJSON_Numbî
;

114  
num
;

115 
	}
}

117 
	$pow2gt
 (
x
Ë{ --x; x|=x>>1; x|=x>>2; x|=x>>4; x|=x>>8; x|=x>>16;  x+1; 
	}
}

119 °ru˘ {*
	mbuf„r
; 
	mÀngth
; 
	moff£t
; } 
	t¥ötbuf„r
;

121 * 
	$ísuª
(
¥ötbuf„r
 *
p
,
√eded
)

123 *
√wbuf„r
;
√wsize
;

124 i‡(!
p
 || !p->
buf„r
)  0;

125 
√eded
+=
p
->
off£t
;

126 i‡(
√eded
<=
p
->
Àngth
ËÖ->
buf„r
+p->
off£t
;

128 
√wsize
=
	`pow2gt
(
√eded
);

129 
√wbuf„r
=(*)
	`cJSON_mÆloc
(
√wsize
);

130 i‡(!
√wbuf„r
Ë{
	`cJSON_‰ì
(
p
->
buf„r
);p->
Àngth
=0,p->buffer=0; 0;}

131 i‡(
√wbuf„r
Ë
	`mem˝y
“ewbuf„r,
p
->
buf„r
,p->
Àngth
);

132 
	`cJSON_‰ì
(
p
->
buf„r
);

133 
p
->
Àngth
=
√wsize
;

134 
p
->
buf„r
=
√wbuf„r
;

135  
√wbuf„r
+
p
->
off£t
;

136 
	}
}

138 
	$upd©e
(
¥ötbuf„r
 *
p
)

140 *
°r
;

141 i‡(!
p
 || !p->
buf„r
)  0;

142 
°r
=
p
->
buf„r
+p->
off£t
;

143  
p
->
off£t
+
	`°æí
(
°r
);

144 
	}
}

147 *
	$¥öt_numbî
(
cJSON
 *
ôem
,
¥ötbuf„r
 *
p
)

149 *
°r
=0;

150 
d
=
ôem
->
vÆuedoubÀ
;

151 i‡(
d
==0)

153 i‡(
p
Ë
°r
=
	`ísuª
(p,2);

154 
°r
=(*)
	`cJSON_mÆloc
(2);

155 i‡(
°r
Ë
	`°r˝y
(str,"0");

157 i‡(
	`Ábs
((()
ôem
->
vÆueöt
)-
d
)<=
DBL_EPSILON
 && d<=
INT_MAX
 && d>=
INT_MIN
)

159 i‡(
p
Ë
°r
=
	`ísuª
(p,21);

160 
°r
=(*)
	`cJSON_mÆloc
(21);

161 i‡(
°r
Ë
	`•rötf
(°r,"%d",
ôem
->
vÆueöt
);

165 i‡(
p
Ë
°r
=
	`ísuª
(p,64);

166 
°r
=(*)
	`cJSON_mÆloc
(64);

167 i‡(
°r
)

169 i‡(
	`Ábs
(
	`Êo‹
(
d
)-d)<=
DBL_EPSILON
 && fabs(d)<1.0e60)
	`•rötf
(
°r
,"%.0f",d);

170 i‡(
	`Ábs
(
d
)<1.0e-6 || fabs(d)>1.0e9Ë
	`•rötf
(
°r
,"%e",d);

171 
	`•rötf
(
°r
,"%f",
d
);

174  
°r
;

175 
	}
}

177 
	$∑r£_hex4
(c⁄° *
°r
)

179 
h
=0;

180 i‡(*
°r
>='0' && *°r<='9'Ë
h
+=(*str)-'0'; if (*str>='A' && *str<='F') h+=10+(*str)-'A'; if (*str>='a' && *str<='f') h+=10+(*str)-'a';  0;

181 
h
=h<<4;
°r
++;

182 i‡(*
°r
>='0' && *°r<='9'Ë
h
+=(*str)-'0'; if (*str>='A' && *str<='F') h+=10+(*str)-'A'; if (*str>='a' && *str<='f') h+=10+(*str)-'a';  0;

183 
h
=h<<4;
°r
++;

184 i‡(*
°r
>='0' && *°r<='9'Ë
h
+=(*str)-'0'; if (*str>='A' && *str<='F') h+=10+(*str)-'A'; if (*str>='a' && *str<='f') h+=10+(*str)-'a';  0;

185 
h
=h<<4;
°r
++;

186 i‡(*
°r
>='0' && *°r<='9'Ë
h
+=(*str)-'0'; if (*str>='A' && *str<='F') h+=10+(*str)-'A'; if (*str>='a' && *str<='f') h+=10+(*str)-'a';  0;

187  
h
;

188 
	}
}

191 c⁄° 
	gfú°ByãM¨k
[7] = { 0x00, 0x00, 0xC0, 0xE0, 0xF0, 0xF8, 0xFC };

192 c⁄° *
	$∑r£_°rög
(
cJSON
 *
ôem
,c⁄° *
°r
)

194 c⁄° *
±r
=
°r
+1;*
±r2
;*
out
;
Àn
=0;
uc
,
uc2
;

195 i‡(*
°r
!='\"'Ë{
ï
=str; 0;}

197 *
±r
!='\"' && *±∏&& ++
Àn
) if (*ptr++ == '\\')Ötr++;

199 
out
=(*)
	`cJSON_mÆloc
(
Àn
+1);

200 i‡(!
out
)  0;

202 
±r
=
°r
+1;
±r2
=
out
;

203 *
±r
!='\"' && *ptr)

205 i‡(*
±r
!='\\'Ë*
±r2
++=*ptr++;

208 
±r
++;

209 *
±r
)

211 'b': *
±r2
++='\b'; ;

212 'f': *
±r2
++='\f'; ;

213 'n': *
±r2
++='\n'; ;

214 'r': *
±r2
++='\r'; ;

215 't': *
±r2
++='\t'; ;

217 
uc
=
	`∑r£_hex4
(
±r
+1);ptr+=4;

219 i‡((
uc
>=0xDC00 && uc<=0xDFFF) || uc==0) ;

221 i‡(
uc
>=0xD800 && uc<=0xDBFF)

223 i‡(
±r
[1]!='\\' ||Ötr[2]!='u') ;

224 
uc2
=
	`∑r£_hex4
(
±r
+3);ptr+=6;

225 i‡(
uc2
<0xDC00 || uc2>0xDFFF) ;

226 
uc
=0x10000 + (((uc&0x3FF)<<10Ë| (
uc2
&0x3FF));

229 
Àn
=4;i‡(
uc
<0x80ËÀn=1;i‡(uc<0x800ËÀn=2;i‡(uc<0x10000ËÀn=3; 
±r2
+=len;

231 
Àn
) {

232 4: *--
±r2
 =((
uc
 | 0x80) & 0xBF); uc >>= 6;

233 3: *--
±r2
 =((
uc
 | 0x80) & 0xBF); uc >>= 6;

234 2: *--
±r2
 =((
uc
 | 0x80) & 0xBF); uc >>= 6;

235 1: *--
±r2
 =(
uc
 | 
fú°ByãM¨k
[
Àn
]);

237 
±r2
+=
Àn
;

239 : *
±r2
++=*
±r
; ;

241 
±r
++;

244 *
±r2
=0;

245 i‡(*
±r
=='\"')Ötr++;

246 
ôem
->
vÆue°rög
=
out
;

247 
ôem
->
ty≥
=
cJSON_Såög
;

248  
±r
;

249 
	}
}

252 *
	$¥öt_°rög_±r
(c⁄° *
°r
,
¥ötbuf„r
 *
p
)

254 c⁄° *
±r
;*
±r2
,*
out
;
Àn
=0,
Êag
=0;
tokí
;

256 
±r
=
°r
;*±r;±r++Ë
Êag
|=((*ptr>0 && *ptr<32)||(*ptr=='\"')||(*ptr=='\\'))?1:0;

257 i‡(!
Êag
)

259 
Àn
=
±r
-
°r
;

260 i‡(
p
Ë
out
=
	`ísuª
’,
Àn
+3);

261 
out
=(*)
	`cJSON_mÆloc
(
Àn
+3);

262 i‡(!
out
)  0;

263 
±r2
=
out
;*ptr2++='\"';

264 
	`°r˝y
(
±r2
,
°r
);

265 
±r2
[
Àn
]='\"';

266 
±r2
[
Àn
+1]=0;

267  
out
;

270 i‡(!
°r
)

272 i‡(
p
Ë
out
=
	`ísuª
(p,3);

273 
out
=(*)
	`cJSON_mÆloc
(3);

274 i‡(!
out
)  0;

275 
	`°r˝y
(
out
,"\"\"");

276  
out
;

278 
±r
=
°r
;(
tokí
=*±rË&& ++
Àn
Ë{i‡(
	`°rchr
("\"\\\b\f\n\r\t",token))Üen++; if (token<32)Üen+=5;ptr++;}

280 i‡(
p
Ë
out
=
	`ísuª
’,
Àn
+3);

281 
out
=(*)
	`cJSON_mÆloc
(
Àn
+3);

282 i‡(!
out
)  0;

284 
±r2
=
out
;
±r
=
°r
;

285 *
±r2
++='\"';

286 *
±r
)

288 i‡(()*
±r
>31 && *±r!='\"' && *±r!='\\'Ë*
±r2
++=*ptr++;

291 *
±r2
++='\\';

292 
tokí
=*
±r
++)

294 '\\': *
±r2
++='\\'; ;

295 '\"': *
±r2
++='\"'; ;

296 '\b': *
±r2
++='b'; ;

297 '\f': *
±r2
++='f'; ;

298 '\n': *
±r2
++='n'; ;

299 '\r': *
±r2
++='r'; ;

300 '\t': *
±r2
++='t'; ;

301 : 
	`•rötf
(
±r2
,"u%04x",
tokí
);ptr2+=5; ;

305 *
±r2
++='\"';*ptr2++=0;

306  
out
;

307 
	}
}

309 *
	$¥öt_°rög
(
cJSON
 *
ôem
,
¥ötbuf„r
 *
p
Ë{ 
	`¥öt_°rög_±r
(ôem->
vÆue°rög
,p);
	}
}

312 c⁄° *
∑r£_vÆue
(
cJSON
 *
ôem
,c⁄° *
vÆue
);

313 *
¥öt_vÆue
(
cJSON
 *
ôem
,
dïth
,
fmt
,
¥ötbuf„r
 *
p
);

314 c⁄° *
∑r£_¨øy
(
cJSON
 *
ôem
,c⁄° *
vÆue
);

315 *
¥öt_¨øy
(
cJSON
 *
ôem
,
dïth
,
fmt
,
¥ötbuf„r
 *
p
);

316 c⁄° *
∑r£_obje˘
(
cJSON
 *
ôem
,c⁄° *
vÆue
);

317 *
¥öt_obje˘
(
cJSON
 *
ôem
,
dïth
,
fmt
,
¥ötbuf„r
 *
p
);

320 c⁄° *
	$skù
(c⁄° *
ö
Ë{ö && *ö && ()*ö<=32Ëö++;  in;
	}
}

323 
cJSON
 *
	$cJSON_P¨£WôhO±s
(c⁄° *
vÆue
,c⁄° **
ªtu∫_∑r£_íd
,
ªquúe_nuŒ_ãrmö©ed
)

325 c⁄° *
íd
=0;

326 
cJSON
 *
c
=
	`cJSON_New_Iãm
();

327 
ï
=0;

328 i‡(!
c
)  0;

330 
íd
=
	`∑r£_vÆue
(
c
,
	`skù
(
vÆue
));

331 i‡(!
íd
Ë{
	`cJSON_Dñëe
(
c
); 0;}

334 i‡(
ªquúe_nuŒ_ãrmö©ed
Ë{
íd
=
	`skù
”nd);i‡(*ídË{
	`cJSON_Dñëe
(
c
);
ï
=end; 0;}}

335 i‡(
ªtu∫_∑r£_íd
Ë*ªtu∫_∑r£_íd=
íd
;

336  
c
;

337 
	}
}

339 
cJSON
 *
	$cJSON_P¨£
(c⁄° *
vÆue
Ë{ 
	`cJSON_P¨£WôhO±s
(vÆue,0,0);
	}
}

342 *
	$cJSON_Pröt
(
cJSON
 *
ôem
Ë{ 
	`¥öt_vÆue
(ôem,0,1,0);
	}
}

343 *
	$cJSON_PrötUnf‹m©ãd
(
cJSON
 *
ôem
Ë{ 
	`¥öt_vÆue
(ôem,0,0,0);
	}
}

345 *
	$cJSON_PrötBuf„ªd
(
cJSON
 *
ôem
,
¥ebuf„r
,
fmt
)

347 
¥ötbuf„r
 
p
;

348 
p
.
buf„r
=(*)
	`cJSON_mÆloc
(
¥ebuf„r
);

349 
p
.
Àngth
=
¥ebuf„r
;

350 
p
.
off£t
=0;

351  
	`¥öt_vÆue
(
ôem
,0,
fmt
,&
p
);

352  
p
.
buf„r
;

353 
	}
}

357 c⁄° *
	$∑r£_vÆue
(
cJSON
 *
ôem
,c⁄° *
vÆue
)

359 i‡(!
vÆue
)  0;

360 i‡(!
	`°∫cmp
(
vÆue
,"nuŒ",4)Ë{ 
ôem
->
ty≥
=
cJSON_NULL
;  value+4; }

361 i‡(!
	`°∫cmp
(
vÆue
,"Ál£",5)Ë{ 
ôem
->
ty≥
=
cJSON_FÆ£
;  value+5; }

362 i‡(!
	`°∫cmp
(
vÆue
,"åue",4)Ë{ 
ôem
->
ty≥
=
cJSON_True
; iãm->
vÆueöt
=1;  value+4; }

363 i‡(*
vÆue
=='\"'Ë{  
	`∑r£_°rög
(
ôem
,value); }

364 i‡(*
vÆue
=='-' || (*vÆue>='0' && *vÆue<='9')Ë{  
	`∑r£_numbî
(
ôem
,value); }

365 i‡(*
vÆue
=='['Ë{  
	`∑r£_¨øy
(
ôem
,value); }

366 i‡(*
vÆue
=='{'Ë{  
	`∑r£_obje˘
(
ôem
,value); }

368 
ï
=
vÆue
; 0;

369 
	}
}

372 *
	$¥öt_vÆue
(
cJSON
 *
ôem
,
dïth
,
fmt
,
¥ötbuf„r
 *
p
)

374 *
out
=0;

375 i‡(!
ôem
)  0;

376 i‡(
p
)

378 (
ôem
->
ty≥
)&255)

380 
cJSON_NULL
: {
out
=
	`ísuª
(
p
,5); i‡(outË
	`°r˝y
(out,"null"); ;}

381 
cJSON_FÆ£
: {
out
=
	`ísuª
(
p
,6); i‡(outË
	`°r˝y
(out,"false"); ;}

382 
cJSON_True
: {
out
=
	`ísuª
(
p
,5); i‡(outË
	`°r˝y
(out,"true"); ;}

383 
cJSON_Numbî
: 
out
=
	`¥öt_numbî
(
ôem
,
p
);;

384 
cJSON_Såög
: 
out
=
	`¥öt_°rög
(
ôem
,
p
);;

385 
cJSON_Aºay
: 
out
=
	`¥öt_¨øy
(
ôem
,
dïth
,
fmt
,
p
);;

386 
cJSON_Obje˘
: 
out
=
	`¥öt_obje˘
(
ôem
,
dïth
,
fmt
,
p
);;

391 (
ôem
->
ty≥
)&255)

393 
cJSON_NULL
: 
out
=
	`cJSON_°rdup
("null"); ;

394 
cJSON_FÆ£
: 
out
=
	`cJSON_°rdup
("false");;

395 
cJSON_True
: 
out
=
	`cJSON_°rdup
("true"); ;

396 
cJSON_Numbî
: 
out
=
	`¥öt_numbî
(
ôem
,0);;

397 
cJSON_Såög
: 
out
=
	`¥öt_°rög
(
ôem
,0);;

398 
cJSON_Aºay
: 
out
=
	`¥öt_¨øy
(
ôem
,
dïth
,
fmt
,0);;

399 
cJSON_Obje˘
: 
out
=
	`¥öt_obje˘
(
ôem
,
dïth
,
fmt
,0);;

402  
out
;

403 
	}
}

406 c⁄° *
	$∑r£_¨øy
(
cJSON
 *
ôem
,c⁄° *
vÆue
)

408 
cJSON
 *
chûd
;

409 i‡(*
vÆue
!='['Ë{
ï
=value; 0;}

411 
ôem
->
ty≥
=
cJSON_Aºay
;

412 
vÆue
=
	`skù
(value+1);

413 i‡(*
vÆue
==']')  value+1;

415 
ôem
->
chûd
=chûd=
	`cJSON_New_Iãm
();

416 i‡(!
ôem
->
chûd
)  0;

417 
vÆue
=
	`skù
(
	`∑r£_vÆue
(
chûd
,skip(value)));

418 i‡(!
vÆue
)  0;

420 *
vÆue
==',')

422 
cJSON
 *
√w_ôem
;

423 i‡(!(
√w_ôem
=
	`cJSON_New_Iãm
()))  0;

424 
chûd
->
√xt
=
√w_ôem
;√w_ôem->
¥ev
=child;child=new_item;

425 
vÆue
=
	`skù
(
	`∑r£_vÆue
(
chûd
,skip(value+1)));

426 i‡(!
vÆue
)  0;

429 i‡(*
vÆue
==']')  value+1;

430 
ï
=
vÆue
; 0;

431 
	}
}

434 *
	$¥öt_¨øy
(
cJSON
 *
ôem
,
dïth
,
fmt
,
¥ötbuf„r
 *
p
)

436 **
íåõs
;

437 *
out
=0,*
±r
,*
ªt
;
Àn
=5;

438 
cJSON
 *
chûd
=
ôem
->child;

439 
numíåõs
=0,
i
=0,
Áû
=0;

440 
size_t
 
tm∂í
=0;

443 
chûd
Ë
numíåõs
++,chûd=chûd->
√xt
;

445 i‡(!
numíåõs
)

447 i‡(
p
Ë
out
=
	`ísuª
(p,3);

448 
out
=(*)
	`cJSON_mÆloc
(3);

449 i‡(
out
Ë
	`°r˝y
(out,"[]");

450  
out
;

453 i‡(
p
)

456 
i
=
p
->
off£t
;

457 
±r
=
	`ísuª
(
p
,1);i‡(!±rË 0; *±r='[';Ö->
off£t
++;

458 
chûd
=
ôem
->child;

459 
chûd
 && !
Áû
)

461 
	`¥öt_vÆue
(
chûd
,
dïth
+1,
fmt
,
p
);

462 
p
->
off£t
=
	`upd©e
(p);

463 i‡(
chûd
->
√xt
Ë{
Àn
=
fmt
?2:1;
±r
=
	`ísuª
(
p
,Àn+1);i‡(!±rË 0;*±r++=',';if(fmt)*±r++=' ';*±r=0;p->
off£t
+=len;}

464 
chûd
=chûd->
√xt
;

466 
±r
=
	`ísuª
(
p
,2);if (!ptr)  0; *ptr++=']';*ptr=0;

467 
out
=(
p
->
buf„r
)+
i
;

472 
íåõs
=(**)
	`cJSON_mÆloc
(
numíåõs
*(*));

473 i‡(!
íåõs
)  0;

474 
	`mem£t
(
íåõs
,0,
numíåõs
*(*));

476 
chûd
=
ôem
->child;

477 
chûd
 && !
Áû
)

479 
ªt
=
	`¥öt_vÆue
(
chûd
,
dïth
+1,
fmt
,0);

480 
íåõs
[
i
++]=
ªt
;

481 i‡(
ªt
Ë
Àn
+=
	`°æí
‘ë)+2+(
fmt
?1:0); 
Áû
=1;

482 
chûd
=chûd->
√xt
;

486 i‡(!
Áû
Ë
out
=(*)
	`cJSON_mÆloc
(
Àn
);

488 i‡(!
out
Ë
Áû
=1;

491 i‡(
Áû
)

493 
i
=0;i<
numíåõs
;i++Ëi‡(
íåõs
[i]Ë
	`cJSON_‰ì
(entries[i]);

494 
	`cJSON_‰ì
(
íåõs
);

499 *
out
='[';

500 
±r
=
out
+1;*ptr=0;

501 
i
=0;i<
numíåõs
;i++)

503 
tm∂í
=
	`°æí
(
íåõs
[
i
]);
	`mem˝y
(
±r
,entries[i],tmplen);ptr+=tmplen;

504 i‡(
i
!=
numíåõs
-1Ë{*
±r
++=',';if(
fmt
)*ptr++=' ';*ptr=0;}

505 
	`cJSON_‰ì
(
íåõs
[
i
]);

507 
	`cJSON_‰ì
(
íåõs
);

508 *
±r
++=']';*ptr++=0;

510  
out
;

511 
	}
}

514 c⁄° *
	$∑r£_obje˘
(
cJSON
 *
ôem
,c⁄° *
vÆue
)

516 
cJSON
 *
chûd
;

517 i‡(*
vÆue
!='{'Ë{
ï
=value; 0;}

519 
ôem
->
ty≥
=
cJSON_Obje˘
;

520 
vÆue
=
	`skù
(value+1);

521 i‡(*
vÆue
=='}')  value+1;

523 
ôem
->
chûd
=chûd=
	`cJSON_New_Iãm
();

524 i‡(!
ôem
->
chûd
)  0;

525 
vÆue
=
	`skù
(
	`∑r£_°rög
(
chûd
,skip(value)));

526 i‡(!
vÆue
)  0;

527 
chûd
->
°rög
=chûd->
vÆue°rög
;child->valuestring=0;

528 i‡(*
vÆue
!=':'Ë{
ï
=value; 0;}

529 
vÆue
=
	`skù
(
	`∑r£_vÆue
(
chûd
,skip(value+1)));

530 i‡(!
vÆue
)  0;

532 *
vÆue
==',')

534 
cJSON
 *
√w_ôem
;

535 i‡(!(
√w_ôem
=
	`cJSON_New_Iãm
()))  0;

536 
chûd
->
√xt
=
√w_ôem
;√w_ôem->
¥ev
=child;child=new_item;

537 
vÆue
=
	`skù
(
	`∑r£_°rög
(
chûd
,skip(value+1)));

538 i‡(!
vÆue
)  0;

539 
chûd
->
°rög
=chûd->
vÆue°rög
;child->valuestring=0;

540 i‡(*
vÆue
!=':'Ë{
ï
=value; 0;}

541 
vÆue
=
	`skù
(
	`∑r£_vÆue
(
chûd
,skip(value+1)));

542 i‡(!
vÆue
)  0;

545 i‡(*
vÆue
=='}')  value+1;

546 
ï
=
vÆue
; 0;

547 
	}
}

550 *
	$¥öt_obje˘
(
cJSON
 *
ôem
,
dïth
,
fmt
,
¥ötbuf„r
 *
p
)

552 **
íåõs
=0,**
«mes
=0;

553 *
out
=0,*
±r
,*
ªt
,*
°r
;
Àn
=7,
i
=0,
j
;

554 
cJSON
 *
chûd
=
ôem
->child;

555 
numíåõs
=0,
Áû
=0;

556 
size_t
 
tm∂í
=0;

558 
chûd
Ë
numíåõs
++,chûd=chûd->
√xt
;

560 i‡(!
numíåõs
)

562 i‡(
p
Ë
out
=
	`ísuª
’,
fmt
?
dïth
+4:3);

563 
out
=(*)
	`cJSON_mÆloc
(
fmt
?
dïth
+4:3);

564 i‡(!
out
)  0;

565 
±r
=
out
;*ptr++='{';

566 i‡(
fmt
Ë{*
±r
++='\n';
i
=0;i<
dïth
-1;i++) *ptr++='\t';}

567 *
±r
++='}';*ptr++=0;

568  
out
;

570 i‡(
p
)

573 
i
=
p
->
off£t
;

574 
Àn
=
fmt
?2:1; 
±r
=
	`ísuª
(
p
,len+1); if (!ptr)  0;

575 *
±r
++='{'; i‡(
fmt
Ë*±r++='\n'; *±r=0; 
p
->
off£t
+=
Àn
;

576 
chûd
=
ôem
->chûd;
dïth
++;

577 
chûd
)

579 i‡(
fmt
)

581 
±r
=
	`ísuª
(
p
,
dïth
); if (!ptr)  0;

582 
j
=0;j<
dïth
;j++Ë*
±r
++='\t';

583 
p
->
off£t
+=
dïth
;

585 
	`¥öt_°rög_±r
(
chûd
->
°rög
,
p
);

586 
p
->
off£t
=
	`upd©e
(p);

588 
Àn
=
fmt
?2:1;

589 
±r
=
	`ísuª
(
p
,
Àn
); if (!ptr)  0;

590 *
±r
++=':';i‡(
fmt
) *ptr++='\t';

591 
p
->
off£t
+=
Àn
;

593 
	`¥öt_vÆue
(
chûd
,
dïth
,
fmt
,
p
);

594 
p
->
off£t
=
	`upd©e
(p);

596 
Àn
=(
fmt
?1:0)+(
chûd
->
√xt
?1:0);

597 
±r
=
	`ísuª
(
p
,
Àn
+1); if (!ptr)  0;

598 i‡(
chûd
->
√xt
Ë*
±r
++=',';

599 i‡(
fmt
Ë*
±r
++='\n';*ptr=0;

600 
p
->
off£t
+=
Àn
;

601 
chûd
=chûd->
√xt
;

603 
±r
=
	`ísuª
(
p
,
fmt
?(
dïth
+1):2); if (!ptr)  0;

604 i‡(
fmt
Ë
i
=0;i<
dïth
-1;i++Ë*
±r
++='\t';

605 *
±r
++='}';*ptr=0;

606 
out
=(
p
->
buf„r
)+
i
;

611 
íåõs
=(**)
	`cJSON_mÆloc
(
numíåõs
*(*));

612 i‡(!
íåõs
)  0;

613 
«mes
=(**)
	`cJSON_mÆloc
(
numíåõs
*(*));

614 i‡(!
«mes
Ë{
	`cJSON_‰ì
(
íåõs
); 0;}

615 
	`mem£t
(
íåõs
,0,(*)*
numíåõs
);

616 
	`mem£t
(
«mes
,0,(*)*
numíåõs
);

619 
chûd
=
ôem
->chûd;
dïth
++;i‡(
fmt
Ë
Àn
+=depth;

620 
chûd
)

622 
«mes
[
i
]=
°r
=
	`¥öt_°rög_±r
(
chûd
->
°rög
,0);

623 
íåõs
[
i
++]=
ªt
=
	`¥öt_vÆue
(
chûd
,
dïth
,
fmt
,0);

624 i‡(
°r
 && 
ªt
Ë
Àn
+=
	`°æí
‘ë)+°æí(°r)+2+(
fmt
?2+
dïth
:0); 
Áû
=1;

625 
chûd
=chûd->
√xt
;

629 i‡(!
Áû
Ë
out
=(*)
	`cJSON_mÆloc
(
Àn
);

630 i‡(!
out
Ë
Áû
=1;

633 i‡(
Áû
)

635 
i
=0;i<
numíåõs
;i++Ë{i‡(
«mes
[i]Ë
	`cJSON_‰ì
“ames[i]);i‡(
íåõs
[i]) cJSON_free(entries[i]);}

636 
	`cJSON_‰ì
(
«mes
);cJSON_‰ì(
íåõs
);

641 *
out
='{';
±r
=out+1;i‡(
fmt
)*ptr++='\n';*ptr=0;

642 
i
=0;i<
numíåõs
;i++)

644 i‡(
fmt
Ë
j
=0;j<
dïth
;j++Ë*
±r
++='\t';

645 
tm∂í
=
	`°æí
(
«mes
[
i
]);
	`mem˝y
(
±r
,names[i],tmplen);ptr+=tmplen;

646 *
±r
++=':';i‡(
fmt
) *ptr++='\t';

647 
	`°r˝y
(
±r
,
íåõs
[
i
]);±r+=
	`°æí
(entries[i]);

648 i‡(
i
!=
numíåõs
-1Ë*
±r
++=',';

649 i‡(
fmt
Ë*
±r
++='\n';*ptr=0;

650 
	`cJSON_‰ì
(
«mes
[
i
]);cJSON_‰ì(
íåõs
[i]);

653 
	`cJSON_‰ì
(
«mes
);cJSON_‰ì(
íåõs
);

654 i‡(
fmt
Ë
i
=0;i<
dïth
-1;i++Ë*
±r
++='\t';

655 *
±r
++='}';*ptr++=0;

657  
out
;

658 
	}
}

661 
	$cJSON_GëAºaySize
(
cJSON
 *
¨øy
Ë{cJSON *
c
˜ºay->
chûd
;
i
=0;c)i++,c=c->
√xt
; i;
	}
}

662 
cJSON
 *
	$cJSON_GëAºayIãm
(
cJSON
 *
¨øy
,
ôem
Ë{cJSON *
c
˜ºay->
chûd
; ¯&& iãm>0Ëôem--,c=c->
√xt
;  c;
	}
}

663 
cJSON
 *
	$cJSON_GëObje˘Iãm
(
cJSON
 *
obje˘
,c⁄° *
°rög
Ë{cJSON *
c
=obje˘->
chûd
; ¯&& 
	`cJSON_°rˇ£cmp
(c->°rög,°rög)Ëc=c->
√xt
;  c;
	}
}

666 
	$suffix_obje˘
(
cJSON
 *
¥ev
,cJSON *
ôem
Ë{¥ev->
√xt
=ôem;ôem->¥evıªv;
	}
}

668 
cJSON
 *
	$¸óã_ª„ªn˚
(
cJSON
 *
ôem
Ë{cJSON *
ªf
=
	`cJSON_New_Iãm
();i‡(!ªfË 0;
	`mem˝y
‘ef,ôem,(cJSON));ªf->
°rög
=0;ªf->
ty≥
|=
cJSON_IsRe„ªn˚
;ªf->
√xt
Ùef->
¥ev
=0;Ñef;
	}
}

671 
	$cJSON_AddIãmToAºay
(
cJSON
 *
¨øy
, cJSON *
ôem
Ë{cJSON *
c
˜ºay->
chûd
;i‡(!ôemË; i‡(!cË{¨øy->chûd=ôem;} {¯&& c->
√xt
Ëc=c->√xt; 
	`suffix_obje˘
(c,ôem);}
	}
}

672 
	$cJSON_AddIãmToObje˘
(
cJSON
 *
obje˘
,c⁄° *
°rög
,cJSON *
ôem
Ë{i‡(!ôemË; i‡(ôem->°rögË
	`cJSON_‰ì
(ôem->°rög);ôem->°rög=
	`cJSON_°rdup
(°rög);
	`cJSON_AddIãmToAºay
(obje˘,ôem);
	}
}

673 
	$cJSON_AddIãmToObje˘CS
(
cJSON
 *
obje˘
,c⁄° *
°rög
,cJSON *
ôem
Ë{i‡(!ôemË; i‡(!(ôem->
ty≥
&
cJSON_SåögIsC⁄°
Ë&& iãm->°rögË
	`cJSON_‰ì
(ôem->°rög);ôem->°rög=(*)°rög;ôem->ty≥|=cJSON_SåögIsC⁄°;
	`cJSON_AddIãmToAºay
(obje˘,ôem);
	}
}

674 
	$cJSON_AddIãmRe„ªn˚ToAºay
(
cJSON
 *
¨øy
, cJSON *
ôem
Ë{
	`cJSON_AddIãmToAºay
◊ºay,
	`¸óã_ª„ªn˚
(ôem));
	}
}

675 
	$cJSON_AddIãmRe„ªn˚ToObje˘
(
cJSON
 *
obje˘
,c⁄° *
°rög
,cJSON *
ôem
Ë{
	`cJSON_AddIãmToObje˘
(obje˘,°rög,
	`¸óã_ª„ªn˚
(ôem));
	}
}

677 
cJSON
 *
	$cJSON_DëachIãmFromAºay
(
cJSON
 *
¨øy
,
which
Ë{cJSON *
c
˜ºay->
chûd
;¯&& which>0Ëc=c->
√xt
,which--;if (!c)  0;

678 i‡(
c
->
¥ev
Ëc->¥ev->
√xt
=c->√xt;i‡(c->√xtËc->√xt->¥ev=c->¥ev;i‡(c==
¨øy
->
chûd
Ë¨øy->chûd=c->√xt;c->¥ev=c->√xt=0; c;
	}
}

679 
	$cJSON_DñëeIãmFromAºay
(
cJSON
 *
¨øy
,
which
Ë{
	`cJSON_Dñëe
(
	`cJSON_DëachIãmFromAºay
◊ºay,which));
	}
}

680 
cJSON
 *
	$cJSON_DëachIãmFromObje˘
(
cJSON
 *
obje˘
,c⁄° *
°rög
Ë{
i
=0;cJSON *
c
=obje˘->
chûd
;¯&& 
	`cJSON_°rˇ£cmp
(c->°rög,°rög)Ëi++,c=c->
√xt
;i‡(cË 
	`cJSON_DëachIãmFromAºay
(obje˘,i); 0;
	}
}

681 
	$cJSON_DñëeIãmFromObje˘
(
cJSON
 *
obje˘
,c⁄° *
°rög
Ë{
	`cJSON_Dñëe
(
	`cJSON_DëachIãmFromObje˘
(obje˘,°rög));
	}
}

684 
	$cJSON_In£πIãmInAºay
(
cJSON
 *
¨øy
,
which
,cJSON *
√wôem
Ë{cJSON *
c
˜ºay->
chûd
;¯&& which>0Ëc=c->
√xt
,which--;i‡(!cË{
	`cJSON_AddIãmToAºay
(array,newitem);;}

685 
√wôem
->
√xt
=
c
;√wôem->
¥ev
=c->¥ev;c->¥evÚewôem;i‡(c==
¨øy
->
chûd
Ë¨øy->chûdÚewôem; √wôem->¥ev->√xtÚewôem;
	}
}

686 
	$cJSON_Rïœ˚IãmInAºay
(
cJSON
 *
¨øy
,
which
,cJSON *
√wôem
Ë{cJSON *
c
˜ºay->
chûd
;¯&& which>0Ëc=c->
√xt
,which--;if (!c) ;

687 
√wôem
->
√xt
=
c
->√xt;√wôem->
¥ev
=c->prev;if (newitem->next)Çewitem->next->prev=newitem;

688 i‡(
c
==
¨øy
->
chûd
Ë¨øy->chûd=
√wôem
; √wôem->
¥ev
->
√xt
Úewôem;c->√xt=c->¥ev=0;
	`cJSON_Dñëe
(c);
	}
}

689 
	$cJSON_Rïœ˚IãmInObje˘
(
cJSON
 *
obje˘
,c⁄° *
°rög
,cJSON *
√wôem
){
i
=0;cJSON *
c
=obje˘->
chûd
;¯&& 
	`cJSON_°rˇ£cmp
(c->°rög,°rög))i++,c=c->
√xt
;if(c){√wôem->°rög=
	`cJSON_°rdup
(°rög);
	`cJSON_Rïœ˚IãmInAºay
(obje˘,i,√wôem);}
	}
}

692 
cJSON
 *
	$cJSON_Cª©eNuŒ
(Ë{
cJSON
 *
ôem
=
	`cJSON_New_Iãm
();if(ôem)ôem->
ty≥
=
cJSON_NULL
; iãm;
	}
}

693 
cJSON
 *
	$cJSON_Cª©eTrue
(Ë{
cJSON
 *
ôem
=
	`cJSON_New_Iãm
();if(ôem)ôem->
ty≥
=
cJSON_True
; iãm;
	}
}

694 
cJSON
 *
	$cJSON_Cª©eFÆ£
(Ë{
cJSON
 *
ôem
=
	`cJSON_New_Iãm
();if(ôem)ôem->
ty≥
=
cJSON_FÆ£
; iãm;
	}
}

695 
cJSON
 *
	$cJSON_Cª©eBoﬁ
(
b
Ë{
cJSON
 *
ôem
=
	`cJSON_New_Iãm
();if(ôem)ôem->
ty≥
=b?
cJSON_True
:
cJSON_FÆ£
; iãm;
	}
}

696 
cJSON
 *
	$cJSON_Cª©eNumbî
(
num
Ë{
cJSON
 *
ôem
=
	`cJSON_New_Iãm
();if(ôem){ôem->
ty≥
=
cJSON_Numbî
;ôem->
vÆuedoubÀ
Úum;ôem->
vÆueöt
=(Íum;} iãm;
	}
}

697 
cJSON
 *
	$cJSON_Cª©eSåög
(c⁄° *
°rög
Ë{
cJSON
 *
ôem
=
	`cJSON_New_Iãm
();if(ôem){ôem->
ty≥
=
cJSON_Såög
;ôem->
vÆue°rög
=
	`cJSON_°rdup
(°rög);} iãm;
	}
}

698 
cJSON
 *
	$cJSON_Cª©eAºay
(Ë{
cJSON
 *
ôem
=
	`cJSON_New_Iãm
();if(ôem)ôem->
ty≥
=
cJSON_Aºay
; iãm;
	}
}

699 
cJSON
 *
	$cJSON_Cª©eObje˘
(Ë{
cJSON
 *
ôem
=
	`cJSON_New_Iãm
();if(ôem)ôem->
ty≥
=
cJSON_Obje˘
; iãm;
	}
}

702 
cJSON
 *
	$cJSON_Cª©eI¡Aºay
(c⁄° *
numbîs
,
cou¡
Ë{
i
;
cJSON
 *
n
=0,*
p
=0,*
a
=
	`cJSON_Cª©eAºay
();i=0;®&& i<cou¡;i++){n=
	`cJSON_Cª©eNumbî
“umbîs[i]);if(!iÔ->
chûd
Ú;
	`suffix_obje˘
’,n);pÚ;}á;
	}
}

703 
cJSON
 *
	$cJSON_Cª©eFlﬂtAºay
(c⁄° *
numbîs
,
cou¡
Ë{
i
;
cJSON
 *
n
=0,*
p
=0,*
a
=
	`cJSON_Cª©eAºay
();i=0;®&& i<cou¡;i++){n=
	`cJSON_Cª©eNumbî
“umbîs[i]);if(!iÔ->
chûd
Ú;
	`suffix_obje˘
’,n);pÚ;}á;
	}
}

704 
cJSON
 *
	$cJSON_Cª©eDoubÀAºay
(c⁄° *
numbîs
,
cou¡
Ë{
i
;
cJSON
 *
n
=0,*
p
=0,*
a
=
	`cJSON_Cª©eAºay
();i=0;®&& i<cou¡;i++){n=
	`cJSON_Cª©eNumbî
“umbîs[i]);if(!iÔ->
chûd
Ú;
	`suffix_obje˘
’,n);pÚ;}á;
	}
}

705 
cJSON
 *
	$cJSON_Cª©eSåögAºay
(c⁄° **
°rögs
,
cou¡
Ë{
i
;
cJSON
 *
n
=0,*
p
=0,*
a
=
	`cJSON_Cª©eAºay
();i=0;®&& i<cou¡;i++){n=
	`cJSON_Cª©eSåög
(°rögs[i]);if(!iÔ->
chûd
Ú;
	`suffix_obje˘
’,n);pÚ;}á;
	}
}

708 
cJSON
 *
	$cJSON_Du∂iˇã
(
cJSON
 *
ôem
,
ªcur£
)

710 
cJSON
 *
√wôem
,*
˝å
,*
≈å
=0,*
√wchûd
;

712 i‡(!
ôem
)  0;

714 
√wôem
=
	`cJSON_New_Iãm
();

715 i‡(!
√wôem
)  0;

717 
√wôem
->
ty≥
=
ôem
->ty≥&(~
cJSON_IsRe„ªn˚
),√wôem->
vÆueöt
=ôem->vÆueöt,√wôem->
vÆuedoubÀ
=item->valuedouble;

718 i‡(
ôem
->
vÆue°rög
Ë{
√wôem
->vÆue°rög=
	`cJSON_°rdup
(ôem->vÆue°rög); i‡(!√wôem->vÆue°rögË{
	`cJSON_Dñëe
(newitem); 0;}}

719 i‡(
ôem
->
°rög
Ë{
√wôem
->°rög=
	`cJSON_°rdup
(ôem->°rög); i‡(!√wôem->°rögË{
	`cJSON_Dñëe
(newitem); 0;}}

721 i‡(!
ªcur£
Ë 
√wôem
;

723 
˝å
=
ôem
->
chûd
;

724 
˝å
)

726 
√wchûd
=
	`cJSON_Du∂iˇã
(
˝å
,1);

727 i‡(!
√wchûd
Ë{
	`cJSON_Dñëe
(
√wôem
); 0;}

728 i‡(
≈å
Ë{≈å->
√xt
=
√wchûd
,√wchûd->
¥ev
=nptr;nptr=newchild;}

729 {
√wôem
->
chûd
=
√wchûd
;
≈å
=newchild;}

730 
˝å
=˝å->
√xt
;

732  
√wôem
;

733 
	}
}

735 
	$cJSON_Möify
(*
js⁄
)

737 *
öto
=
js⁄
;

738 *
js⁄
)

740 i‡(*
js⁄
==' ') json++;

741 i‡(*
js⁄
=='\t') json++;

742 i‡(*
js⁄
=='\r') json++;

743 i‡(*
js⁄
=='\n') json++;

744 i‡(*
js⁄
=='/' && json[1]=='/') *json && *json!='\n') json++;

745 i‡(*
js⁄
=='/' && json[1]=='*') {*json && !(*json=='*' && json[1]=='/')) json++;json+=2;}

746 i‡(*
js⁄
=='\"'){*
öto
++=*json++;*json && *json!='\"'){if (*json=='\\') *into++=*json++;*into++=*json++;}*into++=*json++;}

747 *
öto
++=*
js⁄
++;

749 *
öto
=0;

750 
	}
}

	@config/cJSON.h

23 #i‚de‡
cJSON__h


24 
	#cJSON__h


	)

26 #ifde‡
__˝lu•lus


32 
	#cJSON_FÆ£
 0

	)

33 
	#cJSON_True
 1

	)

34 
	#cJSON_NULL
 2

	)

35 
	#cJSON_Numbî
 3

	)

36 
	#cJSON_Såög
 4

	)

37 
	#cJSON_Aºay
 5

	)

38 
	#cJSON_Obje˘
 6

	)

40 
	#cJSON_IsRe„ªn˚
 256

	)

41 
	#cJSON_SåögIsC⁄°
 512

	)

44 
	scJSON
 {

45 
cJSON
 *
√xt
,*
¥ev
;

46 
cJSON
 *
chûd
;

48 
ty≥
;

50 *
vÆue°rög
;

51 
vÆueöt
;

52 
vÆuedoubÀ
;

54 *
°rög
;

55 } 
	tcJSON
;

57 
	scJSON_Hooks
 {

58 *(*
mÆloc_‚
)(
size_t
 
sz
);

59 (*
‰ì_‚
)(*
±r
);

60 } 
	tcJSON_Hooks
;

63 
cJSON_InôHooks
(
cJSON_Hooks
* 
hooks
);

67 
cJSON
 *
cJSON_P¨£
(c⁄° *
vÆue
);

69 *
cJSON_Pröt
(
cJSON
 *
ôem
);

71 *
cJSON_PrötUnf‹m©ãd
(
cJSON
 *
ôem
);

73 *
cJSON_PrötBuf„ªd
(
cJSON
 *
ôem
,
¥ebuf„r
,
fmt
);

75 
cJSON_Dñëe
(
cJSON
 *
c
);

78 
cJSON_GëAºaySize
(
cJSON
 *
¨øy
);

80 
cJSON
 *
cJSON_GëAºayIãm
(cJSON *
¨øy
,
ôem
);

82 
cJSON
 *
cJSON_GëObje˘Iãm
(cJSON *
obje˘
,c⁄° *
°rög
);

85 c⁄° *
cJSON_GëEº‹På
();

88 
cJSON
 *
cJSON_Cª©eNuŒ
();

89 
cJSON
 *
cJSON_Cª©eTrue
();

90 
cJSON
 *
cJSON_Cª©eFÆ£
();

91 
cJSON
 *
cJSON_Cª©eBoﬁ
(
b
);

92 
cJSON
 *
cJSON_Cª©eNumbî
(
num
);

93 
cJSON
 *
cJSON_Cª©eSåög
(c⁄° *
°rög
);

94 
cJSON
 *
cJSON_Cª©eAºay
();

95 
cJSON
 *
cJSON_Cª©eObje˘
();

98 
cJSON
 *
cJSON_Cª©eI¡Aºay
(c⁄° *
numbîs
,
cou¡
);

99 
cJSON
 *
cJSON_Cª©eFlﬂtAºay
(c⁄° *
numbîs
,
cou¡
);

100 
cJSON
 *
cJSON_Cª©eDoubÀAºay
(c⁄° *
numbîs
,
cou¡
);

101 
cJSON
 *
cJSON_Cª©eSåögAºay
(c⁄° **
°rögs
,
cou¡
);

104 
cJSON_AddIãmToAºay
(
cJSON
 *
¨øy
, cJSON *
ôem
);

105 
cJSON_AddIãmToObje˘
(
cJSON
 *
obje˘
,c⁄° *
°rög
,cJSON *
ôem
);

106 
cJSON_AddIãmToObje˘CS
(
cJSON
 *
obje˘
,c⁄° *
°rög
,cJSON *
ôem
);

108 
cJSON_AddIãmRe„ªn˚ToAºay
(
cJSON
 *
¨øy
, cJSON *
ôem
);

109 
cJSON_AddIãmRe„ªn˚ToObje˘
(
cJSON
 *
obje˘
,c⁄° *
°rög
,cJSON *
ôem
);

112 
cJSON
 *
cJSON_DëachIãmFromAºay
(cJSON *
¨øy
,
which
);

113 
cJSON_DñëeIãmFromAºay
(
cJSON
 *
¨øy
,
which
);

114 
cJSON
 *
cJSON_DëachIãmFromObje˘
(cJSON *
obje˘
,c⁄° *
°rög
);

115 
cJSON_DñëeIãmFromObje˘
(
cJSON
 *
obje˘
,c⁄° *
°rög
);

118 
cJSON_In£πIãmInAºay
(
cJSON
 *
¨øy
,
which
,cJSON *
√wôem
);

119 
cJSON_Rïœ˚IãmInAºay
(
cJSON
 *
¨øy
,
which
,cJSON *
√wôem
);

120 
cJSON_Rïœ˚IãmInObje˘
(
cJSON
 *
obje˘
,c⁄° *
°rög
,cJSON *
√wôem
);

123 
cJSON
 *
cJSON_Du∂iˇã
(cJSON *
ôem
,
ªcur£
);

129 
cJSON
 *
cJSON_P¨£WôhO±s
(c⁄° *
vÆue
,c⁄° **
ªtu∫_∑r£_íd
,
ªquúe_nuŒ_ãrmö©ed
);

131 
cJSON_Möify
(*
js⁄
);

134 
	#cJSON_AddNuŒToObje˘
(
obje˘
,
«me
Ë
	`cJSON_AddIãmToObje˘
(obje˘,Çame, 
	`cJSON_Cª©eNuŒ
())

	)

135 
	#cJSON_AddTrueToObje˘
(
obje˘
,
«me
Ë
	`cJSON_AddIãmToObje˘
(obje˘,Çame, 
	`cJSON_Cª©eTrue
())

	)

136 
	#cJSON_AddFÆ£ToObje˘
(
obje˘
,
«me
Ë
	`cJSON_AddIãmToObje˘
(obje˘,Çame, 
	`cJSON_Cª©eFÆ£
())

	)

137 
	#cJSON_AddBoﬁToObje˘
(
obje˘
,
«me
,
b
Ë
	`cJSON_AddIãmToObje˘
(obje˘,Çame, 
	`cJSON_Cª©eBoﬁ
(b))

	)

138 
	#cJSON_AddNumbîToObje˘
(
obje˘
,
«me
,
n
Ë
	`cJSON_AddIãmToObje˘
(obje˘,Çame, 
	`cJSON_Cª©eNumbî
“))

	)

139 
	#cJSON_AddSåögToObje˘
(
obje˘
,
«me
,
s
Ë
	`cJSON_AddIãmToObje˘
(obje˘,Çame, 
	`cJSON_Cª©eSåög
(s))

	)

142 
	#cJSON_SëI¡VÆue
(
obje˘
,
vÆ
Ë((obje˘)?(obje˘)->
vÆueöt
=(obje˘)->
vÆuedoubÀ
=(vÆ):(vÆ))

	)

143 
	#cJSON_SëNumbîVÆue
(
obje˘
,
vÆ
Ë((obje˘)?(obje˘)->
vÆueöt
=(obje˘)->
vÆuedoubÀ
=(vÆ):(vÆ))

	)

145 #ifde‡
__˝lu•lus


	@config/config.c

8 
	~<°dio.h
>

9 
	~<°rög.h
>

10 
	~<uni°d.h
>

11 
	~<°dlib.h
>

12 
	~<f˙é.h
>

13 
	~"cJSON.h
"

14 
	$maö
(){

15 
cJSON
 *
roŸ
 = 
	`cJSON_Cª©eObje˘
();

17 
	`cJSON_AddSåögToObje˘
(
roŸ
 ,"host" ,"127.0.0.1");

18 
	`cJSON_AddNumbîToObje˘
(
roŸ
 ,"port" ,1314);

19 *
out
 = 
	`cJSON_Pröt
(
roŸ
);

20 
	`cJSON_Dñëe
(
roŸ
);

21 
fd
 = 
	`›í
("c⁄fig.js⁄" ,
O_WRONLY
|
O_CREAT
,
S_IRUSR
|
S_IWUSR
);

22 if(
fd
 == -1){

23 
	`≥º‹
("open");

26 
	`wrôe
(
fd
 ,
out
 ,
	`°æí
(out));

27 
	`˛o£
(
fd
);

28 
	`‰ì
(
out
);

29 
	}
}

	@/usr/include/arpa/inet.h

18 #i‚de‡
_ARPA_INET_H


19 
	#_ARPA_INET_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<√töë/ö.h
>

25 #i‚de‡
__sockÀn_t_deföed


26 
__sockÀn_t
 
	tsockÀn_t
;

27 
	#__sockÀn_t_deföed


	)

30 
__BEGIN_DECLS


34 
ö_addr_t
 
	$öë_addr
 (c⁄° *
__˝
Ë
__THROW
;

37 
ö_addr_t
 
	$öë_ aof
 (
ö_addr
 
__ö
Ë
__THROW
;

41 
ö_addr
 
	$öë_makóddr
 (
ö_addr_t
 
__√t
, in_addr_à
__ho°
)

42 
__THROW
;

45 
ö_addr_t
 
	$öë_√tof
 (
ö_addr
 
__ö
Ë
__THROW
;

49 
ö_addr_t
 
	$öë_√tw‹k
 (c⁄° *
__˝
Ë
__THROW
;

53 *
	$öë_¡ﬂ
 (
ö_addr
 
__ö
Ë
__THROW
;

58 
	$öë_±⁄
 (
__af
, c⁄° *
__ª°ri˘
 
__˝
,

59 *
__ª°ri˘
 
__buf
Ë
__THROW
;

64 c⁄° *
	$öë_¡›
 (
__af
, c⁄° *
__ª°ri˘
 
__˝
,

65 *
__ª°ri˘
 
__buf
, 
sockÀn_t
 
__Àn
)

66 
__THROW
;

70 #ifde‡
__USE_MISC


73 
	$öë_©⁄
 (c⁄° *
__˝
, 
ö_addr
 *
__öp
Ë
__THROW
;

77 *
	$öë_√è
 (
ö_addr_t
 
__√t
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW


78 
	`__©åibuã_dïªˇãd_msg__
 ("Use inet_ntop instead");

83 *
	$öë_√t_¡›
 (
__af
, c⁄° *
__˝
, 
__bôs
,

84 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

89 
	$öë_√t_±⁄
 (
__af
, c⁄° *
__˝
,

90 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

95 
	$öë_nßp_addr
 (c⁄° *
__˝
,

96 *
__buf
, 
__Àn
Ë
__THROW
;

100 *
	$öë_nßp_¡ﬂ
 (
__Àn
, c⁄° *
__˝
,

101 *
__buf
Ë
__THROW
;

104 
__END_DECLS


	@/usr/include/assert.h

22 #ifdef 
_ASSERT_H


24 #unde‡
_ASSERT_H


25 #unde‡
as£π


26 #unde‡
__ASSERT_VOID_CAST


28 #ifdef 
__USE_GNU


29 #unde‡
as£π_≥º‹


34 
	#_ASSERT_H
 1

	)

35 
	~<„©uªs.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

38 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

40 
	#__ASSERT_VOID_CAST
 ()

	)

48 #ifdef 
NDEBUG


50 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

58 #ifdef 
__USE_GNU


59 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

64 #i‚de‡
_ASSERT_H_DECLS


65 
	#_ASSERT_H_DECLS


	)

66 
__BEGIN_DECLS


69 
	$__as£π_Áû
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
,

70 
__löe
, c⁄° *
__fun˘i⁄
)

71 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

74 
	$__as£π_≥º‹_Áû
 (
__î∫um
, c⁄° *
__fûe
,

75 
__löe
, c⁄° *
__fun˘i⁄
)

76 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

81 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

82 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

85 
__END_DECLS


91 #i‡
deföed
 
__˝lu•lus


92 
	#as£π
(
ex¥
) \

93 (
°©ic_ˇ°
 <
boﬁ
> (
ex¥
) \

95 : 
	`__as£π_Áû
 (#ex¥, 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

96 #ñi‡!
deföed
 
__GNUC__
 || deföed 
__STRICT_ANSI__


97 
	#as£π
(
ex¥
) \

98 ((
ex¥
) \

99 ? 
	`__ASSERT_VOID_CAST
 (0) \

100 : 
	`__as£π_Áû
 (#ex¥, 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

107 
	#as£π
(
ex¥
) \

108 ((Ë ((
ex¥
Ë? 1 : 0), 
	`__exãnsi⁄__
 ({ \

109 i‡(
ex¥
) \

112 
	`__as£π_Áû
 (#ex¥, 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
); \

113 
	}
}))

	)

116 #ifdef 
__USE_GNU


117 
	#as£π_≥º‹
(
î∫um
) \

118 (!(
î∫um
) \

119 ? 
	`__ASSERT_VOID_CAST
 (0) \

120 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

128 #i‡
deföed
 
__˝lu•lus
 ? 
__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

129 
	#__ASSERT_FUNCTION
 
__exãnsi⁄__
 
__PRETTY_FUNCTION__


	)

131 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

132 
	#__ASSERT_FUNCTION
 
__func__


	)

134 
	#__ASSERT_FUNCTION
 ((c⁄° *Ë0)

	)

141 #i‡
deföed
 
__USE_ISOC11
 && !deföed 
__˝lu•lus


142 #unde‡
°©ic_as£π


143 
	#°©ic_as£π
 
_Sètic_as£π


	)

	@/usr/include/ctype.h

22 #i‚def 
_CTYPE_H


23 
	#_CTYPE_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	g__BEGIN_DECLS


30 #i‚de‡
_ISbô


39 
	~<bôs/ídün.h
>

40 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


41 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

43 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

48 
	m_ISuµî
 = 
_ISbô
 (0),

49 
	m_ISlowî
 = 
_ISbô
 (1),

50 
	m_ISÆpha
 = 
_ISbô
 (2),

51 
	m_ISdigô
 = 
_ISbô
 (3),

52 
	m_ISxdigô
 = 
_ISbô
 (4),

53 
	m_IS•a˚
 = 
_ISbô
 (5),

54 
	m_IS¥öt
 = 
_ISbô
 (6),

55 
	m_ISgøph
 = 
_ISbô
 (7),

56 
	m_ISbœnk
 = 
_ISbô
 (8),

57 
	m_IS˙ål
 = 
_ISbô
 (9),

58 
	m_ISpun˘
 = 
_ISbô
 (10),

59 
	m_ISÆnum
 = 
_ISbô
 (11)

79 c⁄° **
	$__˘y≥_b_loc
 ()

80 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

81 c⁄° 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

83 c⁄° 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

87 #i‚de‡
__˝lu•lus


88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

90 #ñi‡
deföed
 
__USE_EXTERN_INLINES


91 
	#__is˘y≥_f
(
ty≥
) \

92 
__exã∫_ölöe
 \

93 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

95  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

96 
	}

	)
}

99 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

100 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

102 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

108 
__ex˘y≥
 (
iß um
);

109 
__ex˘y≥
 (
ißÕha
);

110 
__ex˘y≥
 (
is˙ål
);

111 
__ex˘y≥
 (
isdigô
);

112 
__ex˘y≥
 (
i¶owî
);

113 
__ex˘y≥
 (
isgøph
);

114 
__ex˘y≥
 (
i•röt
);

115 
__ex˘y≥
 (
i•un˘
);

116 
__ex˘y≥
 (
is•a˚
);

117 
__ex˘y≥
 (
isuµî
);

118 
__ex˘y≥
 (
isxdigô
);

122 
	$tﬁowî
 (
__c
Ë
__THROW
;

125 
	$touµî
 (
__c
Ë
__THROW
;

129 #ifdef 
__USE_ISOC99


130 
	`__ex˘y≥
 (
isbœnk
);

133 #ifde‡
__USE_GNU


135 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

138 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


142 
	$ißscii
 (
__c
Ë
__THROW
;

146 
	$tﬂscii
 (
__c
Ë
__THROW
;

150 
	`__ex˘y≥
 (
_touµî
);

151 
	`__ex˘y≥
 (
_tﬁowî
);

155 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

156 (
__exãnsi⁄__
 \

157 ({ 
__ªs
; \

158 i‡( (
c
) > 1) \

160 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

162 
__c
 = (
c
); \

163 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

166 
__ªs
 = 
f
 
¨gs
; \

169 
__ªs
 = (
a
)[(Ë(
c
)]; \

170 
__ªs
; 
	}
}))

	)

172 #i‡!
deföed
 
__NO_CTYPE


173 #ifde‡
__is˘y≥_f


174 
	$__is˘y≥_f
 (
Ænum
)

175 
	$__is˘y≥_f
 (
Æpha
)

176 
	$__is˘y≥_f
 (
˙ål
)

177 
	$__is˘y≥_f
 (
digô
)

178 
	$__is˘y≥_f
 (
lowî
)

179 
	$__is˘y≥_f
 (
gøph
)

180 
	$__is˘y≥_f
 (
¥öt
)

181 
	$__is˘y≥_f
 (
pun˘
)

182 
	$__is˘y≥_f
 (
•a˚
)

183 
	$__is˘y≥_f
 (
uµî
)

184 
	$__is˘y≥_f
 (
xdigô
)

185 #ifde‡
__USE_ISOC99


186 
	$__is˘y≥_f
 (
bœnk
)

188 #ñi‡
deföed
 
__is˘y≥


189 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

190 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

191 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

192 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

193 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

194 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

195 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

196 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

197 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

198 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

199 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

200 #ifde‡
__USE_ISOC99


201 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

205 #ifde‡
__USE_EXTERN_INLINES


206 
__exã∫_ölöe
 

207 
	`__NTH
 (
	$tﬁowî
 (
__c
))

209  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

210 
	}
}

212 
__exã∫_ölöe
 

213 
__NTH
 (
	$touµî
 (
__c
))

215  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

216 
	}
}

219 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


220 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

221 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

224 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


225 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

226 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

228 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

229 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

235 #ifde‡
__USE_XOPEN2K8


237 
	~<bôs/ty≥s/loˇÀ_t.h
>

241 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

242 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

244 
	#__ex˘y≥_l
(
«me
) \

245 
	`«me
 (, 
loˇÀ_t
Ë
__THROW


	)

251 
__ex˘y≥_l
 (
iß um_l
);

252 
__ex˘y≥_l
 (
ißÕha_l
);

253 
__ex˘y≥_l
 (
is˙ål_l
);

254 
__ex˘y≥_l
 (
isdigô_l
);

255 
__ex˘y≥_l
 (
i¶owî_l
);

256 
__ex˘y≥_l
 (
isgøph_l
);

257 
__ex˘y≥_l
 (
i•röt_l
);

258 
__ex˘y≥_l
 (
i•un˘_l
);

259 
__ex˘y≥_l
 (
is•a˚_l
);

260 
__ex˘y≥_l
 (
isuµî_l
);

261 
__ex˘y≥_l
 (
isxdigô_l
);

263 
__ex˘y≥_l
 (
isbœnk_l
);

267 
	$__tﬁowî_l
 (
__c
, 
loˇÀ_t
 
__l
Ë
__THROW
;

268 
	$tﬁowî_l
 (
__c
, 
loˇÀ_t
 
__l
Ë
__THROW
;

271 
	$__touµî_l
 (
__c
, 
loˇÀ_t
 
__l
Ë
__THROW
;

272 
	$touµî_l
 (
__c
, 
loˇÀ_t
 
__l
Ë
__THROW
;

274 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


275 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

276 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

277 
	#__touµî_l
(
c
, 
loˇÀ
) \

278 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

279 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

280 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

284 #i‚de‡
__NO_CTYPE


285 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

286 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

287 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

288 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

289 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

290 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

291 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

292 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

293 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

294 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

295 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

297 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

299 #ifde‡
__USE_MISC


300 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

301 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

304 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

305 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

306 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

307 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

308 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

309 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

310 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

311 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

312 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

313 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

314 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

316 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

318 #ifde‡
__USE_MISC


319 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

320 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

327 
__END_DECLS


	@/usr/include/fcntl.h

22 #i‚def 
_FCNTL_H


23 
	#_FCNTL_H
 1

	)

25 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

35 
	~<bôs/f˙é.h
>

39 #ifde‡
__O_TMPFILE


40 
	#__OPEN_NEEDS_MODE
(
oÊag
) \

41 (((
oÊag
Ë& 
O_CREAT
Ë!0 || ((oÊagË& 
__O_TMPFILE
Ë=__O_TMPFILE)

	)

43 
	#__OPEN_NEEDS_MODE
(
oÊag
Ë(((oÊagË& 
O_CREAT
Ë!0)

	)

49 #i‚de‡
__mode_t_deföed


50 
__mode_t
 
	tmode_t
;

51 
	#__mode_t_deföed


	)

54 #i‚de‡
__off_t_deföed


55 #i‚de‡
__USE_FILE_OFFSET64


56 
__off_t
 
	toff_t
;

58 
__off64_t
 
	toff_t
;

60 
	#__off_t_deföed


	)

63 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


64 
__off64_t
 
	toff64_t
;

65 
	#__off64_t_deföed


	)

68 #i‚de‡
__pid_t_deföed


69 
__pid_t
 
	tpid_t
;

70 
	#__pid_t_deföed


	)

74 #ifde‡
__USE_XOPEN2K8


75 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

77 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


78 
	~<bôs/°©.h
>

80 
	#S_IFMT
 
__S_IFMT


	)

81 
	#S_IFDIR
 
__S_IFDIR


	)

82 
	#S_IFCHR
 
__S_IFCHR


	)

83 
	#S_IFBLK
 
__S_IFBLK


	)

84 
	#S_IFREG
 
__S_IFREG


	)

85 #ifde‡
__S_IFIFO


86 
	#S_IFIFO
 
__S_IFIFO


	)

88 #ifde‡
__S_IFLNK


89 
	#S_IFLNK
 
__S_IFLNK


	)

91 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
Ë&& deföed 
__S_IFSOCK


92 
	#S_IFSOCK
 
__S_IFSOCK


	)

97 
	#S_ISUID
 
__S_ISUID


	)

98 
	#S_ISGID
 
__S_ISGID


	)

100 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


102 
	#S_ISVTX
 
__S_ISVTX


	)

105 
	#S_IRUSR
 
__S_IREAD


	)

106 
	#S_IWUSR
 
__S_IWRITE


	)

107 
	#S_IXUSR
 
__S_IEXEC


	)

109 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

111 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

112 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

113 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

115 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

117 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

118 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

119 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

121 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

124 #ifdef 
__USE_MISC


125 #i‚de‡
R_OK


128 
	#R_OK
 4

	)

129 
	#W_OK
 2

	)

130 
	#X_OK
 1

	)

131 
	#F_OK
 0

	)

136 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


137 
	#SEEK_SET
 0

	)

138 
	#SEEK_CUR
 1

	)

139 
	#SEEK_END
 2

	)

147 #i‚de‡
__USE_TIME_BITS64


148 #i‚de‡
__USE_FILE_OFFSET64


149 
f˙é
 (
__fd
, 
__cmd
, ...);

151 #ifde‡
__REDIRECT


152 
__REDIRECT
 (
f˙é
, (
__fd
, 
__cmd
, ...), 
f˙é64
);

154 
	#f˙é
 
f˙é64


	)

157 #ifde‡
__USE_LARGEFILE64


158 
f˙é64
 (
__fd
, 
__cmd
, ...);

161 #ifde‡
__REDIRECT


162 
__REDIRECT_NTH
 (
f˙é
, (
__fd
, 
__ªque°
, ...),

163 
__f˙é_time64
);

164 
__REDIRECT_NTH
 (
f˙é64
, (
__fd
, 
__ªque°
, ...),

165 
__f˙é_time64
);

167 
	$__f˙é_time64
 (
__fd
, 
__ªque°
, ...Ë
__THROW
;

168 
	#f˙é64
 
__f˙é_time64


	)

169 
	#f˙é
 
__f˙é_time64


	)

180 #i‚de‡
__USE_FILE_OFFSET64


181 
	$›í
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

183 #ifde‡
__REDIRECT


184 
	`__REDIRECT
 (
›í
, (c⁄° *
__fûe
, 
__oÊag
, ...), 
›í64
)

185 
	`__n⁄nuŒ
 ((1));

187 
	#›í
 
›í64


	)

190 #ifde‡
__USE_LARGEFILE64


191 
	$›í64
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

194 #ifde‡
__USE_ATFILE


204 #i‚de‡
__USE_FILE_OFFSET64


205 
	$›í©
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

206 
	`__n⁄nuŒ
 ((2));

208 #ifde‡
__REDIRECT


209 
	`__REDIRECT
 (
›í©
, (
__fd
, c⁄° *
__fûe
, 
__oÊag
,

210 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

212 
	#›í©
 
›í©64


	)

215 #ifde‡
__USE_LARGEFILE64


216 
	$›í©64
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

217 
	`__n⁄nuŒ
 ((2));

226 #i‚de‡
__USE_FILE_OFFSET64


227 
	$¸ót
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

229 #ifde‡
__REDIRECT


230 
	`__REDIRECT
 (
¸ót
, (c⁄° *
__fûe
, 
mode_t
 
__mode
),

231 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

233 
	#¸ót
 
¸ót64


	)

236 #ifde‡
__USE_LARGEFILE64


237 
	$¸ót64
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

240 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

241 && !
deföed
 
__USE_POSIX
))

250 
	#F_ULOCK
 0

	)

251 
	#F_LOCK
 1

	)

252 
	#F_TLOCK
 2

	)

253 
	#F_TEST
 3

	)

255 #i‚de‡
__USE_FILE_OFFSET64


256 
	`lockf
 (
__fd
, 
__cmd
, 
off_t
 
__Àn
);

258 #ifde‡
__REDIRECT


259 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

261 
	#lockf
 
lockf64


	)

264 #ifde‡
__USE_LARGEFILE64


265 
	`lockf64
 (
__fd
, 
__cmd
, 
off64_t
 
__Àn
);

269 #ifde‡
__USE_XOPEN2K


272 #i‚de‡
__USE_FILE_OFFSET64


273 
	$posix_Ádvi£
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
,

274 
__advi£
Ë
__THROW
;

276 #ifde‡
__REDIRECT_NTH


277 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

278 
__off64_t
 
__Àn
, 
__advi£
),

279 
posix_Ádvi£64
);

281 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

284 #ifde‡
__USE_LARGEFILE64


285 
	$posix_Ádvi£64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
,

286 
__advi£
Ë
__THROW
;

294 #i‚de‡
__USE_FILE_OFFSET64


295 
	`posix_ÁŒoˇã
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
);

297 #ifde‡
__REDIRECT


298 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

299 
__off64_t
 
__Àn
),

300 
posix_ÁŒoˇã64
);

302 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

305 #ifde‡
__USE_LARGEFILE64


306 
	`posix_ÁŒoˇã64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
);

312 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
 \

313 && 
deföed
 
__va_¨g_∑ck_Àn


314 
	~<bôs/f˙é2.h
>

317 
__END_DECLS


	@/usr/include/libgen.h

18 #i‚de‡
_LIBGEN_H


19 
	#_LIBGEN_H
 1

	)

21 
	~<„©uªs.h
>

23 
__BEGIN_DECLS


26 *
	$dú«me
 (*
__∑th
Ë
__THROW
;

34 *
	$__xpg_ba£«me
 (*
__∑th
Ë
__THROW
;

35 
	#ba£«me
 
__xpg_ba£«me


	)

37 
__END_DECLS


	@/usr/include/limits.h

22 #i‚de‡
_LIBC_LIMITS_H_


23 
	#_LIBC_LIMITS_H_
 1

	)

25 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

26 
	~<bôs/libc-hódî-°¨t.h
>

32 
	#MB_LEN_MAX
 16

	)

37 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

42 #i‚de‡
_LIMITS_H


43 
	#_LIMITS_H
 1

	)

45 
	~<bôs/w‹dsize.h
>

54 
	#CHAR_BIT
 8

	)

57 
	#SCHAR_MIN
 (-128)

	)

58 
	#SCHAR_MAX
 127

	)

61 
	#UCHAR_MAX
 255

	)

64 #ifde‡
__CHAR_UNSIGNED__


65 
	#CHAR_MIN
 0

	)

66 
	#CHAR_MAX
 
UCHAR_MAX


	)

68 
	#CHAR_MIN
 
SCHAR_MIN


	)

69 
	#CHAR_MAX
 
SCHAR_MAX


	)

73 
	#SHRT_MIN
 (-32768)

	)

74 
	#SHRT_MAX
 32767

	)

77 
	#USHRT_MAX
 65535

	)

80 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

81 
	#INT_MAX
 2147483647

	)

84 
	#UINT_MAX
 4294967295U

	)

87 #i‡
__WORDSIZE
 == 64

88 
	#LONG_MAX
 9223372036854775807L

	)

90 
	#LONG_MAX
 2147483647L

	)

92 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

95 #i‡
__WORDSIZE
 == 64

96 
	#ULONG_MAX
 18446744073709551615UL

	)

98 
	#ULONG_MAX
 4294967295UL

	)

101 #ifde‡
__USE_ISOC99


104 
	#LLONG_MAX
 9223372036854775807LL

	)

105 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

108 
	#ULLONG_MAX
 18446744073709551615ULL

	)

122 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


124 #ö˛ude_√xà<
limôs
.
h
>

130 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


131 #i‚de‡
LLONG_MIN


132 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

134 #i‚de‡
LLONG_MAX


135 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

137 #i‚de‡
ULLONG_MAX


138 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

145 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

146 #i‚de‡
CHAR_WIDTH


147 
	#CHAR_WIDTH
 8

	)

149 #i‚de‡
SCHAR_WIDTH


150 
	#SCHAR_WIDTH
 8

	)

152 #i‚de‡
UCHAR_WIDTH


153 
	#UCHAR_WIDTH
 8

	)

155 #i‚de‡
SHRT_WIDTH


156 
	#SHRT_WIDTH
 16

	)

158 #i‚de‡
USHRT_WIDTH


159 
	#USHRT_WIDTH
 16

	)

161 #i‚de‡
INT_WIDTH


162 
	#INT_WIDTH
 32

	)

164 #i‚de‡
UINT_WIDTH


165 
	#UINT_WIDTH
 32

	)

167 #i‚de‡
LONG_WIDTH


168 
	#LONG_WIDTH
 
__WORDSIZE


	)

170 #i‚de‡
ULONG_WIDTH


171 
	#ULONG_WIDTH
 
__WORDSIZE


	)

173 #i‚de‡
LLONG_WIDTH


174 
	#LLONG_WIDTH
 64

	)

176 #i‚de‡
ULLONG_WIDTH


177 
	#ULLONG_WIDTH
 64

	)

184 #i‡
__GLIBC_USE
 (
ISOC2X
)

185 #i‚de‡
BOOL_MAX


186 
	#BOOL_MAX
 1

	)

188 #i‚de‡
BOOL_WIDTH


189 
	#BOOL_WIDTH
 1

	)

193 #ifdef 
__USE_POSIX


195 
	~<bôs/posix1_lim.h
>

198 #ifdef 
__USE_POSIX2


199 
	~<bôs/posix2_lim.h
>

202 #ifdef 
__USE_XOPEN


203 
	~<bôs/x›í_lim.h
>

	@/usr/include/linux/socket.h

2 #i‚de‡
_LINUX_SOCKET_H


3 
	#_LINUX_SOCKET_H


	)

8 
	#_K_SS_MAXSIZE
 128

	)

10 
	t__kî√l_ß_Ámûy_t
;

16 
	s__kî√l_sockaddr_°‹age
 {

19 
__kî√l_ß_Ámûy_t
 
	mss_Ámûy
;

21 
	m__d©a
[
_K_SS_MAXSIZE
 - ()];

25 *
	m__Æign
;

29 
	#SOCK_SNDBUF_LOCK
 1

	)

30 
	#SOCK_RCVBUF_LOCK
 2

	)

32 
	#SOCK_BUF_LOCK_MASK
 (
SOCK_SNDBUF_LOCK
 | 
SOCK_RCVBUF_LOCK
)

	)

	@/usr/include/math.h

23 #i‚def 
_MATH_H


24 
	#_MATH_H
 1

	)

26 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

27 
	~<bôs/libc-hódî-°¨t.h
>

29 #i‡
deföed
 
log
 && deföed 
__GNUC__


30 #w¨nög 
A
 
ma¸o
 
ˇŒed
 
log
 
was
 
Æªady
 
deföed
 
whí
 <
m©h
.
h
> wa†
ö˛uded
.

31 #w¨nög 
This
 
wûl
 
ˇu£
 
compû©i⁄
 
¥obÀms
.

34 
	g__BEGIN_DECLS


37 
	~<bôs/ty≥s.h
>

40 
	~<bôs/m©h-ve˘‹.h
>

43 
	~<bôs/Êﬂä.h
>

47 #i‡
__GNUC_PREREQ
 (3, 3)

48 
	#HUGE_VAL
 (
	`__buûtö_huge_vÆ
 ())

	)

55 
	#HUGE_VAL
 1e10000

	)

57 #ifde‡
__USE_ISOC99


58 #i‡
__GNUC_PREREQ
 (3, 3)

59 
	#HUGE_VALF
 (
	`__buûtö_huge_vÆf
 ())

	)

60 
	#HUGE_VALL
 (
	`__buûtö_huge_vÆl
 ())

	)

62 
	#HUGE_VALF
 1e10000f

	)

63 
	#HUGE_VALL
 1e10000L

	)

66 #i‡
__HAVE_FLOAT16
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

67 
	#HUGE_VAL_F16
 (
	`__buûtö_huge_vÆf16
 ())

	)

69 #i‡
__HAVE_FLOAT32
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

70 
	#HUGE_VAL_F32
 (
	`__buûtö_huge_vÆf32
 ())

	)

72 #i‡
__HAVE_FLOAT64
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

73 
	#HUGE_VAL_F64
 (
	`__buûtö_huge_vÆf64
 ())

	)

75 #i‡
__HAVE_FLOAT128
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

76 
	#HUGE_VAL_F128
 (
	`__buûtö_huge_vÆf128
 ())

	)

78 #i‡
__HAVE_FLOAT32X
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

79 
	#HUGE_VAL_F32X
 (
	`__buûtö_huge_vÆf32x
 ())

	)

81 #i‡
__HAVE_FLOAT64X
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

82 
	#HUGE_VAL_F64X
 (
	`__buûtö_huge_vÆf64x
 ())

	)

84 #i‡
__HAVE_FLOAT128X
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

85 
	#HUGE_VAL_F128X
 (
	`__buûtö_huge_vÆf128x
 ())

	)

88 #ifde‡
__USE_ISOC99


90 #i‡
__GNUC_PREREQ
 (3, 3)

91 
	#INFINITY
 (
	`__buûtö_öff
 ())

	)

93 
	#INFINITY
 
HUGE_VALF


	)

97 #i‡
__GNUC_PREREQ
 (3, 3)

98 
	#NAN
 (
	`__buûtö_«nf
 (""))

	)

103 
	#NAN
 (0.0‡/ 0.0f)

	)

107 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT
)

109 #i‡
__GNUC_PREREQ
 (3, 3)

110 
	#SNANF
 (
	`__buûtö_«nsf
 (""))

	)

111 
	#SNAN
 (
	`__buûtö_«ns
 (""))

	)

112 
	#SNANL
 (
	`__buûtö_«n¶
 (""))

	)

115 #i‡(
__HAVE_FLOAT16
 \

116 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
) \

117 && (
deföed
 
	g__USE_GNU
 || !
	$__GLIBC_USE
 (
ISOC2X
)))

118 
	#SNANF16
 (
	`__buûtö_«nsf16
 (""))

	)

120 #i‡(
__HAVE_FLOAT32
 \

121 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
) \

122 && (
deföed
 
__USE_GNU
 || !
	$__GLIBC_USE
 (
ISOC2X
)))

123 
	#SNANF32
 (
	`__buûtö_«nsf32
 (""))

	)

125 #i‡(
__HAVE_FLOAT64
 \

126 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
) \

127 && (
deföed
 
__USE_GNU
 || !
	$__GLIBC_USE
 (
ISOC2X
)))

128 
	#SNANF64
 (
	`__buûtö_«nsf64
 (""))

	)

130 #i‡(
__HAVE_FLOAT128
 \

131 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
) \

132 && (
deföed
 
__USE_GNU
 || !
	$__GLIBC_USE
 (
ISOC2X
)))

133 
	#SNANF128
 (
	`__buûtö_«nsf128
 (""))

	)

135 #i‡(
__HAVE_FLOAT32X
 \

136 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
) \

137 && (
deföed
 
__USE_GNU
 || !
	$__GLIBC_USE
 (
ISOC2X
)))

138 
	#SNANF32X
 (
	`__buûtö_«nsf32x
 (""))

	)

140 #i‡(
__HAVE_FLOAT64X
 \

141 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
) \

142 && (
deföed
 
__USE_GNU
 || !
	$__GLIBC_USE
 (
ISOC2X
)))

143 
	#SNANF64X
 (
	`__buûtö_«nsf64x
 (""))

	)

145 #i‡(
__HAVE_FLOAT128X
 \

146 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
) \

147 && (
deföed
 
__USE_GNU
 || !
	$__GLIBC_USE
 (
ISOC2X
)))

148 
	#SNANF128X
 (
	`__buûtö_«nsf128x
 (""))

	)

152 
	~<bôs/Êt-evÆ-mëhod.h
>

154 #ifde‡
__USE_ISOC99


162 #i‡
__GLIBC_FLT_EVAL_METHOD
 == 0 || __GLIBC_FLT_EVAL_METHOD == 16

163 
	tÊﬂt_t
;

164 
	tdoubÀ_t
;

165 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 1

166 
	tÊﬂt_t
;

167 
	tdoubÀ_t
;

168 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 2

169 
	tÊﬂt_t
;

170 
	tdoubÀ_t
;

171 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 32

172 
_Flﬂt32
 
	tÊﬂt_t
;

173 
	tdoubÀ_t
;

174 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 33

175 
_Flﬂt32x
 
	tÊﬂt_t
;

176 
_Flﬂt32x
 
	tdoubÀ_t
;

177 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 64

178 
_Flﬂt64
 
	tÊﬂt_t
;

179 
_Flﬂt64
 
	tdoubÀ_t
;

180 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 65

181 
_Flﬂt64x
 
	tÊﬂt_t
;

182 
_Flﬂt64x
 
	tdoubÀ_t
;

183 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 128

184 
_Flﬂt128
 
	tÊﬂt_t
;

185 
_Flﬂt128
 
	tdoubÀ_t
;

186 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 129

187 
_Flﬂt128x
 
	tÊﬂt_t
;

188 
_Flﬂt128x
 
	tdoubÀ_t
;

204 
	~<bôs/Â-logb.h
>

205 #ifde‡
__USE_ISOC99


206 #i‡
__FP_LOGB0_IS_MIN


207 
	#FP_ILOGB0
 (-2147483647 - 1)

	)

209 
	#FP_ILOGB0
 (-2147483647)

	)

211 #i‡
__FP_LOGBNAN_IS_MIN


212 
	#FP_ILOGBNAN
 (-2147483647 - 1)

	)

214 
	#FP_ILOGBNAN
 2147483647

	)

217 #i‡
	`__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

218 #i‡
__WORDSIZE
 == 32

219 
	#__FP_LONG_MAX
 0x7fffffffL

	)

221 
	#__FP_LONG_MAX
 0x7fffffffffffffffL

	)

223 #i‡
__FP_LOGB0_IS_MIN


224 
	#FP_LLOGB0
 (-
__FP_LONG_MAX
 - 1)

	)

226 
	#FP_LLOGB0
 (-
__FP_LONG_MAX
)

	)

228 #i‡
__FP_LOGBNAN_IS_MIN


229 
	#FP_LLOGBNAN
 (-
__FP_LONG_MAX
 - 1)

	)

231 
	#FP_LLOGBNAN
 
__FP_LONG_MAX


	)

247 
	~<bôs/Â-Á°.h
>

249 #i‡
	`__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

253 
FP_INT_UPWARD
 =

254 
	#FP_INT_UPWARD
 0

	)

255 
FP_INT_UPWARD
,

256 
FP_INT_DOWNWARD
 =

257 
	#FP_INT_DOWNWARD
 1

	)

258 
FP_INT_DOWNWARD
,

259 
FP_INT_TOWARDZERO
 =

260 
	#FP_INT_TOWARDZERO
 2

	)

261 
FP_INT_TOWARDZERO
,

262 
FP_INT_TONEARESTFROMZERO
 =

263 
	#FP_INT_TONEARESTFROMZERO
 3

	)

264 
FP_INT_TONEARESTFROMZERO
,

265 
FP_INT_TONEAREST
 =

266 
	#FP_INT_TONEAREST
 4

	)

267 
FP_INT_TONEAREST
,

276 
	#__SIMD_DECL
(
fun˘i⁄
Ë
	`__CONCAT
 (
__DECL_SIMD_
, fun˘i⁄)

	)

278 
	#__MATHCALL_VEC
(
fun˘i⁄
, 
suffix
, 
¨gs
) \

279 
	`__SIMD_DECL
 (
	`__MATH_PRECNAME
 (
fun˘i⁄
, 
suffix
)) \

280 
	`__MATHCALL
 (
fun˘i⁄
, 
suffix
, 
¨gs
)

	)

282 
	#__MATHDECL_VEC
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

283 
	`__SIMD_DECL
 (
	`__MATH_PRECNAME
 (
fun˘i⁄
, 
suffix
)) \

284 
	`__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
)

	)

286 
	#__MATHCALL
(
fun˘i⁄
,
suffix
, 
¨gs
) \

287 
	`__MATHDECL
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
)

	)

288 
	#__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

289 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
); \

290 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
)

	)

291 
	#__MATHCALLX
(
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

292 
	`__MATHDECLX
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
)

	)

293 
	#__MATHDECLX
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

294 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
); \

295 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
)

	)

296 
	#__MATHDECL_1_IMPL
(
ty≥
, 
fun˘i⁄
, 
suffix
, 
¨gs
) \

297 
ty≥
 
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
Ë
¨gs
 
__THROW


	)

298 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
, 
suffix
, 
¨gs
) \

299 
	`__MATHDECL_1_IMPL
(
ty≥
, 
fun˘i⁄
, 
suffix
, 
¨gs
)

	)

302 
	#__MATHDECL_ALIAS
(
ty≥
, 
fun˘i⁄
, 
suffix
, 
¨gs
, 
Æüs
) \

303 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
, 
suffix
, 
¨gs
)

	)

305 
	#__MATHREDIR
(
ty≥
, 
fun˘i⁄
, 
suffix
, 
¨gs
, 
to
) \

306 
ty≥
 
	`__REDIRECT_NTH
 (
	`__MATH_PRECNAME
 (
fun˘i⁄
, 
suffix
), 
¨gs
, 
to
)

	)

308 
	#_MdoubÀ_
 

	)

309 
	#__MATH_PRECNAME
(
«me
,
r
Ë
	`__CONCAT
“ame,r)

	)

310 
	#__MATH_DECLARING_DOUBLE
 1

	)

311 
	#__MATH_DECLARING_FLOATN
 0

	)

312 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

313 
	~<bôs/m©hˇŒs.h
>

314 #unde‡
_MdoubÀ_


315 #unde‡
__MATH_PRECNAME


316 #unde‡
__MATH_DECLARING_DOUBLE


317 #unde‡
__MATH_DECLARING_FLOATN


319 #ifde‡
__USE_ISOC99


325 
	#_MdoubÀ_
 

	)

326 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f
##
	)
r

327 
	#__MATH_DECLARING_DOUBLE
 0

	)

328 
	#__MATH_DECLARING_FLOATN
 0

	)

329 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

330 
	~<bôs/m©hˇŒs.h
>

331 #unde‡
_MdoubÀ_


332 #unde‡
__MATH_PRECNAME


333 #unde‡
__MATH_DECLARING_DOUBLE


334 #unde‡
__MATH_DECLARING_FLOATN


336 #i‡!(
deföed
 
__NO_LONG_DOUBLE_MATH
 && deföed 
_LIBC
) \

337 || 
deföed
 
__LDBL_COMPAT
 \

338 || 
deföed
 
_LIBC_TEST


339 #ifde‡
__LDBL_COMPAT


341 #ifde‡
__USE_ISOC99


342 
	$__∆dbl_√xâow¨df
 (
__x
, 
__y
)

343 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

344 #ifde‡
__REDIRECT_NTH


345 
	`__REDIRECT_NTH
 (
√xâow¨df
, (
__x
, 
__y
),

346 
__∆dbl_√xâow¨df
)

347 
	`__©åibuã__
 ((
__c⁄°__
));

348 
	`__REDIRECT_NTH
 (
√xâow¨d
, (
__x
, 
__y
),

349 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

350 
	`__REDIRECT_NTH
 (
√xâow¨dl
,

351 (
__x
, 
__y
),

352 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

356 #unde‡
__MATHDECL_1


357 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

358 
	`__MATHREDIR
(
ty≥
, 
fun˘i⁄
, 
suffix
, 
¨gs
, 
	`__CONCAT
(fun˘i⁄,suffix))

	)

360 #ñi‡
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 1

361 #ifde‡
__REDIRECT_NTH


362 #ifde‡
__USE_ISOC99


363 
	`__REDIRECT_NTH
 (
√xâow¨df
, (
__x
, 
__y
),

364 
__√xâow¨df_to_õì128
)

365 
	`__©åibuã__
 ((
__c⁄°__
));

366 
	`__REDIRECT_NTH
 (
√xâow¨d
, (
__x
, 
__y
),

367 
__√xâow¨d_to_õì128
)

368 
	`__©åibuã__
 ((
__c⁄°__
));

370 
	#__dªmõì128
 
__ªmaödîõì128


	)

371 
	#__gammaõì128
 
__lgammaõì128


	)

376 #unde‡
__MATHDECL_1


377 #unde‡
__MATHDECL_ALIAS


379 
	#__REDIRTO
(
fun˘i⁄
, 
suffix
) \

380 
__
 ## 
fun˘i⁄
 ## 
õì128
 ## 
suffix


	)

381 
	#__REDIRTO_ALT
(
fun˘i⁄
, 
suffix
) \

382 
__
 ## 
fun˘i⁄
 ## 
f128
 ## 
suffix


	)

384 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
, 
suffix
, 
¨gs
) \

385 
	`__MATHREDIR
 (
ty≥
, 
fun˘i⁄
, 
suffix
, 
¨gs
, 
	`__REDIRTO
 (fun˘i⁄, suffix))

	)

386 
	#__MATHDECL_ALIAS
(
ty≥
, 
fun˘i⁄
, 
suffix
, 
¨gs
, 
Æüs
) \

387 
	`__MATHREDIR
 (
ty≥
, 
fun˘i⁄
, 
suffix
, 
¨gs
, 
	`__REDIRTO_ALT
 (
Æüs
, suffix))

	)

393 
	#_MdoubÀ_
 

	)

394 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
l
##
	)
r

395 
	#__MATH_DECLARING_DOUBLE
 0

	)

396 
	#__MATH_DECLARING_FLOATN
 0

	)

397 
	#__MATH_DECLARE_LDOUBLE
 1

	)

398 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

399 
	~<bôs/m©hˇŒs.h
>

401 #unde‡
_MdoubÀ_


402 #unde‡
__MATH_PRECNAME


403 #unde‡
__MATH_DECLARING_DOUBLE


404 #unde‡
__MATH_DECLARING_FLOATN


406 #i‡
deföed
 
__LDBL_COMPAT
 \

407 || 
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 1

408 #unde‡
__REDIRTO


409 #unde‡
__REDIRTO_ALT


410 #unde‡
__MATHDECL_1


411 #unde‡
__MATHDECL_ALIAS


412 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
, 
suffix
, 
¨gs
) \

413 
	`__MATHDECL_1_IMPL
(
ty≥
, 
fun˘i⁄
, 
suffix
, 
¨gs
)

	)

414 
	#__MATHDECL_ALIAS
(
ty≥
, 
fun˘i⁄
, 
suffix
, 
¨gs
, 
Æüs
) \

415 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
, 
suffix
, 
¨gs
)

	)

424 #i‡
__HAVE_DISTINCT_FLOAT16
 || (
__HAVE_FLOAT16
 && !
deföed
 
_LIBC
)

425 
	#_MdoubÀ_
 
_Flﬂt16


	)

426 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f16
##
	)
r

427 
	#__MATH_DECLARING_DOUBLE
 0

	)

428 
	#__MATH_DECLARING_FLOATN
 1

	)

429 #i‡
__HAVE_DISTINCT_FLOAT16


430 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

432 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

433 
	~<bôs/m©hˇŒs.h
>

435 #unde‡
_MdoubÀ_


436 #unde‡
__MATH_PRECNAME


437 #unde‡
__MATH_DECLARING_DOUBLE


438 #unde‡
__MATH_DECLARING_FLOATN


441 #i‡
__HAVE_DISTINCT_FLOAT32
 || (
__HAVE_FLOAT32
 && !
deföed
 
_LIBC
)

442 
	#_MdoubÀ_
 
_Flﬂt32


	)

443 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f32
##
	)
r

444 
	#__MATH_DECLARING_DOUBLE
 0

	)

445 
	#__MATH_DECLARING_FLOATN
 1

	)

446 #i‡
__HAVE_DISTINCT_FLOAT32


447 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

449 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

450 
	~<bôs/m©hˇŒs.h
>

452 #unde‡
_MdoubÀ_


453 #unde‡
__MATH_PRECNAME


454 #unde‡
__MATH_DECLARING_DOUBLE


455 #unde‡
__MATH_DECLARING_FLOATN


458 #i‡
__HAVE_DISTINCT_FLOAT64
 || (
__HAVE_FLOAT64
 && !
deföed
 
_LIBC
)

459 
	#_MdoubÀ_
 
_Flﬂt64


	)

460 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f64
##
	)
r

461 
	#__MATH_DECLARING_DOUBLE
 0

	)

462 
	#__MATH_DECLARING_FLOATN
 1

	)

463 #i‡
__HAVE_DISTINCT_FLOAT64


464 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

466 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

467 
	~<bôs/m©hˇŒs.h
>

469 #unde‡
_MdoubÀ_


470 #unde‡
__MATH_PRECNAME


471 #unde‡
__MATH_DECLARING_DOUBLE


472 #unde‡
__MATH_DECLARING_FLOATN


475 #i‡
__HAVE_DISTINCT_FLOAT128
 || (
__HAVE_FLOAT128
 && !
deföed
 
_LIBC
)

476 
	#_MdoubÀ_
 
_Flﬂt128


	)

477 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f128
##
	)
r

478 
	#__MATH_DECLARING_DOUBLE
 0

	)

479 
	#__MATH_DECLARING_FLOATN
 1

	)

480 #i‡
__HAVE_DISTINCT_FLOAT128


481 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

483 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

484 
	~<bôs/m©hˇŒs.h
>

486 #unde‡
_MdoubÀ_


487 #unde‡
__MATH_PRECNAME


488 #unde‡
__MATH_DECLARING_DOUBLE


489 #unde‡
__MATH_DECLARING_FLOATN


492 #i‡
__HAVE_DISTINCT_FLOAT32X
 || (
__HAVE_FLOAT32X
 && !
deföed
 
_LIBC
)

493 
	#_MdoubÀ_
 
_Flﬂt32x


	)

494 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f32x
##
	)
r

495 
	#__MATH_DECLARING_DOUBLE
 0

	)

496 
	#__MATH_DECLARING_FLOATN
 1

	)

497 #i‡
__HAVE_DISTINCT_FLOAT32X


498 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

500 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

501 
	~<bôs/m©hˇŒs.h
>

503 #unde‡
_MdoubÀ_


504 #unde‡
__MATH_PRECNAME


505 #unde‡
__MATH_DECLARING_DOUBLE


506 #unde‡
__MATH_DECLARING_FLOATN


509 #i‡
__HAVE_DISTINCT_FLOAT64X
 || (
__HAVE_FLOAT64X
 && !
deföed
 
_LIBC
)

510 
	#_MdoubÀ_
 
_Flﬂt64x


	)

511 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f64x
##
	)
r

512 
	#__MATH_DECLARING_DOUBLE
 0

	)

513 
	#__MATH_DECLARING_FLOATN
 1

	)

514 #i‡
__HAVE_DISTINCT_FLOAT64X


515 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

517 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

518 
	~<bôs/m©hˇŒs.h
>

520 #unde‡
_MdoubÀ_


521 #unde‡
__MATH_PRECNAME


522 #unde‡
__MATH_DECLARING_DOUBLE


523 #unde‡
__MATH_DECLARING_FLOATN


526 #i‡
__HAVE_DISTINCT_FLOAT128X
 || (
__HAVE_FLOAT128X
 && !
deföed
 
_LIBC
)

527 
	#_MdoubÀ_
 
_Flﬂt128x


	)

528 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f128x
##
	)
r

529 
	#__MATH_DECLARING_DOUBLE
 0

	)

530 
	#__MATH_DECLARING_FLOATN
 1

	)

531 #i‡
__HAVE_DISTINCT_FLOAT128X


532 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

534 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

535 
	~<bôs/m©hˇŒs.h
>

537 #unde‡
_MdoubÀ_


538 #unde‡
__MATH_PRECNAME


539 #unde‡
__MATH_DECLARING_DOUBLE


540 #unde‡
__MATH_DECLARING_FLOATN


543 #unde‡
__MATHDECL_1_IMPL


544 #unde‡
__MATHDECL_1


545 #unde‡
__MATHDECL_ALIAS


546 #unde‡
__MATHDECL


547 #unde‡
__MATHCALL


550 
	#__MATHCALL_NARROW_ARGS_1
 (
_M¨g_
 
__x
)

	)

551 
	#__MATHCALL_NARROW_ARGS_2
 (
_M¨g_
 
__x
, _M¨g_ 
__y
)

	)

552 
	#__MATHCALL_NARROW_ARGS_3
 (
_M¨g_
 
__x
, _M¨g_ 
__y
, _M¨g_ 
__z
)

	)

553 
	#__MATHCALL_NARROW_NORMAL
(
func
, 
«rgs
) \

554 
_Mªt_
 
func
 
__MATHCALL_NARROW_ARGS_
 ## 
«rgs
 
__THROW


	)

555 
	#__MATHCALL_NARROW_REDIR
(
func
, 
ªdú
, 
«rgs
) \

556 
_Mªt_
 
	`__REDIRECT_NTH
 (
func
, 
__MATHCALL_NARROW_ARGS_
 ## 
«rgs
, \

557 
ªdú
)

	)

558 
	#__MATHCALL_NARROW
(
func
, 
ªdú
, 
«rgs
) \

559 
	`__MATHCALL_NARROW_NORMAL
 (
func
, 
«rgs
)

	)

561 #i‡
	`__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

563 
	#_Mªt_
 

	)

564 
	#_M¨g_
 

	)

565 
	#__MATHCALL_NAME
(
«me
Ë
f
 ## 
	)
name

566 
	~<bôs/m©hˇŒs-«ºow.h
>

567 #unde‡
_Mªt_


568 #unde‡
_M¨g_


569 #unde‡
__MATHCALL_NAME


571 
	#_Mªt_
 

	)

572 
	#_M¨g_
 

	)

573 
	#__MATHCALL_NAME
(
«me
Ë
f
 ##Çamê## 
l


	)

574 #ifde‡
__LDBL_COMPAT


575 
	#__MATHCALL_REDIR_NAME
(
«me
Ë
f
 ## 
	)
name

576 
	#__MATHCALL_REDIR_NAME2
(
«me
Ë
f
 ## 
	)
name

577 #unde‡
__MATHCALL_NARROW


578 
	#__MATHCALL_NARROW
(
func
, 
ªdú
, 
«rgs
) \

579 
	`__MATHCALL_NARROW_REDIR
 (
func
, 
ªdú
, 
«rgs
)

	)

580 #ñi‡
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 1

581 
	#__MATHCALL_REDIR_NAME
(
«me
Ë
__
 ## 
f32
 ##Çamê## 
õì128


	)

582 
	#__MATHCALL_REDIR_NAME2
(
«me
Ë
__
 ## 
f32
 ##Çamê## 
õì128


	)

583 #unde‡
__MATHCALL_NARROW


584 
	#__MATHCALL_NARROW
(
func
, 
ªdú
, 
«rgs
) \

585 
	`__MATHCALL_NARROW_REDIR
 (
func
, 
ªdú
, 
«rgs
)

	)

587 
	~<bôs/m©hˇŒs-«ºow.h
>

588 #unde‡
_Mªt_


589 #unde‡
_M¨g_


590 #unde‡
__MATHCALL_NAME


591 #i‡
deföed
 
__LDBL_COMPAT
 \

592 || 
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 1

593 #unde‡
__MATHCALL_REDIR_NAME


594 #unde‡
__MATHCALL_REDIR_NAME2


595 #unde‡
__MATHCALL_NARROW


596 
	#__MATHCALL_NARROW
(
func
, 
ªdú
, 
«rgs
) \

597 
	`__MATHCALL_NARROW_NORMAL
 (
func
, 
«rgs
)

	)

600 
	#_Mªt_
 

	)

601 
	#_M¨g_
 

	)

602 
	#__MATHCALL_NAME
(
«me
Ë
d
 ##Çamê## 
l


	)

603 #ifde‡
__LDBL_COMPAT


604 
	#__MATHCALL_REDIR_NAME
(
«me
Ë
__∆dbl_d
 ##Çamê## 
l


	)

605 
	#__MATHCALL_REDIR_NAME2
(
«me
Ë
	)
name

606 #unde‡
__MATHCALL_NARROW


607 
	#__MATHCALL_NARROW
(
func
, 
ªdú
, 
«rgs
) \

608 
	`__MATHCALL_NARROW_REDIR
 (
func
, 
ªdú
, 
«rgs
)

	)

609 #ñi‡
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 1

610 
	#__MATHCALL_REDIR_NAME
(
«me
Ë
__
 ## 
f64
 ##Çamê## 
õì128


	)

611 
	#__MATHCALL_REDIR_NAME2
(
«me
Ë
__
 ## 
f64
 ##Çamê## 
õì128


	)

612 #unde‡
__MATHCALL_NARROW


613 
	#__MATHCALL_NARROW
(
func
, 
ªdú
, 
«rgs
) \

614 
	`__MATHCALL_NARROW_REDIR
 (
func
, 
ªdú
, 
«rgs
)

	)

616 
	~<bôs/m©hˇŒs-«ºow.h
>

617 #unde‡
_Mªt_


618 #unde‡
_M¨g_


619 #unde‡
__MATHCALL_NAME


620 #i‡
deföed
 
__LDBL_COMPAT
 \

621 || 
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 1

622 #unde‡
__MATHCALL_REDIR_NAME


623 #unde‡
__MATHCALL_REDIR_NAME2


624 #unde‡
__MATHCALL_NARROW


625 
	#__MATHCALL_NARROW
(
func
, 
ªdú
, 
«rgs
) \

626 
	`__MATHCALL_NARROW_NORMAL
 (
func
, 
«rgs
)

	)

631 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

633 #i‡
__HAVE_FLOAT16
 && 
__HAVE_FLOAT32


634 
	#_Mªt_
 
_Flﬂt16


	)

635 
	#_M¨g_
 
_Flﬂt32


	)

636 
	#__MATHCALL_NAME
(
«me
Ë
f16
 ##Çamê## 
f32


	)

637 
	~<bôs/m©hˇŒs-«ºow.h
>

638 #unde‡
_Mªt_


639 #unde‡
_M¨g_


640 #unde‡
__MATHCALL_NAME


643 #i‡
__HAVE_FLOAT16
 && 
__HAVE_FLOAT32X


644 
	#_Mªt_
 
_Flﬂt16


	)

645 
	#_M¨g_
 
_Flﬂt32x


	)

646 
	#__MATHCALL_NAME
(
«me
Ë
f16
 ##Çamê## 
f32x


	)

647 
	~<bôs/m©hˇŒs-«ºow.h
>

648 #unde‡
_Mªt_


649 #unde‡
_M¨g_


650 #unde‡
__MATHCALL_NAME


653 #i‡
__HAVE_FLOAT16
 && 
__HAVE_FLOAT64


654 
	#_Mªt_
 
_Flﬂt16


	)

655 
	#_M¨g_
 
_Flﬂt64


	)

656 
	#__MATHCALL_NAME
(
«me
Ë
f16
 ##Çamê## 
f64


	)

657 
	~<bôs/m©hˇŒs-«ºow.h
>

658 #unde‡
_Mªt_


659 #unde‡
_M¨g_


660 #unde‡
__MATHCALL_NAME


663 #i‡
__HAVE_FLOAT16
 && 
__HAVE_FLOAT64X


664 
	#_Mªt_
 
_Flﬂt16


	)

665 
	#_M¨g_
 
_Flﬂt64x


	)

666 
	#__MATHCALL_NAME
(
«me
Ë
f16
 ##Çamê## 
f64x


	)

667 
	~<bôs/m©hˇŒs-«ºow.h
>

668 #unde‡
_Mªt_


669 #unde‡
_M¨g_


670 #unde‡
__MATHCALL_NAME


673 #i‡
__HAVE_FLOAT16
 && 
__HAVE_FLOAT128


674 
	#_Mªt_
 
_Flﬂt16


	)

675 
	#_M¨g_
 
_Flﬂt128


	)

676 
	#__MATHCALL_NAME
(
«me
Ë
f16
 ##Çamê## 
f128


	)

677 
	~<bôs/m©hˇŒs-«ºow.h
>

678 #unde‡
_Mªt_


679 #unde‡
_M¨g_


680 #unde‡
__MATHCALL_NAME


683 #i‡
__HAVE_FLOAT16
 && 
__HAVE_FLOAT128X


684 
	#_Mªt_
 
_Flﬂt16


	)

685 
	#_M¨g_
 
_Flﬂt128x


	)

686 
	#__MATHCALL_NAME
(
«me
Ë
f16
 ##Çamê## 
f128x


	)

687 
	~<bôs/m©hˇŒs-«ºow.h
>

688 #unde‡
_Mªt_


689 #unde‡
_M¨g_


690 #unde‡
__MATHCALL_NAME


693 #i‡
__HAVE_FLOAT32
 && 
__HAVE_FLOAT32X


694 
	#_Mªt_
 
_Flﬂt32


	)

695 
	#_M¨g_
 
_Flﬂt32x


	)

696 
	#__MATHCALL_NAME
(
«me
Ë
f32
 ##Çamê## 
f32x


	)

697 
	~<bôs/m©hˇŒs-«ºow.h
>

698 #unde‡
_Mªt_


699 #unde‡
_M¨g_


700 #unde‡
__MATHCALL_NAME


703 #i‡
__HAVE_FLOAT32
 && 
__HAVE_FLOAT64


704 
	#_Mªt_
 
_Flﬂt32


	)

705 
	#_M¨g_
 
_Flﬂt64


	)

706 
	#__MATHCALL_NAME
(
«me
Ë
f32
 ##Çamê## 
f64


	)

707 
	~<bôs/m©hˇŒs-«ºow.h
>

708 #unde‡
_Mªt_


709 #unde‡
_M¨g_


710 #unde‡
__MATHCALL_NAME


713 #i‡
__HAVE_FLOAT32
 && 
__HAVE_FLOAT64X


714 
	#_Mªt_
 
_Flﬂt32


	)

715 
	#_M¨g_
 
_Flﬂt64x


	)

716 
	#__MATHCALL_NAME
(
«me
Ë
f32
 ##Çamê## 
f64x


	)

717 
	~<bôs/m©hˇŒs-«ºow.h
>

718 #unde‡
_Mªt_


719 #unde‡
_M¨g_


720 #unde‡
__MATHCALL_NAME


723 #i‡
__HAVE_FLOAT32
 && 
__HAVE_FLOAT128


724 
	#_Mªt_
 
_Flﬂt32


	)

725 
	#_M¨g_
 
_Flﬂt128


	)

726 
	#__MATHCALL_NAME
(
«me
Ë
f32
 ##Çamê## 
f128


	)

727 
	~<bôs/m©hˇŒs-«ºow.h
>

728 #unde‡
_Mªt_


729 #unde‡
_M¨g_


730 #unde‡
__MATHCALL_NAME


733 #i‡
__HAVE_FLOAT32
 && 
__HAVE_FLOAT128X


734 
	#_Mªt_
 
_Flﬂt32


	)

735 
	#_M¨g_
 
_Flﬂt128x


	)

736 
	#__MATHCALL_NAME
(
«me
Ë
f32
 ##Çamê## 
f128x


	)

737 
	~<bôs/m©hˇŒs-«ºow.h
>

738 #unde‡
_Mªt_


739 #unde‡
_M¨g_


740 #unde‡
__MATHCALL_NAME


743 #i‡
__HAVE_FLOAT32X
 && 
__HAVE_FLOAT64


744 
	#_Mªt_
 
_Flﬂt32x


	)

745 
	#_M¨g_
 
_Flﬂt64


	)

746 
	#__MATHCALL_NAME
(
«me
Ë
f32x
 ##Çamê## 
f64


	)

747 
	~<bôs/m©hˇŒs-«ºow.h
>

748 #unde‡
_Mªt_


749 #unde‡
_M¨g_


750 #unde‡
__MATHCALL_NAME


753 #i‡
__HAVE_FLOAT32X
 && 
__HAVE_FLOAT64X


754 
	#_Mªt_
 
_Flﬂt32x


	)

755 
	#_M¨g_
 
_Flﬂt64x


	)

756 
	#__MATHCALL_NAME
(
«me
Ë
f32x
 ##Çamê## 
f64x


	)

757 
	~<bôs/m©hˇŒs-«ºow.h
>

758 #unde‡
_Mªt_


759 #unde‡
_M¨g_


760 #unde‡
__MATHCALL_NAME


763 #i‡
__HAVE_FLOAT32X
 && 
__HAVE_FLOAT128


764 
	#_Mªt_
 
_Flﬂt32x


	)

765 
	#_M¨g_
 
_Flﬂt128


	)

766 
	#__MATHCALL_NAME
(
«me
Ë
f32x
 ##Çamê## 
f128


	)

767 
	~<bôs/m©hˇŒs-«ºow.h
>

768 #unde‡
_Mªt_


769 #unde‡
_M¨g_


770 #unde‡
__MATHCALL_NAME


773 #i‡
__HAVE_FLOAT32X
 && 
__HAVE_FLOAT128X


774 
	#_Mªt_
 
_Flﬂt32x


	)

775 
	#_M¨g_
 
_Flﬂt128x


	)

776 
	#__MATHCALL_NAME
(
«me
Ë
f32x
 ##Çamê## 
f128x


	)

777 
	~<bôs/m©hˇŒs-«ºow.h
>

778 #unde‡
_Mªt_


779 #unde‡
_M¨g_


780 #unde‡
__MATHCALL_NAME


783 #i‡
__HAVE_FLOAT64
 && 
__HAVE_FLOAT64X


784 
	#_Mªt_
 
_Flﬂt64


	)

785 
	#_M¨g_
 
_Flﬂt64x


	)

786 
	#__MATHCALL_NAME
(
«me
Ë
f64
 ##Çamê## 
f64x


	)

787 
	~<bôs/m©hˇŒs-«ºow.h
>

788 #unde‡
_Mªt_


789 #unde‡
_M¨g_


790 #unde‡
__MATHCALL_NAME


793 #i‡
__HAVE_FLOAT64
 && 
__HAVE_FLOAT128


794 
	#_Mªt_
 
_Flﬂt64


	)

795 
	#_M¨g_
 
_Flﬂt128


	)

796 
	#__MATHCALL_NAME
(
«me
Ë
f64
 ##Çamê## 
f128


	)

797 
	~<bôs/m©hˇŒs-«ºow.h
>

798 #unde‡
_Mªt_


799 #unde‡
_M¨g_


800 #unde‡
__MATHCALL_NAME


803 #i‡
__HAVE_FLOAT64
 && 
__HAVE_FLOAT128X


804 
	#_Mªt_
 
_Flﬂt64


	)

805 
	#_M¨g_
 
_Flﬂt128x


	)

806 
	#__MATHCALL_NAME
(
«me
Ë
f64
 ##Çamê## 
f128x


	)

807 
	~<bôs/m©hˇŒs-«ºow.h
>

808 #unde‡
_Mªt_


809 #unde‡
_M¨g_


810 #unde‡
__MATHCALL_NAME


813 #i‡
__HAVE_FLOAT64X
 && 
__HAVE_FLOAT128


814 
	#_Mªt_
 
_Flﬂt64x


	)

815 
	#_M¨g_
 
_Flﬂt128


	)

816 
	#__MATHCALL_NAME
(
«me
Ë
f64x
 ##Çamê## 
f128


	)

817 
	~<bôs/m©hˇŒs-«ºow.h
>

818 #unde‡
_Mªt_


819 #unde‡
_M¨g_


820 #unde‡
__MATHCALL_NAME


823 #i‡
__HAVE_FLOAT64X
 && 
__HAVE_FLOAT128X


824 
	#_Mªt_
 
_Flﬂt64x


	)

825 
	#_M¨g_
 
_Flﬂt128x


	)

826 
	#__MATHCALL_NAME
(
«me
Ë
f64x
 ##Çamê## 
f128x


	)

827 
	~<bôs/m©hˇŒs-«ºow.h
>

828 #unde‡
_Mªt_


829 #unde‡
_M¨g_


830 #unde‡
__MATHCALL_NAME


833 #i‡
__HAVE_FLOAT128
 && 
__HAVE_FLOAT128X


834 
	#_Mªt_
 
_Flﬂt128


	)

835 
	#_M¨g_
 
_Flﬂt128x


	)

836 
	#__MATHCALL_NAME
(
«me
Ë
f128
 ##Çamê## 
f128x


	)

837 
	~<bôs/m©hˇŒs-«ºow.h
>

838 #unde‡
_Mªt_


839 #unde‡
_M¨g_


840 #unde‡
__MATHCALL_NAME


845 #unde‡
__MATHCALL_NARROW_ARGS_1


846 #unde‡
__MATHCALL_NARROW_ARGS_2


847 #unde‡
__MATHCALL_NARROW_ARGS_3


848 #unde‡
__MATHCALL_NARROW_NORMAL


849 #unde‡
__MATHCALL_NARROW_REDIR


850 #unde‡
__MATHCALL_NARROW


852 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


854 
signgam
;

857 #i‡(
__HAVE_DISTINCT_FLOAT16
 \

858 || 
__HAVE_DISTINCT_FLOAT32
 \

859 || 
__HAVE_DISTINCT_FLOAT64
 \

860 || 
__HAVE_DISTINCT_FLOAT32X
 \

861 || 
__HAVE_DISTINCT_FLOAT64X
 \

862 || 
__HAVE_DISTINCT_FLOAT128X
)

875 #ifde‡
__NO_LONG_DOUBLE_MATH


876 #i‡
__HAVE_DISTINCT_FLOAT128


879 
	#__MATH_TG
(
TG_ARG
, 
FUNC
, 
ARGS
) \

880 ( (
TG_ARG
Ë= (Ë? 
FUNC
 ## 
f
 
ARGS
 : FUNC ARGS)

	)

881 #ñi‡
__HAVE_DISTINCT_FLOAT128


882 #i‡
__HAVE_GENERIC_SELECTION


883 #i‡
__HAVE_FLOATN_NOT_TYPEDEF
 && 
__HAVE_FLOAT32


884 
	#__MATH_TG_F32
(
FUNC
, 
ARGS
Ë
_Flﬂt32
: FUNC ## 
f
 ARGS,

	)

886 
	#__MATH_TG_F32
(
FUNC
, 
ARGS
)

	)

888 #i‡
__HAVE_FLOATN_NOT_TYPEDEF
 && 
__HAVE_FLOAT64X


889 #i‡
__HAVE_FLOAT64X_LONG_DOUBLE


890 
	#__MATH_TG_F64X
(
FUNC
, 
ARGS
Ë
_Flﬂt64x
: FUNC ## 
l
 ARGS,

	)

892 
	#__MATH_TG_F64X
(
FUNC
, 
ARGS
Ë
_Flﬂt64x
: FUNC ## 
f128
 ARGS,

	)

895 
	#__MATH_TG_F64X
(
FUNC
, 
ARGS
)

	)

897 
	#__MATH_TG
(
TG_ARG
, 
FUNC
, 
ARGS
) \

898 
	`_Gíîic
 ((
TG_ARG
), \

899 : 
FUNC
 ## 
f
 
ARGS
, \

900 
	`__MATH_TG_F32
 (
FUNC
, 
ARGS
) \

901 : 
FUNC
 
ARGS
, \

902 : 
FUNC
 ## 
l
 
ARGS
, \

903 
	`__MATH_TG_F64X
 (
FUNC
, 
ARGS
) \

904 
_Flﬂt128
: 
FUNC
 ## 
f128
 
ARGS
)

	)

906 #i‡
__HAVE_FLOATN_NOT_TYPEDEF


909 
	#__MATH_TG
(
TG_ARG
, 
FUNC
, 
ARGS
) \

910 
__buûtö_choo£_ex¥
 \

911 (
	`__buûtö_ty≥s_com∑tibÀ_p
 (
	`__ty≥of
 (
TG_ARG
), ), \

912 
FUNC
 ## 
f
 
ARGS
, \

913 
__buûtö_choo£_ex¥
 \

914 (
	`__buûtö_ty≥s_com∑tibÀ_p
 (
	`__ty≥of
 (
TG_ARG
), ), \

915 
FUNC
 
ARGS
, \

916 
__buûtö_choo£_ex¥
 \

917 (
	`__buûtö_ty≥s_com∑tibÀ_p
 (
	`__ty≥of
 (
TG_ARG
), ), \

918 
FUNC
 ## 
l
 
ARGS
, \

919 
FUNC
 ## 
f128
 
ARGS
)))

	)

922 
	#__MATH_TG
(
TG_ARG
, 
FUNC
, 
ARGS
) \

923 ( (
TG_ARG
) ==  () \

924 ? 
FUNC
 ## 
f
 
ARGS
 \

925 :  (
TG_ARG
) ==  () \

926 ? 
FUNC
 
ARGS
 \

927 : 
FUNC
 ## 
l
 
ARGS
)

	)

931 #ifde‡
__USE_ISOC99


936 
FP_NAN
 =

937 
	#FP_NAN
 0

	)

938 
FP_NAN
,

939 
FP_INFINITE
 =

940 
	#FP_INFINITE
 1

	)

941 
FP_INFINITE
,

942 
FP_ZERO
 =

943 
	#FP_ZERO
 2

	)

944 
FP_ZERO
,

945 
FP_SUBNORMAL
 =

946 
	#FP_SUBNORMAL
 3

	)

947 
FP_SUBNORMAL
,

948 
FP_NORMAL
 =

949 
	#FP_NORMAL
 4

	)

950 
FP_NORMAL


958 #i‡((
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__
) \

959 || 
	`__glibc_˛™g_¥îeq
 (2,8)) \

960 && (!
deföed
 
__OPTIMIZE_SIZE__
 || deföed 
__˝lu•lus
)

967 
	#Â˛assify
(
x
Ë
	`__buûtö_Â˛assify
 (
FP_NAN
, 
FP_INFINITE
, \

968 
FP_NORMAL
, 
FP_SUBNORMAL
, 
FP_ZERO
, 
x
)

	)

970 
	#Â˛assify
(
x
Ë
	`__MATH_TG
 ((x), 
__Â˛assify
, (x))

	)

974 #i‡
	`__GNUC_PREREQ
 (6,0Ë|| 
	`__glibc_˛™g_¥îeq
 (3,3)

975 
	#signbô
(
x
Ë
	`__buûtö_signbô
 (x)

	)

976 #ñi‡
deföed
 
__˝lu•lus


984 
	#signbô
(
x
Ë
	`__buûtö_signbôl
 (x)

	)

985 #ñi‡
	`__GNUC_PREREQ
 (4,0)

986 
	#signbô
(
x
Ë
	`__MATH_TG
 ((x), 
__buûtö_signbô
, (x))

	)

988 
	#signbô
(
x
Ë
	`__MATH_TG
 ((x), 
__signbô
, (x))

	)

992 #i‡(
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__
) \

993 || 
	$__glibc_˛™g_¥îeq
 (2,8)

994 
	#isföôe
(
x
Ë
	`__buûtö_isföôe
 (x)

	)

996 
	#isföôe
(
x
Ë
	`__MATH_TG
 ((x), 
__föôe
, (x))

	)

1000 #i‡(
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__
) \

1001 || 
	$__glibc_˛™g_¥îeq
 (2,8)

1002 
	#i¢‹mÆ
(
x
Ë
	`__buûtö_i¢‹mÆ
 (x)

	)

1004 
	#i¢‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_NORMAL
)

	)

1009 #i‡(
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__
) \

1010 || 
	$__glibc_˛™g_¥îeq
 (2,8)

1011 
	#i¢™
(
x
Ë
	`__buûtö_i¢™
 (x)

	)

1013 
	#i¢™
(
x
Ë
	`__MATH_TG
 ((x), 
__i¢™
, (x))

	)

1017 #i‡
__HAVE_DISTINCT_FLOAT128
 && !
	`__GNUC_PREREQ
 (7,0) \

1018 && !
deföed
 
__SUPPORT_SNAN__
 && !deföed 
__˝lu•lus


1024 
	#isöf
(
x
) \

1025 (
	`__buûtö_ty≥s_com∑tibÀ_p
 (
	`__ty≥of
 (
x
), 
_Flﬂt128
) \

1026 ? 
	`__isöff128
 (
x
Ë: 
	`__buûtö_isöf_sign
 (x))

	)

1027 #ñi‡(
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__
) \

1028 || 
	$__glibc_˛™g_¥îeq
 (3,7)

1029 
	#isöf
(
x
Ë
	`__buûtö_isöf_sign
 (x)

	)

1031 
	#isöf
(
x
Ë
	`__MATH_TG
 ((x), 
__isöf
, (x))

	)

1035 
	#MATH_ERRNO
 1

	)

1036 
	#MATH_ERREXCEPT
 2

	)

1043 #ifde‡
__FAST_MATH__


1044 
	#m©h_îrh™dlög
 0

	)

1045 #ñi‡
deföed
 
__NO_MATH_ERRNO__


1046 
	#m©h_îrh™dlög
 (
MATH_ERREXCEPT
)

	)

1048 
	#m©h_îrh™dlög
 (
MATH_ERRNO
 | 
MATH_ERREXCEPT
)

	)

1053 #i‡
	`__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

1054 
	~<bôs/isˇn⁄iˇl.h
>

1057 #i‚de‡
__˝lu•lus


1058 
	#issig«lög
(
x
Ë
	`__MATH_TG
 ((x), 
__issig«lög
, (x))

	)

1067 
ölöe
 
	`issig«lög
 (
__vÆ
Ë{  
	`__issig«lögf
 (__val); }

1068 
ölöe
 
	`issig«lög
 (
__vÆ
Ë{  
	`__issig«lög
 (__val); }

1069 
ölöe
 

1070 
	`issig«lög
 (
__vÆ
)

1072 #ifde‡
__NO_LONG_DOUBLE_MATH


1073  
	`__issig«lög
 (
__vÆ
);

1075  
	`__issig«lögl
 (
__vÆ
);

1078 #i‡
__HAVE_FLOAT128_UNLIKE_LDBL


1081 
ölöe
 
	`issig«lög
 (
_Flﬂt128
 
__vÆ
Ë{  
	`__issig«lögf128
 (__val); }

1083 
	}
}

1087 
	#issubn‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_SUBNORMAL
)

	)

1090 #i‚de‡
__˝lu•lus


1091 #ifde‡
__SUPPORT_SNAN__


1092 
	#iszîo
(
x
Ë(
	`Â˛assify
 (xË=
FP_ZERO
)

	)

1094 
	#iszîo
(
x
Ë(((
	`__ty≥of
 (x)Ë(x)Ë=0)

	)

1098 #ifde‡
__SUPPORT_SNAN__


1099 
ölöe
 

1100 
iszîo
 (
__vÆ
)

1102  
__Â˛assifyf
 (
__vÆ
Ë=
FP_ZERO
;

1104 
ölöe
 

1105 
iszîo
 (
__vÆ
)

1107  
__Â˛assify
 (
__vÆ
Ë=
FP_ZERO
;

1109 
ölöe
 

1110 
iszîo
 (
__vÆ
)

1112 #ifde‡
__NO_LONG_DOUBLE_MATH


1113  
__Â˛assify
 (
__vÆ
Ë=
FP_ZERO
;

1115  
__Â˛assifyl
 (
__vÆ
Ë=
FP_ZERO
;

1118 #i‡
__HAVE_FLOAT128_UNLIKE_LDBL


1121 
ölöe
 

1122 
iszîo
 (
_Flﬂt128
 
__vÆ
)

1124  
__Â˛assifyf128
 (
__vÆ
Ë=
FP_ZERO
;

1128 
ãm∂©e
 <
˛ass
 
__T
> 
ölöe
 
boﬁ


1129 
iszîo
 (
__T
 
__vÆ
)

1131  
__vÆ
 == 0;

1138 #ifde‡
__USE_XOPEN


1140 
	#MAXFLOAT
 3.40282347e+38F

	)

1145 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


1146 
	#M_E
 2.7182818284590452354

	)

1147 
	#M_LOG2E
 1.4426950408889634074

	)

1148 
	#M_LOG10E
 0.43429448190325182765

	)

1149 
	#M_LN2
 0.69314718055994530942

	)

1150 
	#M_LN10
 2.30258509299404568402

	)

1151 
	#M_PI
 3.14159265358979323846

	)

1152 
	#M_PI_2
 1.57079632679489661923

	)

1153 
	#M_PI_4
 0.78539816339744830962

	)

1154 
	#M_1_PI
 0.31830988618379067154

	)

1155 
	#M_2_PI
 0.63661977236758134308

	)

1156 
	#M_2_SQRTPI
 1.12837916709551257390

	)

1157 
	#M_SQRT2
 1.41421356237309504880

	)

1158 
	#M_SQRT1_2
 0.70710678118654752440

	)

1162 #ifde‡
__USE_GNU


1163 
	#M_Ef
 2.7182818284590452354‡

	)

1164 
	#M_LOG2Ef
 1.4426950408889634074‡

	)

1165 
	#M_LOG10Ef
 0.43429448190325182765‡

	)

1166 
	#M_LN2f
 0.69314718055994530942‡

	)

1167 
	#M_LN10f
 2.30258509299404568402‡

	)

1168 
	#M_PIf
 3.14159265358979323846‡

	)

1169 
	#M_PI_2f
 1.57079632679489661923‡

	)

1170 
	#M_PI_4f
 0.78539816339744830962‡

	)

1171 
	#M_1_PIf
 0.31830988618379067154‡

	)

1172 
	#M_2_PIf
 0.63661977236758134308‡

	)

1173 
	#M_2_SQRTPIf
 1.12837916709551257390‡

	)

1174 
	#M_SQRT2f
 1.41421356237309504880‡

	)

1175 
	#M_SQRT1_2f
 0.70710678118654752440‡

	)

1181 #ifde‡
__USE_GNU


1182 
	#M_El
 2.718281828459045235360287471352662498L

	)

1183 
	#M_LOG2El
 1.442695040888963407359924681001892137L

	)

1184 
	#M_LOG10El
 0.434294481903251827651128918916605082L

	)

1185 
	#M_LN2l
 0.693147180559945309417232121458176568L

	)

1186 
	#M_LN10l
 2.302585092994045684017991454684364208L

	)

1187 
	#M_PIl
 3.141592653589793238462643383279502884L

	)

1188 
	#M_PI_2l
 1.570796326794896619231321691639751442L

	)

1189 
	#M_PI_4l
 0.785398163397448309615660845819875721L

	)

1190 
	#M_1_PIl
 0.318309886183790671537767526745028724L

	)

1191 
	#M_2_PIl
 0.636619772367581343075535053490057448L

	)

1192 
	#M_2_SQRTPIl
 1.128379167095512573896158903121545172L

	)

1193 
	#M_SQRT2l
 1.414213562373095048801688724209698079L

	)

1194 
	#M_SQRT1_2l
 0.707106781186547524400844362104849039L

	)

1197 #i‡
__HAVE_FLOAT16
 && 
deföed
 
__USE_GNU


1198 
	#M_Ef16
 
	`__f16
 (2.718281828459045235360287471352662498Ë

	)

1199 
	#M_LOG2Ef16
 
	`__f16
 (1.442695040888963407359924681001892137Ë

	)

1200 
	#M_LOG10Ef16
 
	`__f16
 (0.434294481903251827651128918916605082Ë

	)

1201 
	#M_LN2f16
 
	`__f16
 (0.693147180559945309417232121458176568Ë

	)

1202 
	#M_LN10f16
 
	`__f16
 (2.302585092994045684017991454684364208Ë

	)

1203 
	#M_PIf16
 
	`__f16
 (3.141592653589793238462643383279502884Ë

	)

1204 
	#M_PI_2f16
 
	`__f16
 (1.570796326794896619231321691639751442Ë

	)

1205 
	#M_PI_4f16
 
	`__f16
 (0.785398163397448309615660845819875721Ë

	)

1206 
	#M_1_PIf16
 
	`__f16
 (0.318309886183790671537767526745028724Ë

	)

1207 
	#M_2_PIf16
 
	`__f16
 (0.636619772367581343075535053490057448Ë

	)

1208 
	#M_2_SQRTPIf16
 
	`__f16
 (1.128379167095512573896158903121545172Ë

	)

1209 
	#M_SQRT2f16
 
	`__f16
 (1.414213562373095048801688724209698079Ë

	)

1210 
	#M_SQRT1_2f16
 
	`__f16
 (0.707106781186547524400844362104849039Ë

	)

1213 #i‡
__HAVE_FLOAT32
 && 
deföed
 
__USE_GNU


1214 
	#M_Ef32
 
	`__f32
 (2.718281828459045235360287471352662498Ë

	)

1215 
	#M_LOG2Ef32
 
	`__f32
 (1.442695040888963407359924681001892137Ë

	)

1216 
	#M_LOG10Ef32
 
	`__f32
 (0.434294481903251827651128918916605082Ë

	)

1217 
	#M_LN2f32
 
	`__f32
 (0.693147180559945309417232121458176568Ë

	)

1218 
	#M_LN10f32
 
	`__f32
 (2.302585092994045684017991454684364208Ë

	)

1219 
	#M_PIf32
 
	`__f32
 (3.141592653589793238462643383279502884Ë

	)

1220 
	#M_PI_2f32
 
	`__f32
 (1.570796326794896619231321691639751442Ë

	)

1221 
	#M_PI_4f32
 
	`__f32
 (0.785398163397448309615660845819875721Ë

	)

1222 
	#M_1_PIf32
 
	`__f32
 (0.318309886183790671537767526745028724Ë

	)

1223 
	#M_2_PIf32
 
	`__f32
 (0.636619772367581343075535053490057448Ë

	)

1224 
	#M_2_SQRTPIf32
 
	`__f32
 (1.128379167095512573896158903121545172Ë

	)

1225 
	#M_SQRT2f32
 
	`__f32
 (1.414213562373095048801688724209698079Ë

	)

1226 
	#M_SQRT1_2f32
 
	`__f32
 (0.707106781186547524400844362104849039Ë

	)

1229 #i‡
__HAVE_FLOAT64
 && 
deföed
 
__USE_GNU


1230 
	#M_Ef64
 
	`__f64
 (2.718281828459045235360287471352662498Ë

	)

1231 
	#M_LOG2Ef64
 
	`__f64
 (1.442695040888963407359924681001892137Ë

	)

1232 
	#M_LOG10Ef64
 
	`__f64
 (0.434294481903251827651128918916605082Ë

	)

1233 
	#M_LN2f64
 
	`__f64
 (0.693147180559945309417232121458176568Ë

	)

1234 
	#M_LN10f64
 
	`__f64
 (2.302585092994045684017991454684364208Ë

	)

1235 
	#M_PIf64
 
	`__f64
 (3.141592653589793238462643383279502884Ë

	)

1236 
	#M_PI_2f64
 
	`__f64
 (1.570796326794896619231321691639751442Ë

	)

1237 
	#M_PI_4f64
 
	`__f64
 (0.785398163397448309615660845819875721Ë

	)

1238 
	#M_1_PIf64
 
	`__f64
 (0.318309886183790671537767526745028724Ë

	)

1239 
	#M_2_PIf64
 
	`__f64
 (0.636619772367581343075535053490057448Ë

	)

1240 
	#M_2_SQRTPIf64
 
	`__f64
 (1.128379167095512573896158903121545172Ë

	)

1241 
	#M_SQRT2f64
 
	`__f64
 (1.414213562373095048801688724209698079Ë

	)

1242 
	#M_SQRT1_2f64
 
	`__f64
 (0.707106781186547524400844362104849039Ë

	)

1245 #i‡
__HAVE_FLOAT128
 && 
deföed
 
__USE_GNU


1246 
	#M_Ef128
 
	`__f128
 (2.718281828459045235360287471352662498Ë

	)

1247 
	#M_LOG2Ef128
 
	`__f128
 (1.442695040888963407359924681001892137Ë

	)

1248 
	#M_LOG10Ef128
 
	`__f128
 (0.434294481903251827651128918916605082Ë

	)

1249 
	#M_LN2f128
 
	`__f128
 (0.693147180559945309417232121458176568Ë

	)

1250 
	#M_LN10f128
 
	`__f128
 (2.302585092994045684017991454684364208Ë

	)

1251 
	#M_PIf128
 
	`__f128
 (3.141592653589793238462643383279502884Ë

	)

1252 
	#M_PI_2f128
 
	`__f128
 (1.570796326794896619231321691639751442Ë

	)

1253 
	#M_PI_4f128
 
	`__f128
 (0.785398163397448309615660845819875721Ë

	)

1254 
	#M_1_PIf128
 
	`__f128
 (0.318309886183790671537767526745028724Ë

	)

1255 
	#M_2_PIf128
 
	`__f128
 (0.636619772367581343075535053490057448Ë

	)

1256 
	#M_2_SQRTPIf128
 
	`__f128
 (1.128379167095512573896158903121545172Ë

	)

1257 
	#M_SQRT2f128
 
	`__f128
 (1.414213562373095048801688724209698079Ë

	)

1258 
	#M_SQRT1_2f128
 
	`__f128
 (0.707106781186547524400844362104849039Ë

	)

1261 #i‡
__HAVE_FLOAT32X
 && 
deföed
 
__USE_GNU


1262 
	#M_Ef32x
 
	`__f32x
 (2.718281828459045235360287471352662498Ë

	)

1263 
	#M_LOG2Ef32x
 
	`__f32x
 (1.442695040888963407359924681001892137Ë

	)

1264 
	#M_LOG10Ef32x
 
	`__f32x
 (0.434294481903251827651128918916605082Ë

	)

1265 
	#M_LN2f32x
 
	`__f32x
 (0.693147180559945309417232121458176568Ë

	)

1266 
	#M_LN10f32x
 
	`__f32x
 (2.302585092994045684017991454684364208Ë

	)

1267 
	#M_PIf32x
 
	`__f32x
 (3.141592653589793238462643383279502884Ë

	)

1268 
	#M_PI_2f32x
 
	`__f32x
 (1.570796326794896619231321691639751442Ë

	)

1269 
	#M_PI_4f32x
 
	`__f32x
 (0.785398163397448309615660845819875721Ë

	)

1270 
	#M_1_PIf32x
 
	`__f32x
 (0.318309886183790671537767526745028724Ë

	)

1271 
	#M_2_PIf32x
 
	`__f32x
 (0.636619772367581343075535053490057448Ë

	)

1272 
	#M_2_SQRTPIf32x
 
	`__f32x
 (1.128379167095512573896158903121545172Ë

	)

1273 
	#M_SQRT2f32x
 
	`__f32x
 (1.414213562373095048801688724209698079Ë

	)

1274 
	#M_SQRT1_2f32x
 
	`__f32x
 (0.707106781186547524400844362104849039Ë

	)

1277 #i‡
__HAVE_FLOAT64X
 && 
deföed
 
__USE_GNU


1278 
	#M_Ef64x
 
	`__f64x
 (2.718281828459045235360287471352662498Ë

	)

1279 
	#M_LOG2Ef64x
 
	`__f64x
 (1.442695040888963407359924681001892137Ë

	)

1280 
	#M_LOG10Ef64x
 
	`__f64x
 (0.434294481903251827651128918916605082Ë

	)

1281 
	#M_LN2f64x
 
	`__f64x
 (0.693147180559945309417232121458176568Ë

	)

1282 
	#M_LN10f64x
 
	`__f64x
 (2.302585092994045684017991454684364208Ë

	)

1283 
	#M_PIf64x
 
	`__f64x
 (3.141592653589793238462643383279502884Ë

	)

1284 
	#M_PI_2f64x
 
	`__f64x
 (1.570796326794896619231321691639751442Ë

	)

1285 
	#M_PI_4f64x
 
	`__f64x
 (0.785398163397448309615660845819875721Ë

	)

1286 
	#M_1_PIf64x
 
	`__f64x
 (0.318309886183790671537767526745028724Ë

	)

1287 
	#M_2_PIf64x
 
	`__f64x
 (0.636619772367581343075535053490057448Ë

	)

1288 
	#M_2_SQRTPIf64x
 
	`__f64x
 (1.128379167095512573896158903121545172Ë

	)

1289 
	#M_SQRT2f64x
 
	`__f64x
 (1.414213562373095048801688724209698079Ë

	)

1290 
	#M_SQRT1_2f64x
 
	`__f64x
 (0.707106781186547524400844362104849039Ë

	)

1293 #i‡
__HAVE_FLOAT128X
 && 
deföed
 
__USE_GNU


1297 #ifde‡
__USE_ISOC99


1298 #i‡
__GNUC_PREREQ
 (3, 1)

1305 
	#isgª©î
(
x
, 
y
Ë
	`__buûtö_isgª©î
(x, y)

	)

1306 
	#isgª©îequÆ
(
x
, 
y
Ë
	`__buûtö_isgª©îequÆ
(x, y)

	)

1307 
	#i¶ess
(
x
, 
y
Ë
	`__buûtö_i¶ess
(x, y)

	)

1308 
	#i¶es£quÆ
(
x
, 
y
Ë
	`__buûtö_i¶es£quÆ
(x, y)

	)

1309 
	#i¶essgª©î
(
x
, 
y
Ë
	`__buûtö_i¶essgª©î
(x, y)

	)

1310 
	#isun‹dîed
(
x
, 
y
Ë
	`__buûtö_isun‹dîed
(x, y)

	)

1312 
	#isgª©î
(
x
, 
y
) \

1313 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__x
 = (x); __ty≥of__ (
y
Ë
__y
 = (y); \

1314 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x > __y; }))

	)

1315 
	#isgª©îequÆ
(
x
, 
y
) \

1316 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__x
 = (x); __ty≥of__ (
y
Ë
__y
 = (y); \

1317 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x >__y; }))

	)

1318 
	#i¶ess
(
x
, 
y
) \

1319 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__x
 = (x); __ty≥of__ (
y
Ë
__y
 = (y); \

1320 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x < __y; }))

	)

1321 
	#i¶es£quÆ
(
x
, 
y
) \

1322 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__x
 = (x); __ty≥of__ (
y
Ë
__y
 = (y); \

1323 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x <__y; }))

	)

1324 
	#i¶essgª©î
(
x
, 
y
) \

1325 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__x
 = (x); __ty≥of__ (
y
Ë
__y
 = (y); \

1326 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x !__y; }))

	)

1328 
	#isun‹dîed
(
x
, 
y
) \

1329 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__u
 = (x); __ty≥of__ (
y
Ë
__v
 = (y); \

1330 
__u
 !
__v
 && (__u !__u || __v !__v); }))

	)

1334 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

1337 #i‡
__FLT_EVAL_METHOD__
 == 2 || __FLT_EVAL_METHOD__ > 64

1338 
	#__MATH_EVAL_FMT2
(
x
, 
y
Ë((xË+ (yË+ 0.0L)

	)

1339 #ñi‡
__FLT_EVAL_METHOD__
 == 1 || __FLT_EVAL_METHOD__ > 32

1340 
	#__MATH_EVAL_FMT2
(
x
, 
y
Ë((xË+ (yË+ 0.0)

	)

1341 #ñi‡
__FLT_EVAL_METHOD__
 == 0 || __FLT_EVAL_METHOD__ == 32

1342 
	#__MATH_EVAL_FMT2
(
x
, 
y
Ë((xË+ (yË+ 0.0f)

	)

1344 
	#__MATH_EVAL_FMT2
(
x
, 
y
Ë((xË+ (y))

	)

1349 #i‡!
deföed
 
__˝lu•lus
 || (__˝lu•lu†< 201103L && !deföed 
__GNUC__
)

1350 
	#i£qsig
(
x
, 
y
) \

1351 
	`__MATH_TG
 (
	`__MATH_EVAL_FMT2
 (
x
, 
y
), 
__i£qsig
, ((x), (y)))

	)

1364 
ãm∂©e
<
ty≥«me
> 
__i£qsig_ty≥
;

1366 
ãm∂©e
<> 
__i£qsig_ty≥
<>

1368 
__ˇŒ
 (
__x
, 
__y
Ë
throw
 ()

1370  
__i£qsigf
 (
__x
, 
__y
);

1374 
ãm∂©e
<> 
__i£qsig_ty≥
<>

1376 
__ˇŒ
 (
__x
, 
__y
Ë
throw
 ()

1378  
__i£qsig
 (
__x
, 
__y
);

1382 
ãm∂©e
<> 
__i£qsig_ty≥
<>

1384 
__ˇŒ
 (
__x
, 
__y
Ë
throw
 ()

1386 #i‚de‡
__NO_LONG_DOUBLE_MATH


1387  
__i£qsigl
 (
__x
, 
__y
);

1389  
__i£qsig
 (
__x
, 
__y
);

1394 #i‡
__HAVE_FLOAT128_UNLIKE_LDBL


1397 
ãm∂©e
<> 
__i£qsig_ty≥
<
_Flﬂt128
>

1399 
__ˇŒ
 (
_Flﬂt128
 
__x
, _Flﬂt128 
__y
Ë
throw
 ()

1401  
__i£qsigf128
 (
__x
, 
__y
);

1406 
ãm∂©e
<
ty≥«me
 
_T1
,Åy≥«mê
_T2
>

1407 
ölöe
 

1408 
i£qsig
 (
_T1
 
__x
, 
_T2
 
__y
Ë
throw
 ()

1410 #i‡
__˝lu•lus
 >= 201103L

1411 
de˛ty≥
 (
	t__MATH_EVAL_FMT2
 (
	t__x
, 
	t__y
)Ë
	t_T3
;

1413 
__ty≥of
 (
	t__MATH_EVAL_FMT2
 (
	t__x
, 
	t__y
)Ë
	t_T3
;

1415  
__i£qsig_ty≥
<
_T3
>::
__ˇŒ
 (
__x
, 
__y
);

1423 
__END_DECLS


	@/usr/include/netinet/in.h

18 #i‚def 
_NETINET_IN_H


19 
	#_NETINET_IN_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<bôs/°döt-uöä.h
>

23 
	~<sys/sockë.h
>

24 
	~<bôs/ty≥s.h
>

27 
__BEGIN_DECLS


30 
uöt32_t
 
	tö_addr_t
;

31 
	sö_addr


33 
ö_addr_t
 
	ms_addr
;

37 
	~<bôs/ö.h
>

42 
	mIPPROTO_IP
 = 0,

43 
	#IPPROTO_IP
 
IPPROTO_IP


	)

44 
	mIPPROTO_ICMP
 = 1,

45 
	#IPPROTO_ICMP
 
IPPROTO_ICMP


	)

46 
	mIPPROTO_IGMP
 = 2,

47 
	#IPPROTO_IGMP
 
IPPROTO_IGMP


	)

48 
	mIPPROTO_IPIP
 = 4,

49 
	#IPPROTO_IPIP
 
IPPROTO_IPIP


	)

50 
	mIPPROTO_TCP
 = 6,

51 
	#IPPROTO_TCP
 
IPPROTO_TCP


	)

52 
	mIPPROTO_EGP
 = 8,

53 
	#IPPROTO_EGP
 
IPPROTO_EGP


	)

54 
	mIPPROTO_PUP
 = 12,

55 
	#IPPROTO_PUP
 
IPPROTO_PUP


	)

56 
	mIPPROTO_UDP
 = 17,

57 
	#IPPROTO_UDP
 
IPPROTO_UDP


	)

58 
	mIPPROTO_IDP
 = 22,

59 
	#IPPROTO_IDP
 
IPPROTO_IDP


	)

60 
	mIPPROTO_TP
 = 29,

61 
	#IPPROTO_TP
 
IPPROTO_TP


	)

62 
	mIPPROTO_DCCP
 = 33,

63 
	#IPPROTO_DCCP
 
IPPROTO_DCCP


	)

64 
	mIPPROTO_IPV6
 = 41,

65 
	#IPPROTO_IPV6
 
IPPROTO_IPV6


	)

66 
	mIPPROTO_RSVP
 = 46,

67 
	#IPPROTO_RSVP
 
IPPROTO_RSVP


	)

68 
	mIPPROTO_GRE
 = 47,

69 
	#IPPROTO_GRE
 
IPPROTO_GRE


	)

70 
	mIPPROTO_ESP
 = 50,

71 
	#IPPROTO_ESP
 
IPPROTO_ESP


	)

72 
	mIPPROTO_AH
 = 51,

73 
	#IPPROTO_AH
 
IPPROTO_AH


	)

74 
	mIPPROTO_MTP
 = 92,

75 
	#IPPROTO_MTP
 
IPPROTO_MTP


	)

76 
	mIPPROTO_BEETPH
 = 94,

77 
	#IPPROTO_BEETPH
 
IPPROTO_BEETPH


	)

78 
	mIPPROTO_ENCAP
 = 98,

79 
	#IPPROTO_ENCAP
 
IPPROTO_ENCAP


	)

80 
	mIPPROTO_PIM
 = 103,

81 
	#IPPROTO_PIM
 
IPPROTO_PIM


	)

82 
	mIPPROTO_COMP
 = 108,

83 
	#IPPROTO_COMP
 
IPPROTO_COMP


	)

84 
	mIPPROTO_SCTP
 = 132,

85 
	#IPPROTO_SCTP
 
IPPROTO_SCTP


	)

86 
	mIPPROTO_UDPLITE
 = 136,

87 
	#IPPROTO_UDPLITE
 
IPPROTO_UDPLITE


	)

88 
	mIPPROTO_MPLS
 = 137,

89 
	#IPPROTO_MPLS
 
IPPROTO_MPLS


	)

90 
	mIPPROTO_ETHERNET
 = 143,

91 
	#IPPROTO_ETHERNET
 
IPPROTO_ETHERNET


	)

92 
	mIPPROTO_RAW
 = 255,

93 
	#IPPROTO_RAW
 
IPPROTO_RAW


	)

94 
	mIPPROTO_MPTCP
 = 262,

95 
	#IPPROTO_MPTCP
 
IPPROTO_MPTCP


	)

96 
	mIPPROTO_MAX


102 #i‡!
__USE_KERNEL_IPV6_DEFS


105 
	mIPPROTO_HOPOPTS
 = 0,

106 
	#IPPROTO_HOPOPTS
 
IPPROTO_HOPOPTS


	)

107 
	mIPPROTO_ROUTING
 = 43,

108 
	#IPPROTO_ROUTING
 
IPPROTO_ROUTING


	)

109 
	mIPPROTO_FRAGMENT
 = 44,

110 
	#IPPROTO_FRAGMENT
 
IPPROTO_FRAGMENT


	)

111 
	mIPPROTO_ICMPV6
 = 58,

112 
	#IPPROTO_ICMPV6
 
IPPROTO_ICMPV6


	)

113 
	mIPPROTO_NONE
 = 59,

114 
	#IPPROTO_NONE
 
IPPROTO_NONE


	)

115 
	mIPPROTO_DSTOPTS
 = 60,

116 
	#IPPROTO_DSTOPTS
 
IPPROTO_DSTOPTS


	)

117 
	mIPPROTO_MH
 = 135

118 
	#IPPROTO_MH
 
IPPROTO_MH


	)

123 
uöt16_t
 
	tö_p‹t_t
;

128 
	mIPPORT_ECHO
 = 7,

129 
	mIPPORT_DISCARD
 = 9,

130 
	mIPPORT_SYSTAT
 = 11,

131 
	mIPPORT_DAYTIME
 = 13,

132 
	mIPPORT_NETSTAT
 = 15,

133 
	mIPPORT_FTP
 = 21,

134 
	mIPPORT_TELNET
 = 23,

135 
	mIPPORT_SMTP
 = 25,

136 
	mIPPORT_TIMESERVER
 = 37,

137 
	mIPPORT_NAMESERVER
 = 42,

138 
	mIPPORT_WHOIS
 = 43,

139 
	mIPPORT_MTP
 = 57,

141 
	mIPPORT_TFTP
 = 69,

142 
	mIPPORT_RJE
 = 77,

143 
	mIPPORT_FINGER
 = 79,

144 
	mIPPORT_TTYLINK
 = 87,

145 
	mIPPORT_SUPDUP
 = 95,

148 
	mIPPORT_EXECSERVER
 = 512,

149 
	mIPPORT_LOGINSERVER
 = 513,

150 
	mIPPORT_CMDSERVER
 = 514,

151 
	mIPPORT_EFSSERVER
 = 520,

154 
	mIPPORT_BIFFUDP
 = 512,

155 
	mIPPORT_WHOSERVER
 = 513,

156 
	mIPPORT_ROUTESERVER
 = 520,

159 
	mIPPORT_RESERVED
 = 1024,

162 
	mIPPORT_USERRESERVED
 = 5000

170 
	#IN_CLASSA
(
a
Ë((((
ö_addr_t
)◊)Ë& 0x80000000Ë=0)

	)

171 
	#IN_CLASSA_NET
 0xff000000

	)

172 
	#IN_CLASSA_NSHIFT
 24

	)

173 
	#IN_CLASSA_HOST
 (0xfffffff‡& ~
IN_CLASSA_NET
)

	)

174 
	#IN_CLASSA_MAX
 128

	)

176 
	#IN_CLASSB
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xc0000000Ë=0x80000000)

	)

177 
	#IN_CLASSB_NET
 0xffff0000

	)

178 
	#IN_CLASSB_NSHIFT
 16

	)

179 
	#IN_CLASSB_HOST
 (0xfffffff‡& ~
IN_CLASSB_NET
)

	)

180 
	#IN_CLASSB_MAX
 65536

	)

182 
	#IN_CLASSC
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xc0000000)

	)

183 
	#IN_CLASSC_NET
 0xffffff00

	)

184 
	#IN_CLASSC_NSHIFT
 8

	)

185 
	#IN_CLASSC_HOST
 (0xfffffff‡& ~
IN_CLASSC_NET
)

	)

187 
	#IN_CLASSD
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xe0000000)

	)

188 
	#IN_MULTICAST
(
a
Ë
	`IN_CLASSD
◊)

	)

190 
	#IN_EXPERIMENTAL
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xe0000000)

	)

191 
	#IN_BADCLASS
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xf0000000)

	)

194 
	#INADDR_ANY
 ((
ö_addr_t
Ë0x00000000)

	)

196 
	#INADDR_BROADCAST
 ((
ö_addr_t
Ë0xffffffff)

	)

198 
	#INADDR_NONE
 ((
ö_addr_t
Ë0xffffffff)

	)

201 
	#INADDR_DUMMY
 ((
ö_addr_t
Ë0xc0000008)

	)

204 
	#IN_LOOPBACKNET
 127

	)

206 #i‚de‡
INADDR_LOOPBACK


207 
	#INADDR_LOOPBACK
 ((
ö_addr_t
Ë0x7f000001Ë

	)

211 
	#INADDR_UNSPEC_GROUP
 ((
ö_addr_t
Ë0xe0000000Ë

	)

212 
	#INADDR_ALLHOSTS_GROUP
 ((
ö_addr_t
Ë0xe0000001Ë

	)

213 
	#INADDR_ALLRTRS_GROUP
 ((
ö_addr_t
Ë0xe0000002Ë

	)

214 
	#INADDR_ALLSNOOPERS_GROUP
 ((
ö_addr_t
Ë0xe000006aË

	)

215 
	#INADDR_MAX_LOCAL_GROUP
 ((
ö_addr_t
Ë0xe00000ffË

	)

217 #i‡!
__USE_KERNEL_IPV6_DEFS


219 
	sö6_addr


223 
uöt8_t
 
	m__u6_addr8
[16];

224 
uöt16_t
 
	m__u6_addr16
[8];

225 
uöt32_t
 
	m__u6_addr32
[4];

226 } 
	m__ö6_u
;

227 
	#s6_addr
 
__ö6_u
.
__u6_addr8


	)

228 #ifde‡
__USE_MISC


229 
	#s6_addr16
 
__ö6_u
.
__u6_addr16


	)

230 
	#s6_addr32
 
__ö6_u
.
__u6_addr32


	)

235 c⁄° 
ö6_addr
 
ö6addr_™y
;

236 c⁄° 
ö6_addr
 
ö6addr_lo›back
;

237 
	#IN6ADDR_ANY_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } } }

	)

238 
	#IN6ADDR_LOOPBACK_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 } } }

	)

240 
	#INET_ADDRSTRLEN
 16

	)

241 
	#INET6_ADDRSTRLEN
 46

	)

245 
	ssockaddr_ö


247 
__SOCKADDR_COMMON
 (
sö_
);

248 
ö_p‹t_t
 
	msö_p‹t
;

249 
ö_addr
 
	msö_addr
;

252 
	msö_zîo
[ (
sockaddr
)

253 - 
__SOCKADDR_COMMON_SIZE


254 -  (
ö_p‹t_t
)

255 -  (
ö_addr
)];

258 #i‡!
__USE_KERNEL_IPV6_DEFS


260 
	ssockaddr_ö6


262 
__SOCKADDR_COMMON
 (
sö6_
);

263 
ö_p‹t_t
 
	msö6_p‹t
;

264 
uöt32_t
 
	msö6_Êowöfo
;

265 
ö6_addr
 
	msö6_addr
;

266 
uöt32_t
 
	msö6_sc›e_id
;

270 #ifde‡
__USE_MISC


272 
	sù_mªq


275 
ö_addr
 
	mimr_mu…üddr
;

278 
ö_addr
 
	mimr_öãrÁ˚
;

281 
	sù_mªq_sour˚


284 
ö_addr
 
	mimr_mu…üddr
;

287 
ö_addr
 
	mimr_öãrÁ˚
;

290 
ö_addr
 
	mimr_sour˚addr
;

294 #i‡!
__USE_KERNEL_IPV6_DEFS


296 
	sùv6_mªq


299 
ö6_addr
 
	mùv6mr_mu…üddr
;

302 
	mùv6mr_öãrÁ˚
;

306 #ifde‡
__USE_MISC


308 
	sgroup_ªq


311 
uöt32_t
 
	mgr_öãrÁ˚
;

314 
sockaddr_°‹age
 
	mgr_group
;

317 
	sgroup_sour˚_ªq


320 
uöt32_t
 
	mg§_öãrÁ˚
;

323 
sockaddr_°‹age
 
	mg§_group
;

326 
sockaddr_°‹age
 
	mg§_sour˚
;

331 
	sù_msfûãr


334 
ö_addr
 
	mimsf_mu…üddr
;

337 
ö_addr
 
	mimsf_öãrÁ˚
;

340 
uöt32_t
 
	mimsf_fmode
;

343 
uöt32_t
 
	mimsf_num§c
;

345 
ö_addr
 
	mimsf_¶i°
[1];

348 
	#IP_MSFILTER_SIZE
(
num§c
Ë( (
ù_msfûãr
) \

349 -  (
ö_addr
) \

350 + (
num§c
Ë*  (
ö_addr
))

	)

352 
	sgroup_fûãr


355 
uöt32_t
 
	mgf_öãrÁ˚
;

358 
sockaddr_°‹age
 
	mgf_group
;

361 
uöt32_t
 
	mgf_fmode
;

364 
uöt32_t
 
	mgf_num§c
;

366 
sockaddr_°‹age
 
	mgf_¶i°
[1];

369 
	#GROUP_FILTER_SIZE
(
num§c
Ë( (
group_fûãr
) \

370 -  (
sockaddr_°‹age
) \

371 + ((
num§c
) \

372 *  (
sockaddr_°‹age
)))

	)

382 
uöt32_t
 
	$¡ohl
 (
uöt32_t
 
__√é⁄g
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

383 
uöt16_t
 
	$¡ohs
 (
uöt16_t
 
__√tsh‹t
)

384 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

385 
uöt32_t
 
	$ht⁄l
 (
uöt32_t
 
__ho°l⁄g
)

386 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

387 
uöt16_t
 
	$ht⁄s
 (
uöt16_t
 
__ho°sh‹t
)

388 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

390 
	~<ídün.h
>

393 
	~<bôs/byãsw≠.h
>

394 
	~<bôs/uöä-idítôy.h
>

396 #ifde‡
__OPTIMIZE__


400 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


403 
	#¡ohl
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

404 
	#¡ohs
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

405 
	#ht⁄l
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

406 
	#ht⁄s
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

408 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


409 
	#¡ohl
(
x
Ë
	`__bsw≠_32
 (x)

	)

410 
	#¡ohs
(
x
Ë
	`__bsw≠_16
 (x)

	)

411 
	#ht⁄l
(
x
Ë
	`__bsw≠_32
 (x)

	)

412 
	#ht⁄s
(
x
Ë
	`__bsw≠_16
 (x)

	)

417 #ifde‡
__GNUC__


418 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

419 (
__exãnsi⁄__
 \

420 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

421 
__a
->
__ö6_u
.
__u6_addr32
[0] == 0 \

422 && 
__a
->
__ö6_u
.
__u6_addr32
[1] == 0 \

423 && 
__a
->
__ö6_u
.
__u6_addr32
[2] == 0 \

424 && 
__a
->
__ö6_u
.
__u6_addr32
[3] =0; 
	}
}))

	)

426 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

427 (
__exãnsi⁄__
 \

428 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

429 
__a
->
__ö6_u
.
__u6_addr32
[0] == 0 \

430 && 
__a
->
__ö6_u
.
__u6_addr32
[1] == 0 \

431 && 
__a
->
__ö6_u
.
__u6_addr32
[2] == 0 \

432 && 
__a
->
__ö6_u
.
__u6_addr32
[3] =
	`ht⁄l
 (1); }))

	)

434 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

435 (
__exãnsi⁄__
 \

436 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

437 (
__a
->
__ö6_u
.
__u6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„800000); }))

	)

439 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

440 (
__exãnsi⁄__
 \

441 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

442 (
__a
->
__ö6_u
.
__u6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„c00000); }))

	)

444 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

445 (
__exãnsi⁄__
 \

446 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

447 
__a
->
__ö6_u
.
__u6_addr32
[0] == 0 \

448 && 
__a
->
__ö6_u
.
__u6_addr32
[1] == 0 \

449 && 
__a
->
__ö6_u
.
__u6_addr32
[2] =
	`ht⁄l
 (0xffff); }))

	)

451 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

452 (
__exãnsi⁄__
 \

453 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

454 
__a
->
__ö6_u
.
__u6_addr32
[0] == 0 \

455 && 
__a
->
__ö6_u
.
__u6_addr32
[1] == 0 \

456 && 
__a
->
__ö6_u
.
__u6_addr32
[2] == 0 \

457 && 
	`¡ohl
 (
__a
->
__ö6_u
.
__u6_addr32
[3]Ë> 1; }))

	)

459 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

460 (
__exãnsi⁄__
 \

461 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

462 c⁄° 
ö6_addr
 *
__b
 = (c⁄° ö6_add∏*Ë(
b
); \

463 
__a
->
__ö6_u
.
__u6_addr32
[0] =
__b
->__in6_u.__u6_addr32[0] \

464 && 
__a
->
__ö6_u
.
__u6_addr32
[1] =
__b
->__in6_u.__u6_addr32[1] \

465 && 
__a
->
__ö6_u
.
__u6_addr32
[2] =
__b
->__in6_u.__u6_addr32[2] \

466 && 
__a
->
__ö6_u
.
__u6_addr32
[3] =
__b
->__ö6_u.__u6_addr32[3]; }))

	)

468 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

469 (((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0 \

470 && ((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0 \

471 && ((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0 \

472 && ((c⁄° 
uöt32_t
 *Ë(
a
))[3] =0)

	)

474 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

475 (((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0 \

476 && ((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0 \

477 && ((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0 \

478 && ((c⁄° 
uöt32_t
 *Ë(
a
))[3] =
	`ht⁄l
 (1))

	)

480 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

481 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

482 =
	`ht⁄l
 (0x„800000))

	)

484 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

485 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

486 =
	`ht⁄l
 (0x„c00000))

	)

488 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

489 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0) \

490 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0) \

491 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] =
	`ht⁄l
 (0xffff)))

	)

493 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

494 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0) \

495 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0) \

496 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0) \

497 && (
	`¡ohl
 (((c⁄° 
uöt32_t
 *Ë(
a
))[3]Ë> 1))

	)

499 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

500 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] =((c⁄° uöt32_à*Ë(
b
))[0]) \

501 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] =((c⁄° uöt32_à*Ë(
b
))[1]) \

502 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] =((c⁄° uöt32_à*Ë(
b
))[2]) \

503 && (((c⁄° 
uöt32_t
 *Ë(
a
))[3] =((c⁄° uöt32_à*Ë(
b
))[3]))

	)

506 
	#IN6_IS_ADDR_MULTICAST
(
a
Ë(((c⁄° 
uöt8_t
 *Ë◊))[0] =0xff)

	)

508 #ifde‡
__USE_MISC


510 
	$bödªsvp‹t
 (
__sockfd
, 
sockaddr_ö
 *
__sock_ö
Ë
__THROW
;

513 
	$bödªsvp‹t6
 (
__sockfd
, 
sockaddr_ö6
 *
__sock_ö
)

514 
__THROW
;

518 
	#IN6_IS_ADDR_MC_NODELOCAL
(
a
) \

519 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

520 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x1))

	)

522 
	#IN6_IS_ADDR_MC_LINKLOCAL
(
a
) \

523 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

524 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x2))

	)

526 
	#IN6_IS_ADDR_MC_SITELOCAL
(
a
) \

527 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

528 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x5))

	)

530 
	#IN6_IS_ADDR_MC_ORGLOCAL
(
a
) \

531 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

532 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x8))

	)

534 
	#IN6_IS_ADDR_MC_GLOBAL
(
a
) \

535 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

536 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0xe))

	)

539 #ifde‡
__USE_GNU


540 
cmsghdr
;

542 #i‡!
__USE_KERNEL_IPV6_DEFS


544 
	sö6_pktöfo


546 
ö6_addr
 
ùi6_addr
;

547 
ùi6_ifödex
;

551 
	sù6_mtuöfo


553 
sockaddr_ö6
 
ù6m_addr
;

554 
uöt32_t
 
ù6m_mtu
;

559 
	$öë6_›ti⁄_•a˚
 (
__nbyãs
)

560 
__THROW
 
__©åibuã_dïªˇãd__
;

561 
	$öë6_›ti⁄_öô
 (*
__bp
, 
cmsghdr
 **
__cmsgp
,

562 
__ty≥
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

563 
	$öë6_›ti⁄_≠≥nd
 (
cmsghdr
 *
__cmsg
,

564 c⁄° 
uöt8_t
 *
__ty≥p
, 
__mu…x
,

565 
__∂usy
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

566 
uöt8_t
 *
	$öë6_›ti⁄_Æloc
 (
cmsghdr
 *
__cmsg
, 
__d©Æí
,

567 
__mu…x
, 
__∂usy
)

568 
__THROW
 
__©åibuã_dïªˇãd__
;

569 
	$öë6_›ti⁄_√xt
 (c⁄° 
cmsghdr
 *
__cmsg
,

570 
uöt8_t
 **
__çåp
)

571 
__THROW
 
__©åibuã_dïªˇãd__
;

572 
	$öë6_›ti⁄_föd
 (c⁄° 
cmsghdr
 *
__cmsg
,

573 
uöt8_t
 **
__çåp
, 
__ty≥
)

574 
__THROW
 
__©åibuã_dïªˇãd__
;

578 
	$öë6_›t_öô
 (*
__extbuf
, 
sockÀn_t
 
__exéí
Ë
__THROW
;

579 
	$öë6_›t_≠≥nd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

580 
uöt8_t
 
__ty≥
, 
sockÀn_t
 
__Àn
, uöt8_à
__Æign
,

581 **
__d©abuÂ
Ë
__THROW
;

582 
	$öë6_›t_föish
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
)

583 
__THROW
;

584 
	$öë6_›t_£t_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

585 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

586 
	$öë6_›t_√xt
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

587 
uöt8_t
 *
__ty≥p
, 
sockÀn_t
 *
__À≈
,

588 **
__d©abuÂ
Ë
__THROW
;

589 
	$öë6_›t_föd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

590 
uöt8_t
 
__ty≥
, 
sockÀn_t
 *
__À≈
,

591 **
__d©abuÂ
Ë
__THROW
;

592 
	$öë6_›t_gë_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

593 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

597 
sockÀn_t
 
	$öë6_πh_•a˚
 (
__ty≥
, 
__£gmíts
Ë
__THROW
;

598 *
	$öë6_πh_öô
 (*
__bp
, 
sockÀn_t
 
__bp_Àn
, 
__ty≥
,

599 
__£gmíts
Ë
__THROW
;

600 
	$öë6_πh_add
 (*
__bp
, c⁄° 
ö6_addr
 *
__addr
Ë
__THROW
;

601 
	$öë6_πh_ªvî£
 (c⁄° *
__ö
, *
__out
Ë
__THROW
;

602 
	$öë6_πh_£gmíts
 (c⁄° *
__bp
Ë
__THROW
;

603 
ö6_addr
 *
	$öë6_πh_gëaddr
 (c⁄° *
__bp
, 
__ödex
)

604 
__THROW
;

610 
	$gëùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

611 
ö_addr
 
__group
, 
uöt32_t
 *
__fmode
,

612 
uöt32_t
 *
__num§c
, 
ö_addr
 *
__¶i°
)

613 
__THROW
;

616 
	$£tùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

617 
ö_addr
 
__group
, 
uöt32_t
 
__fmode
,

618 
uöt32_t
 
__num§c
,

619 c⁄° 
ö_addr
 *
__¶i°
)

620 
__THROW
;

624 
	$gësour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

625 c⁄° 
sockaddr
 *
__group
,

626 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 *
__fmode
,

627 
uöt32_t
 *
__num§c
,

628 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

631 
	$£tsour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

632 c⁄° 
sockaddr
 *
__group
,

633 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 
__fmode
,

634 
uöt32_t
 
__num§c
,

635 c⁄° 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

638 
__END_DECLS


	@/usr/include/pthread.h

18 #i‚de‡
_PTHREAD_H


19 
	#_PTHREAD_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<sched.h
>

23 
	~<time.h
>

25 
	~<bôs/ídün.h
>

26 
	~<bôs/±hªadty≥s.h
>

27 
	~<bôs/£tjmp.h
>

28 
	~<bôs/w‹dsize.h
>

29 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

30 
	~<bôs/ty≥s/__sig£t_t.h
>

31 
	~<bôs/ty≥s/°ru˘___jmp_buf_èg.h
>

32 #ifde‡
__USE_MISC


33 
	~<bôs/±hªad_°ack_mö-dy«mic.h
>

39 
	mPTHREAD_CREATE_JOINABLE
,

40 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

41 
	mPTHREAD_CREATE_DETACHED


42 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

49 
	mPTHREAD_MUTEX_TIMED_NP
,

50 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

51 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

52 
	mPTHREAD_MUTEX_ADAPTIVE_NP


53 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


55 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

56 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

57 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

58 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


60 #ifde‡
__USE_GNU


62 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


67 #ifde‡
__USE_XOPEN2K


71 
	mPTHREAD_MUTEX_STALLED
,

72 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

73 
	mPTHREAD_MUTEX_ROBUST
,

74 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


79 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


83 
	mPTHREAD_PRIO_NONE
,

84 
	mPTHREAD_PRIO_INHERIT
,

85 
	mPTHREAD_PRIO_PROTECT


90 
	#PTHREAD_MUTEX_INITIALIZER
 \

91 { { 
	`__PTHREAD_MUTEX_INITIALIZER
 (
PTHREAD_MUTEX_TIMED_NP
Ë} }

	)

92 #ifde‡
__USE_GNU


93 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

94 { { 
	`__PTHREAD_MUTEX_INITIALIZER
 (
PTHREAD_MUTEX_RECURSIVE_NP
Ë} }

	)

95 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

96 { { 
	`__PTHREAD_MUTEX_INITIALIZER
 (
PTHREAD_MUTEX_ERRORCHECK_NP
Ë} }

	)

97 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

98 { { 
	`__PTHREAD_MUTEX_INITIALIZER
 (
PTHREAD_MUTEX_ADAPTIVE_NP
Ë} }

	)

103 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


106 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

107 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

108 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

109 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


114 
	#PTHREAD_RWLOCK_INITIALIZER
 \

115 { { 
	`__PTHREAD_RWLOCK_INITIALIZER
 (
PTHREAD_RWLOCK_DEFAULT_NP
Ë} }

	)

116 #ifde‡
__USE_GNU


117 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

118 { { 
	`__PTHREAD_RWLOCK_INITIALIZER
 (
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
Ë} }

	)

126 
	mPTHREAD_INHERIT_SCHED
,

127 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

128 
	mPTHREAD_EXPLICIT_SCHED


129 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

136 
	mPTHREAD_SCOPE_SYSTEM
,

137 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

138 
	mPTHREAD_SCOPE_PROCESS


139 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

146 
	mPTHREAD_PROCESS_PRIVATE
,

147 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

148 
	mPTHREAD_PROCESS_SHARED


149 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

155 
	#PTHREAD_COND_INITIALIZER
 { { {0}, {0}, {0, 0}, {0, 0}, 0, 0, {0, 0} } }

	)

159 
	s_±hªad_˛ónup_buf„r


161 (*
	m__routöe
) (*);

162 *
	m__¨g
;

163 
	m__ˇn˚…y≥
;

164 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

170 
	mPTHREAD_CANCEL_ENABLE
,

171 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

172 
	mPTHREAD_CANCEL_DISABLE


173 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

177 
	mPTHREAD_CANCEL_DEFERRED
,

178 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

179 
	mPTHREAD_CANCEL_ASYNCHRONOUS


180 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

182 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

186 
	#PTHREAD_ONCE_INIT
 0

	)

189 #ifde‡
__USE_XOPEN2K


193 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

197 
__BEGIN_DECLS


202 
	$±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

203 c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

204 *(*
__°¨t_routöe
) (*),

205 *
__ª°ri˘
 
__¨g
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 3));

211 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

219 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

221 #ifde‡
__USE_GNU


224 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

226 #i‚de‡
__USE_TIME_BITS64


233 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

234 c⁄° 
time•ec
 *
__ab°ime
);

243 
	`±hªad_˛ockjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

244 
˛ockid_t
 
__˛ockid
,

245 c⁄° 
time•ec
 *
__ab°ime
);

247 #ifde‡
__REDIRECT


248 
	`__REDIRECT
 (
±hªad_timedjoö_≈
,

249 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

250 c⁄° 
time•ec
 *
__ab°ime
),

251 
__±hªad_timedjoö_≈64
);

253 
	`__REDIRECT
 (
±hªad_˛ockjoö_≈
,

254 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

255 
˛ockid_t
 
__˛ockid
,

256 c⁄° 
time•ec
 *
__ab°ime
),

257 
__±hªad_˛ockjoö_≈64
);

259 
	#±hªad_timedjoö_≈
 
__±hªad_timedjoö_≈64


	)

260 
	#±hªad_˛ockjoö_≈
 
__±hªad_˛ockjoö_≈64


	)

269 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

273 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

276 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
)

277 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

285 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

288 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

289 
__THROW
 
	`__n⁄nuŒ
 ((1));

292 
	$±hªad_©å_gëdëach°©e
 (c⁄° 
±hªad_©å_t
 *
__©å
,

293 *
__dëach°©e
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

297 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

298 
__dëach°©e
)

299 
__THROW
 
	`__n⁄nuŒ
 ((1));

303 
	$±hªad_©å_gëgu¨dsize
 (c⁄° 
±hªad_©å_t
 *
__©å
,

304 
size_t
 *
__gu¨dsize
)

305 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

308 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

309 
size_t
 
__gu¨dsize
)

310 
__THROW
 
	`__n⁄nuŒ
 ((1));

314 
	$±hªad_©å_gësched∑øm
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

315 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

316 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

319 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

320 c⁄° 
sched_∑øm
 *
__ª°ri˘


321 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

324 
	$±hªad_©å_gëschedpﬁicy
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


325 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

326 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

329 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

330 
__THROW
 
	`__n⁄nuŒ
 ((1));

333 
	$±hªad_©å_gëöhîôsched
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


334 
__©å
, *
__ª°ri˘
 
__öhîô
)

335 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

338 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

339 
__öhîô
)

340 
__THROW
 
	`__n⁄nuŒ
 ((1));

344 
	$±hªad_©å_gësc›e
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

345 *
__ª°ri˘
 
__sc›e
)

346 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

349 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

350 
__THROW
 
	`__n⁄nuŒ
 ((1));

353 
	$±hªad_©å_gë°ackaddr
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


354 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

355 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

361 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

362 *
__°ackaddr
)

363 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

366 
	$±hªad_©å_gë°acksize
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


367 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

368 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

373 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

374 
size_t
 
__°acksize
)

375 
__THROW
 
	`__n⁄nuŒ
 ((1));

377 #ifde‡
__USE_XOPEN2K


379 
	$±hªad_©å_gë°ack
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

380 **
__ª°ri˘
 
__°ackaddr
,

381 
size_t
 *
__ª°ri˘
 
__°acksize
)

382 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

387 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

388 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

391 #ifde‡
__USE_GNU


394 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

395 
size_t
 
__˝u£tsize
,

396 c⁄° 
˝u_£t_t
 *
__˝u£t
)

397 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

401 
	$±hªad_©å_gëafföôy_≈
 (c⁄° 
±hªad_©å_t
 *
__©å
,

402 
size_t
 
__˝u£tsize
,

403 
˝u_£t_t
 *
__˝u£t
)

404 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

407 
	$±hªad_gë©å_deÁu…_≈
 (
±hªad_©å_t
 *
__©å
)

408 
__THROW
 
	`__n⁄nuŒ
 ((1));

411 
	`±hªad_©å_£tsigmask_≈
 (
±hªad_©å_t
 *
__©å
,

412 c⁄° 
__sig£t_t
 *
sigmask
);

417 
	`±hªad_©å_gësigmask_≈
 (c⁄° 
±hªad_©å_t
 *
__©å
,

418 
__sig£t_t
 *
sigmask
);

422 
	#PTHREAD_ATTR_NO_SIGMASK_NP
 (-1)

	)

426 
	$±hªad_£èâr_deÁu…_≈
 (c⁄° 
±hªad_©å_t
 *
__©å
)

427 
__THROW
 
	`__n⁄nuŒ
 ((1));

432 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

433 
__THROW
 
	`__n⁄nuŒ
 ((2));

441 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

442 c⁄° 
sched_∑øm
 *
__∑øm
)

443 
__THROW
 
	`__n⁄nuŒ
 ((3));

446 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

447 *
__ª°ri˘
 
__pﬁicy
,

448 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

449 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

452 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

453 
__THROW
;

456 #ifde‡
__USE_GNU


458 
	$±hªad_gë«me_≈
 (
±hªad_t
 
__èrgë_thªad
, *
__buf
,

459 
size_t
 
__buÊí
)

460 
__THROW
 
	`__n⁄nuŒ
 ((2));

463 
	$±hªad_£äame_≈
 (
±hªad_t
 
__èrgë_thªad
, c⁄° *
__«me
)

464 
__THROW
 
	`__n⁄nuŒ
 ((2));

468 #ifde‡
__USE_UNIX98


470 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

473 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

476 #ifde‡
__USE_GNU


477 
	$±hªad_yõld
 (Ë
__THROW
;

478 #ifde‡
__REDIRECT_NTH


479 
	`__REDIRECT_NTH
 (
±hªad_yõld
, (), 
sched_yõld
)

480 
	`__©åibuã_dïªˇãd_msg__
 ("\
_yield is deprecated, use sched_yield instead");

483 
	#±hªad_yõld
 
sched_yõld


	)

489 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

490 c⁄° 
˝u_£t_t
 *
__˝u£t
)

491 
__THROW
 
	`__n⁄nuŒ
 ((3));

494 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

495 
˝u_£t_t
 *
__˝u£t
)

496 
__THROW
 
	`__n⁄nuŒ
 ((3));

509 
	$±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

510 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

521 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

525 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

528 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

533 
	`±hªad_ã°ˇn˚l
 ();

538 
	s__ˇn˚l_jmp_buf_èg


540 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

541 
__mask_was_ßved
;

546 
__ˇn˚l_jmp_buf_èg
 
__ˇn˚l_jmp_buf
[1];

547 *
__∑d
[4];

548 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

551 #i‚de‡
__˛ónup_f˘_©åibuã


552 
	#__˛ónup_f˘_©åibuã


	)

557 
	s__±hªad_˛ónup_‰ame


559 (*
__ˇn˚l_routöe
) (*);

560 *
__ˇn˚l_¨g
;

561 
__do_ô
;

562 
__ˇn˚l_ty≥
;

565 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


566 #ifde‡
__˝lu•lus


568 ˛as†
	c__±hªad_˛ónup_˛ass


570 (*
__ˇn˚l_routöe
) (*);

571 *
__ˇn˚l_¨g
;

572 
__do_ô
;

573 
__ˇn˚l_ty≥
;

575 
public
:

576 
	$__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

577 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

578 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

579 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

580 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

581 &
__ˇn˚l_ty≥
); 
	}
}

582 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

592 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

594 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

598 
	#±hªad_˛ónup_p›
(
execuã
) \

599 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

600 } 0)

	)

602 #ifde‡
__USE_GNU


606 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

608 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

609 
__˛‰ame
.
	`__de„r
 ()

	)

614 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

615 
__˛‰ame
.
	`__ª°‹e
 (); \

616 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

617 } 0)

	)

624 
__exã∫_ölöe
 

625 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

627 i‡(
__‰ame
->
__do_ô
)

628 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

629 
	}
}

638 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

640 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

641 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

642 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

643 .
__do_ô
 = 1 };

	)

647 
	#±hªad_˛ónup_p›
(
execuã
) \

648 
__˛‰ame
.
__do_ô
 = (
execuã
); \

649 } 0)

	)

651 #ifde‡
__USE_GNU


655 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

657 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

658 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

659 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

660 .
__do_ô
 = 1 }; \

661 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

662 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

667 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

668 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

669 
__˛‰ame
.
__do_ô
 = (
execuã
); \

670 } 0)

	)

681 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

683 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

684 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

685 *
__ˇn˚l_¨g
 = (
¨g
); \

686 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp_ˇn˚l
 (
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, \

688 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

690 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

691 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

695 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

696 dÿ{

	)

697 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

698 
__˛ónup_f˘_©åibuã
;

702 
	#±hªad_˛ónup_p›
(
execuã
) \

705 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

706 i‡(
execuã
) \

707 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

708 } 0)

	)

709 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

710 
__˛ónup_f˘_©åibuã
;

712 #ifde‡
__USE_GNU


716 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

718 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

719 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

720 *
__ˇn˚l_¨g
 = (
¨g
); \

721 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp_ˇn˚l
 (
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, \

723 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

725 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

726 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

730 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

731 dÿ{

	)

732 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

733 
__˛ónup_f˘_©åibuã
;

738 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

741 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

742 i‡(
execuã
) \

743 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

744 
	}
} 0)

	)

745 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

746 
__˛ónup_f˘_©åibuã
;

750 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

751 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

752 #i‚de‡
SHARED


753 
	`__©åibuã__
 ((
__wók__
))

765 #i‡
	`__GNUC_PREREQ
 (11, 0)

766 
	`__REDIRECT_NTHNL
 (
__sig£tjmp_ˇn˚l
,

767 (
__ˇn˚l_jmp_buf_èg
 
__ív
[1],

768 
__ßvemask
),

769 
__sig£tjmp
Ë
__©åibuã_ªtu∫s_twi˚__
;

771 
	#__sig£tjmp_ˇn˚l
(
ív
, 
ßvemask
) \

772 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *Ë(*Ë(
ív
), (
ßvemask
))

	)

773 
	$__sig£tjmp
 (
__jmp_buf_èg
 
__ív
[1],

774 
__ßvemask
Ë
__THROWNL
;

781 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

782 c⁄° 
±hªad_muãx©å_t
 *
__muãx©å
)

783 
__THROW
 
	`__n⁄nuŒ
 ((1));

786 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

787 
__THROW
 
	`__n⁄nuŒ
 ((1));

790 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

791 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

794 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

795 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

797 #ifde‡
__USE_XOPEN2K


799 #i‚de‡
__USE_TIME_BITS64


800 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

801 c⁄° 
time•ec
 *
__ª°ri˘


802 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

804 #ifde‡
__REDIRECT_NTHNL


805 
	`__REDIRECT_NTHNL
 (
±hªad_muãx_timedlock
,

806 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

807 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
),

808 
__±hªad_muãx_timedlock64
Ë
	`__n⁄nuŒ
 ((1, 2));

810 
	#±hªad_muãx_timedlock
 
__±hªad_muãx_timedlock64


	)

815 #ifde‡
__USE_GNU


816 #i‚de‡
__USE_TIME_BITS64


817 
	$±hªad_muãx_˛ocklock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

818 
˛ockid_t
 
__˛ockid
,

819 c⁄° 
time•ec
 *
__ª°ri˘


820 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 3));

822 #ifde‡
__REDIRECT_NTHNL


823 
	`__REDIRECT_NTHNL
 (
±hªad_muãx_˛ocklock
,

824 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

825 
˛ockid_t
 
__˛ockid
,

826 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
),

827 
__±hªad_muãx_˛ocklock64
Ë
	`__n⁄nuŒ
 ((1, 3));

829 
	#±hªad_muãx_˛ocklock
 
__±hªad_muãx_˛ocklock64


	)

835 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

836 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

840 
	$±hªad_muãx_gë¥io˚ûög
 (c⁄° 
±hªad_muãx_t
 *

841 
__ª°ri˘
 
__muãx
,

842 *
__ª°ri˘
 
__¥io˚ûög
)

843 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

847 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

848 
__¥io˚ûög
,

849 *
__ª°ri˘
 
__ﬁd_˚ûög
)

850 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

853 #ifde‡
__USE_XOPEN2K8


855 
	$±hªad_muãx_c⁄si°ít
 (
±hªad_muãx_t
 *
__muãx
)

856 
__THROW
 
	`__n⁄nuŒ
 ((1));

857 #ifde‡
__USE_GNU


858 #ifde‡
__REDIRECT_NTH


859 
	`__REDIRECT_NTH
 (
±hªad_muãx_c⁄si°ít_≈
, (
±hªad_muãx_t
 *),

860 
±hªad_muãx_c⁄si°ít
Ë
	`__n⁄nuŒ
 ((1))

861 
	`__©åibuã_dïªˇãd_msg__
 ("\
_mutex_consistent_np is deprecated, useÖthread_mutex_consistent");

864 
	#±hªad_muãx_c⁄si°ít_≈
 
±hªad_muãx_c⁄si°ít


	)

874 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

875 
__THROW
 
	`__n⁄nuŒ
 ((1));

878 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

879 
__THROW
 
	`__n⁄nuŒ
 ((1));

882 
	$±hªad_muãx©å_gëpsh¨ed
 (c⁄° 
±hªad_muãx©å_t
 *

883 
__ª°ri˘
 
__©å
,

884 *
__ª°ri˘
 
__psh¨ed
)

885 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

888 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

889 
__psh¨ed
)

890 
__THROW
 
	`__n⁄nuŒ
 ((1));

892 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


894 
	$±hªad_muãx©å_gëty≥
 (c⁄° 
±hªad_muãx©å_t
 *
__ª°ri˘


895 
__©å
, *
__ª°ri˘
 
__köd
)

896 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

901 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

902 
__THROW
 
	`__n⁄nuŒ
 ((1));

906 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (c⁄° 
±hªad_muãx©å_t
 *

907 
__ª°ri˘
 
__©å
,

908 *
__ª°ri˘
 
__¥Ÿocﬁ
)

909 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

913 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

914 
__¥Ÿocﬁ
)

915 
__THROW
 
	`__n⁄nuŒ
 ((1));

918 
	$±hªad_muãx©å_gë¥io˚ûög
 (c⁄° 
±hªad_muãx©å_t
 *

919 
__ª°ri˘
 
__©å
,

920 *
__ª°ri˘
 
__¥io˚ûög
)

921 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

924 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

925 
__¥io˚ûög
)

926 
__THROW
 
	`__n⁄nuŒ
 ((1));

928 #ifde‡
__USE_XOPEN2K


930 
	$±hªad_muãx©å_gërobu°
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

931 *
__robu°√ss
)

932 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

933 #ifde‡
__USE_GNU


934 #ifde‡
__REDIRECT_NTH


935 
	`__REDIRECT_NTH
 (
±hªad_muãx©å_gërobu°_≈
,

936 (
±hªad_muãx©å_t
 *, *),

937 
±hªad_muãx©å_gërobu°
Ë
	`__n⁄nuŒ
 ((1))

938 
	`__©åibuã_dïªˇãd_msg__
 ("\
_mutexattr_getrobust_np is deprecated, useÖthread_mutexattr_getrobust");

941 
	#±hªad_muãx©å_gërobu°_≈
 
±hªad_muãx©å_gërobu°


	)

946 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

947 
__robu°√ss
)

948 
__THROW
 
	`__n⁄nuŒ
 ((1));

949 #ifde‡
__USE_GNU


950 #ifde‡
__REDIRECT_NTH


951 
	`__REDIRECT_NTH
 (
±hªad_muãx©å_£åobu°_≈
,

952 (
±hªad_muãx©å_t
 *, ),

953 
±hªad_muãx©å_£åobu°
Ë
	`__n⁄nuŒ
 ((1))

954 
	`__©åibuã_dïªˇãd_msg__
 ("\
_mutexattr_setrobust_np is deprecated, useÖthread_mutexattr_setrobust");

957 
	#±hªad_muãx©å_£åobu°_≈
 
±hªad_muãx©å_£åobu°


	)

962 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


967 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

968 c⁄° 
±hªad_rwlock©å_t
 *
__ª°ri˘


969 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

972 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

973 
__THROW
 
	`__n⁄nuŒ
 ((1));

976 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

977 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

980 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

981 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

983 #ifde‡
__USE_XOPEN2K


985 #i‚de‡
__USE_TIME_BITS64


986 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

987 c⁄° 
time•ec
 *
__ª°ri˘


988 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

990 #ifde‡
__REDIRECT_NTHNL


991 
	`__REDIRECT_NTHNL
 (
±hªad_rwlock_timedrdlock
,

992 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

993 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
),

994 
__±hªad_rwlock_timedrdlock64
)

995 
	`__n⁄nuŒ
 ((1, 2));

997 
	#±hªad_rwlock_timedrdlock
 
__±hªad_rwlock_timedrdlock64


	)

1002 #ifde‡
__USE_GNU


1003 #i‚de‡
__USE_TIME_BITS64


1004 
	$±hªad_rwlock_˛ockrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

1005 
˛ockid_t
 
__˛ockid
,

1006 c⁄° 
time•ec
 *
__ª°ri˘


1007 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 3));

1009 #ifde‡
__REDIRECT_NTHNL


1010 
	`__REDIRECT_NTHNL
 (
±hªad_rwlock_˛ockrdlock
,

1011 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

1012 
˛ockid_t
 
__˛ockid
,

1013 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
),

1014 
__±hªad_rwlock_˛ockrdlock64
)

1015 
	`__n⁄nuŒ
 ((1, 3));

1017 
	#±hªad_rwlock_˛ockrdlock
 
__±hªad_rwlock_˛ockrdlock64


	)

1023 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

1024 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1027 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

1028 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1030 #ifde‡
__USE_XOPEN2K


1032 #i‚de‡
__USE_TIME_BITS64


1033 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

1034 c⁄° 
time•ec
 *
__ª°ri˘


1035 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

1037 #ifde‡
__REDIRECT_NTHNL


1038 
	`__REDIRECT_NTHNL
 (
±hªad_rwlock_timedwæock
,

1039 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

1040 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
),

1041 
__±hªad_rwlock_timedwæock64
)

1042 
	`__n⁄nuŒ
 ((1, 2));

1044 
	#±hªad_rwlock_timedwæock
 
__±hªad_rwlock_timedwæock64


	)

1049 #ifde‡
__USE_GNU


1050 #i‚de‡
__USE_TIME_BITS64


1051 
	$±hªad_rwlock_˛ockwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

1052 
˛ockid_t
 
__˛ockid
,

1053 c⁄° 
time•ec
 *
__ª°ri˘


1054 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 3));

1057 #ifde‡
__REDIRECT_NTHNL


1058 
	`__REDIRECT_NTHNL
 (
±hªad_rwlock_˛ockwæock
,

1059 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

1060 
˛ockid_t
 
__˛ockid
,

1061 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
),

1062 
__±hªad_rwlock_˛ockwæock64
)

1063 
	`__n⁄nuŒ
 ((1, 3));

1065 
	#±hªad_rwlock_˛ockwæock
 
__±hªad_rwlock_˛ockwæock64


	)

1071 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

1072 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1078 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

1079 
__THROW
 
	`__n⁄nuŒ
 ((1));

1082 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

1083 
__THROW
 
	`__n⁄nuŒ
 ((1));

1086 
	$±hªad_rwlock©å_gëpsh¨ed
 (c⁄° 
±hªad_rwlock©å_t
 *

1087 
__ª°ri˘
 
__©å
,

1088 *
__ª°ri˘
 
__psh¨ed
)

1089 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1092 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

1093 
__psh¨ed
)

1094 
__THROW
 
	`__n⁄nuŒ
 ((1));

1097 
	$±hªad_rwlock©å_gëköd_≈
 (c⁄° 
±hªad_rwlock©å_t
 *

1098 
__ª°ri˘
 
__©å
,

1099 *
__ª°ri˘
 
__¥ef
)

1100 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1103 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

1104 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1112 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

1113 c⁄° 
±hªad_c⁄d©å_t
 *
__ª°ri˘
 
__c⁄d_©å
)

1114 
__THROW
 
	`__n⁄nuŒ
 ((1));

1117 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

1118 
__THROW
 
	`__n⁄nuŒ
 ((1));

1121 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

1122 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1125 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

1126 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1133 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

1134 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

1135 
	`__n⁄nuŒ
 ((1, 2));

1144 #i‚de‡
__USE_TIME_BITS64


1145 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

1146 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

1147 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
)

1148 
	`__n⁄nuŒ
 ((1, 2, 3));

1150 #ifde‡
__REDIRECT


1151 
	`__REDIRECT
 (
±hªad_c⁄d_timedwaô
,

1152 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

1153 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

1154 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
),

1155 
__±hªad_c⁄d_timedwaô64
)

1156 
	`__n⁄nuŒ
 ((1, 2, 3));

1158 
	#±hªad_c⁄d_timedwaô
 
__±hªad_c⁄d_timedwaô64


	)

1162 #ifde‡
__USE_GNU


1170 #i‚de‡
__USE_TIME_BITS64


1171 
	$±hªad_c⁄d_˛ockwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

1172 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

1173 
__˛ockid_t
 
__˛ock_id
,

1174 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
)

1175 
	`__n⁄nuŒ
 ((1, 2, 4));

1177 #ifde‡
__REDIRECT


1178 
	`__REDIRECT
 (
±hªad_c⁄d_˛ockwaô
,

1179 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

1180 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

1181 
__˛ockid_t
 
__˛ock_id
,

1182 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
),

1183 
__±hªad_c⁄d_˛ockwaô64
)

1184 
	`__n⁄nuŒ
 ((1, 2, 4));

1186 
	#±hªad_c⁄d_˛ockwaô
 
__±hªad_c⁄d_˛ockwaô64


	)

1194 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

1195 
__THROW
 
	`__n⁄nuŒ
 ((1));

1198 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

1199 
__THROW
 
	`__n⁄nuŒ
 ((1));

1202 
	$±hªad_c⁄d©å_gëpsh¨ed
 (c⁄° 
±hªad_c⁄d©å_t
 *

1203 
__ª°ri˘
 
__©å
,

1204 *
__ª°ri˘
 
__psh¨ed
)

1205 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1208 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

1209 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1211 #ifde‡
__USE_XOPEN2K


1213 
	$±hªad_c⁄d©å_gë˛ock
 (c⁄° 
±hªad_c⁄d©å_t
 *

1214 
__ª°ri˘
 
__©å
,

1215 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1216 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1219 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1220 
__˛ockid_t
 
__˛ock_id
)

1221 
__THROW
 
	`__n⁄nuŒ
 ((1));

1225 #ifde‡
__USE_XOPEN2K


1230 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1231 
__THROW
 
	`__n⁄nuŒ
 ((1));

1234 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1235 
__THROW
 
	`__n⁄nuŒ
 ((1));

1238 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1239 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1242 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1243 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1246 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1247 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1254 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1255 c⁄° 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1256 
__©å
, 
__cou¡
)

1257 
__THROW
 
	`__n⁄nuŒ
 ((1));

1260 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1261 
__THROW
 
	`__n⁄nuŒ
 ((1));

1264 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1265 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1269 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1270 
__THROW
 
	`__n⁄nuŒ
 ((1));

1273 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1274 
__THROW
 
	`__n⁄nuŒ
 ((1));

1277 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (c⁄° 
±hªad_b¨rõøâr_t
 *

1278 
__ª°ri˘
 
__©å
,

1279 *
__ª°ri˘
 
__psh¨ed
)

1280 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1283 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1284 
__psh¨ed
)

1285 
__THROW
 
	`__n⁄nuŒ
 ((1));

1297 
	$±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1298 (*
__de°r_fun˘i⁄
) (*))

1299 
__THROW
 
	`__n⁄nuŒ
 ((1));

1302 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1305 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1308 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1309 c⁄° *
__poöãr
)

1310 
__THROW
 
	`__©å_ac˚ss_n⁄e
 (2);

1313 #ifde‡
__USE_XOPEN2K


1315 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1316 
__˛ockid_t
 *
__˛ock_id
)

1317 
__THROW
 
	`__n⁄nuŒ
 ((2));

1332 
	$±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1333 (*
__∑ª¡
) (),

1334 (*
__chûd
Ë()Ë
__THROW
;

1337 #ifde‡
__USE_EXTERN_INLINES


1339 
__exã∫_ölöe
 

1340 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1342  
__thªad1
 =
__thªad2
;

1343 
	}
}

1346 
	g__END_DECLS


	@/usr/include/stdio.h

23 #i‚de‡
_STDIO_H


24 
	#_STDIO_H
 1

	)

26 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

27 
	~<bôs/libc-hódî-°¨t.h
>

29 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	#__√ed___va_li°


	)

36 
	~<°d¨g.h
>

38 
	~<bôs/ty≥s.h
>

39 
	~<bôs/ty≥s/__Âos_t.h
>

40 
	~<bôs/ty≥s/__Âos64_t.h
>

41 
	~<bôs/ty≥s/__FILE.h
>

42 
	~<bôs/ty≥s/FILE.h
>

43 
	~<bôs/ty≥s/°ru˘_FILE.h
>

45 #ifde‡
__USE_GNU


46 
	~<bôs/ty≥s/cookõ_io_fun˘i⁄s_t.h
>

49 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


50 #ifde‡
__GNUC__


51 #i‚de‡
_VA_LIST_DEFINED


52 
__gnuc_va_li°
 
	tva_li°
;

53 
	#_VA_LIST_DEFINED


	)

56 
	~<°d¨g.h
>

60 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


61 #i‚de‡
__off_t_deföed


62 #i‚de‡
__USE_FILE_OFFSET64


63 
__off_t
 
	toff_t
;

65 
__off64_t
 
	toff_t
;

67 
	#__off_t_deföed


	)

69 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


70 
__off64_t
 
	toff64_t
;

71 
	#__off64_t_deföed


	)

75 #ifde‡
__USE_XOPEN2K8


76 #i‚de‡
__ssize_t_deföed


77 
__ssize_t
 
	tssize_t
;

78 
	#__ssize_t_deföed


	)

83 #i‚de‡
__USE_FILE_OFFSET64


84 
__Âos_t
 
	tÂos_t
;

86 
__Âos64_t
 
	tÂos_t
;

88 #ifde‡
__USE_LARGEFILE64


89 
__Âos64_t
 
	tÂos64_t
;

93 
	#_IOFBF
 0

	)

94 
	#_IOLBF
 1

	)

95 
	#_IONBF
 2

	)

99 
	#BUFSIZ
 8192

	)

104 
	#EOF
 (-1)

	)

109 
	#SEEK_SET
 0

	)

110 
	#SEEK_CUR
 1

	)

111 
	#SEEK_END
 2

	)

112 #ifde‡
__USE_GNU


113 
	#SEEK_DATA
 3

	)

114 
	#SEEK_HOLE
 4

	)

118 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


120 
	#P_tmpdú
 "/tmp"

	)

133 
	~<bôs/°dio_lim.h
>

136 #i‡
__GLIBC_USE
 (
ISOC2X
)

138 
	#_PRINTF_NAN_LEN_MAX
 4

	)

143 
FILE
 *
°dö
;

144 
FILE
 *
°dout
;

145 
FILE
 *
°dîr
;

147 
	#°dö
 
°dö


	)

148 
	#°dout
 
°dout


	)

149 
	#°dîr
 
°dîr


	)

152 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

154 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

156 #ifde‡
__USE_ATFILE


158 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

159 c⁄° *
__√w
Ë
__THROW
;

162 #ifde‡
__USE_GNU


164 
	#RENAME_NOREPLACE
 (1 << 0)

	)

165 
	#RENAME_EXCHANGE
 (1 << 1)

	)

166 
	#RENAME_WHITEOUT
 (1 << 2)

	)

170 
	$ª«mót2
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

171 c⁄° *
__√w
, 
__Êags
Ë
__THROW
;

178 
	`f˛o£
 (
FILE
 *
__°ªam
);

180 #unde‡
__©å_dóŒoc_f˛o£


181 
	#__©å_dóŒoc_f˛o£
 
	`__©å_dóŒoc
 (
f˛o£
, 1)

	)

187 #i‚de‡
__USE_FILE_OFFSET64


188 
FILE
 *
	$tmpfûe
 ()

189 
__©åibuã_mÆloc__
 
__©å_dóŒoc_f˛o£
 
__wur
;

191 #ifde‡
__REDIRECT


192 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
)

193 
__©åibuã_mÆloc__
 
__©å_dóŒoc_f˛o£
 
__wur
;

195 
	#tmpfûe
 
tmpfûe64


	)

199 #ifde‡
__USE_LARGEFILE64


200 
FILE
 *
	$tmpfûe64
 ()

201 
__©åibuã_mÆloc__
 
__©å_dóŒoc_f˛o£
 
__wur
;

205 *
	$tm≤am
 ([
L_tm≤am
]Ë
__THROW
 
__wur
;

207 #ifde‡
__USE_MISC


210 *
	$tm≤am_r
 (
__s
[
L_tm≤am
]Ë
__THROW
 
__wur
;

214 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


222 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

223 
__THROW
 
__©åibuã_mÆloc__
 
__wur
 
__©å_dóŒoc_‰ì
;

230 
	`fÊush
 (
FILE
 *
__°ªam
);

232 #ifde‡
__USE_MISC


239 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

242 #ifde‡
__USE_GNU


249 
	`f˛o£Æl
 ();

253 #i‚de‡
__USE_FILE_OFFSET64


258 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

259 c⁄° *
__ª°ri˘
 
__modes
)

260 
__©åibuã_mÆloc__
 
__©å_dóŒoc_f˛o£
 
__wur
;

265 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

266 c⁄° *
__ª°ri˘
 
__modes
,

267 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

269 #ifde‡
__REDIRECT


270 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

271 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

272 
__©åibuã_mÆloc__
 
__©å_dóŒoc_f˛o£
 
__wur
;

273 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

274 c⁄° *
__ª°ri˘
 
__modes
,

275 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

276 
__wur
;

278 
	#f›í
 
f›í64


	)

279 
	#‰e›í
 
‰e›í64


	)

282 #ifde‡
__USE_LARGEFILE64


283 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

284 c⁄° *
__ª°ri˘
 
__modes
)

285 
__©åibuã_mÆloc__
 
__©å_dóŒoc_f˛o£
 
__wur
;

286 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

287 c⁄° *
__ª°ri˘
 
__modes
,

288 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

291 #ifdef 
__USE_POSIX


293 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW


294 
__©åibuã_mÆloc__
 
__©å_dóŒoc_f˛o£
 
__wur
;

297 #ifdef 
__USE_GNU


300 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

301 c⁄° *
__ª°ri˘
 
__modes
,

302 
cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW


303 
__©åibuã_mÆloc__
 
__©å_dóŒoc_f˛o£
 
__wur
;

306 #i‡
deföed
 
__USE_XOPEN2K8
 || 
	`__GLIBC_USE
 (
LIB_EXT2
)

308 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

309 
__THROW
 
__©åibuã_mÆloc__
 
__©å_dóŒoc_f˛o£
 
__wur
;

314 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW


315 
__©åibuã_mÆloc__
 
__©å_dóŒoc_f˛o£
 
__wur
;

317 #ifde‡
_WCHAR_H


321 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW


322 
__©åibuã_mÆloc__
 
__©å_dóŒoc_f˛o£
;

328 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

332 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

333 
__modes
, 
size_t
 
__n
Ë
__THROW
;

335 #ifdef 
__USE_MISC


338 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

339 
size_t
 
__size
Ë
__THROW
;

342 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

350 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

351 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

356 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

358 
	$•rötf
 (*
__ª°ri˘
 
__s
,

359 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

365 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

366 
__gnuc_va_li°
 
__¨g
);

371 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
);

373 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

374 
__gnuc_va_li°
 
__¨g
Ë
__THROWNL
;

376 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


378 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

379 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

380 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

382 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

383 c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
)

384 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

387 #i‡
	`__GLIBC_USE
 (
LIB_EXT2
)

390 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

391 
__gnuc_va_li°
 
__¨g
)

392 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

393 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

394 c⁄° *
__ª°ri˘
 
__fmt
, ...)

395 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

396 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

397 c⁄° *
__ª°ri˘
 
__fmt
, ...)

398 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

401 #ifde‡
__USE_XOPEN2K8


403 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

404 
__gnuc_va_li°
 
__¨g
)

405 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

406 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

407 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

415 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

416 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

421 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

423 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

424 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

430 
	~<bôs/Êﬂä.h
>

431 #i‡!
	`__GLIBC_USE
 (
DEPRECATED_SCANF
Ë&& !
deföed
 
__LDBL_COMPAT
 \

432 && 
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 0

433 #ifde‡
__REDIRECT


434 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

435 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

436 
__isoc99_fsˇnf
Ë
__wur
;

437 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

438 
__isoc99_sˇnf
Ë
__wur
;

439 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

440 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

441 
__isoc99_ssˇnf
);

443 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

444 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

445 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

446 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

447 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

448 
	#fsˇnf
 
__isoc99_fsˇnf


	)

449 
	#sˇnf
 
__isoc99_sˇnf


	)

450 
	#ssˇnf
 
__isoc99_ssˇnf


	)

454 #ifdef 
__USE_ISOC99


459 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

460 
__gnuc_va_li°
 
__¨g
)

461 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

467 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
)

468 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

471 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

472 c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
)

473 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

476 #i‡!
	`__GLIBC_USE
 (
DEPRECATED_SCANF
)

477 #i‡
deföed
 
__REDIRECT
 && !deföed 
__LDBL_COMPAT
 \

478 && 
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 0

479 
	`__REDIRECT
 (
vfsˇnf
,

480 (
FILE
 *
__ª°ri˘
 
__s
,

481 c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
),

482 
__isoc99_vfsˇnf
)

483 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

484 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

485 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

486 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

487 
	`__REDIRECT_NTH
 (
vssˇnf
,

488 (c⁄° *
__ª°ri˘
 
__s
,

489 c⁄° *
__ª°ri˘
 
__f‹m©
,

490 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

491 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

492 #ñi‡!
deföed
 
__REDIRECT


493 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

494 c⁄° *
__ª°ri˘
 
__f‹m©
,

495 
__gnuc_va_li°
 
__¨g
Ë
__wur
;

496 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

497 
__gnuc_va_li°
 
__¨g
Ë
__wur
;

498 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

499 c⁄° *
__ª°ri˘
 
__f‹m©
,

500 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

501 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

502 
	#vsˇnf
 
__isoc99_vsˇnf


	)

503 
	#vssˇnf
 
__isoc99_vssˇnf


	)

513 
	`fgëc
 (
FILE
 *
__°ªam
);

514 
	`gëc
 (
FILE
 *
__°ªam
);

520 
	`gëch¨
 ();

522 #ifde‡
__USE_POSIX199506


527 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

528 
	`gëch¨_u∆ocked
 ();

531 #ifde‡
__USE_MISC


538 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

549 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

550 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

556 
	`putch¨
 (
__c
);

558 #ifde‡
__USE_MISC


565 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

568 #ifde‡
__USE_POSIX199506


573 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

574 
	`putch¨_u∆ocked
 (
__c
);

578 #i‡
deföed
 
__USE_MISC
 \

579 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

581 
	`gëw
 (
FILE
 *
__°ªam
);

584 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

592 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

593 
__wur
 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 1, 2);

595 #i‡
	`__GLIBC_USE
 (
DEPRECATED_GETS
)

605 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

608 #ifde‡
__USE_GNU


615 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

616 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur


617 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 1, 2);

621 #i‡
deföed
 
__USE_XOPEN2K8
 || 
	`__GLIBC_USE
 (
LIB_EXT2
)

632 
__ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

633 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

634 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

635 
__ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

636 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

637 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

645 
__ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

646 
size_t
 *
__ª°ri˘
 
__n
,

647 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

655 
	`Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

661 
	`puts
 (c⁄° *
__s
);

668 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

675 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

676 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

681 
size_t
 
	`fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

682 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

684 #ifde‡
__USE_GNU


691 
	`Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

692 
FILE
 *
__ª°ri˘
 
__°ªam
);

695 #ifde‡
__USE_MISC


702 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

703 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

704 
size_t
 
	`fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

705 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

713 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

718 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

723 
	`ªwöd
 (
FILE
 *
__°ªam
);

730 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


731 #i‚de‡
__USE_FILE_OFFSET64


736 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

741 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

743 #ifde‡
__REDIRECT


744 
	`__REDIRECT
 (
f£eko
,

745 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

746 
f£eko64
);

747 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

749 
	#f£eko
 
f£eko64


	)

750 
	#·ñlo
 
·ñlo64


	)

755 #i‚de‡
__USE_FILE_OFFSET64


760 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

765 
	`f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
);

767 #ifde‡
__REDIRECT


768 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

769 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

770 
	`__REDIRECT
 (
f£ços
,

771 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
);

773 
	#fgëpos
 
fgëpos64


	)

774 
	#f£ços
 
f£ços64


	)

778 #ifde‡
__USE_LARGEFILE64


779 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

780 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

781 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

782 
	`f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
);

786 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

788 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

790 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

792 #ifde‡
__USE_MISC


794 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

795 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

796 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

804 
	`≥º‹
 (c⁄° *
__s
);

807 #ifdef 
__USE_POSIX


809 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

812 #ifde‡
__USE_MISC


814 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

818 #ifde‡
__USE_POSIX2


823 
	`p˛o£
 (
FILE
 *
__°ªam
);

829 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
)

830 
__©åibuã_mÆloc__
 
	$__©å_dóŒoc
 (
p˛o£
, 1Ë
__wur
;

835 #ifdef 
__USE_POSIX


837 *
	$˘îmid
 (*
__s
Ë
__THROW


838 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1));

842 #i‡(
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
Ë|| deföed 
__USE_GNU


844 *
	$cu£rid
 (*
__s
)

845 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1));

849 #ifdef 
__USE_GNU


850 
ob°ack
;

853 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

854 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

855 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

856 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

857 c⁄° *
__ª°ri˘
 
__f‹m©
,

858 
__gnuc_va_li°
 
__¨gs
)

859 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

863 #ifde‡
__USE_POSIX199506


867 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

871 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

874 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

877 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


880 
	~<bôs/gë›t_posix.h
>

885 
	`__uÊow
 (
FILE
 *);

886 
	`__ovîÊow
 (
FILE
 *, );

890 #ifde‡
__USE_EXTERN_INLINES


891 
	~<bôs/°dio.h
>

893 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


894 
	~<bôs/°dio2.h
>

897 
	~<bôs/Êﬂä.h
>

898 #i‡
deföed
 
__LDBL_COMPAT
 || 
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 1

899 
	~<bôs/°dio-ldbl.h
>

902 
__END_DECLS


	@/usr/include/stdlib.h

23 #i‚def 
_STDLIB_H


25 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

26 
	~<bôs/libc-hódî-°¨t.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

34 
	g__BEGIN_DECLS


36 
	#_STDLIB_H
 1

	)

38 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


40 
	~<bôs/waôÊags.h
>

41 
	~<bôs/waô°©us.h
>

44 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (°©us)

	)

45 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (°©us)

	)

46 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (°©us)

	)

47 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (°©us)

	)

48 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (°©us)

	)

49 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (°©us)

	)

50 #ifde‡
__WIFCONTINUED


51 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (°©us)

	)

56 
	~<bôs/Êﬂä.h
>

61 
	mquŸ
;

62 
	mªm
;

63 } 
	tdiv_t
;

66 #i‚de‡
__ldiv_t_deföed


69 
	mquŸ
;

70 
	mªm
;

71 } 
	tldiv_t
;

72 
	#__ldiv_t_deföed
 1

	)

75 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


77 
__exãnsi⁄__
 struct

79 
	mquŸ
;

80 
	mªm
;

81 } 
	tŒdiv_t
;

82 
	#__Œdiv_t_deföed
 1

	)

87 
	#RAND_MAX
 2147483647

	)

92 
	#EXIT_FAILURE
 1

	)

93 
	#EXIT_SUCCESS
 0

	)

97 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

98 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

102 
	$©of
 (c⁄° *
__≈å
)

103 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

105 
	$©oi
 (c⁄° *
__≈å
)

106 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

108 
	$©ﬁ
 (c⁄° *
__≈å
)

109 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

111 #ifde‡
__USE_ISOC99


113 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

114 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

118 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

119 **
__ª°ri˘
 
__íd±r
)

120 
__THROW
 
	`__n⁄nuŒ
 ((1));

122 #ifdef 
__USE_ISOC99


124 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

125 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

127 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

128 **
__ª°ri˘
 
__íd±r
)

129 
__THROW
 
	`__n⁄nuŒ
 ((1));

134 #i‡
__HAVE_FLOAT16
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

135 
_Flﬂt16
 
	$°πof16
 (c⁄° *
__ª°ri˘
 
__≈å
,

136 **
__ª°ri˘
 
__íd±r
)

137 
__THROW
 
	`__n⁄nuŒ
 ((1));

140 #i‡
__HAVE_FLOAT32
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

141 
_Flﬂt32
 
	$°πof32
 (c⁄° *
__ª°ri˘
 
__≈å
,

142 **
__ª°ri˘
 
__íd±r
)

143 
__THROW
 
	`__n⁄nuŒ
 ((1));

146 #i‡
__HAVE_FLOAT64
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

147 
_Flﬂt64
 
	$°πof64
 (c⁄° *
__ª°ri˘
 
__≈å
,

148 **
__ª°ri˘
 
__íd±r
)

149 
__THROW
 
	`__n⁄nuŒ
 ((1));

152 #i‡
__HAVE_FLOAT128
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

153 
_Flﬂt128
 
	$°πof128
 (c⁄° *
__ª°ri˘
 
__≈å
,

154 **
__ª°ri˘
 
__íd±r
)

155 
__THROW
 
	`__n⁄nuŒ
 ((1));

158 #i‡
__HAVE_FLOAT32X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

159 
_Flﬂt32x
 
	$°πof32x
 (c⁄° *
__ª°ri˘
 
__≈å
,

160 **
__ª°ri˘
 
__íd±r
)

161 
__THROW
 
	`__n⁄nuŒ
 ((1));

164 #i‡
__HAVE_FLOAT64X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

165 
_Flﬂt64x
 
	$°πof64x
 (c⁄° *
__ª°ri˘
 
__≈å
,

166 **
__ª°ri˘
 
__íd±r
)

167 
__THROW
 
	`__n⁄nuŒ
 ((1));

170 #i‡
__HAVE_FLOAT128X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

171 
_Flﬂt128x
 
	$°πof128x
 (c⁄° *
__ª°ri˘
 
__≈å
,

172 **
__ª°ri˘
 
__íd±r
)

173 
__THROW
 
	`__n⁄nuŒ
 ((1));

177 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

178 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

179 
__THROW
 
	`__n⁄nuŒ
 ((1));

181 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

182 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

183 
__THROW
 
	`__n⁄nuŒ
 ((1));

185 #ifde‡
__USE_MISC


187 
__exãnsi⁄__


188 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

189 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

190 
__THROW
 
	`__n⁄nuŒ
 ((1));

192 
__exãnsi⁄__


193 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

194 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

195 
__THROW
 
	`__n⁄nuŒ
 ((1));

198 #ifde‡
__USE_ISOC99


200 
__exãnsi⁄__


201 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

202 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

203 
__THROW
 
	`__n⁄nuŒ
 ((1));

205 
__exãnsi⁄__


206 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

207 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

208 
__THROW
 
	`__n⁄nuŒ
 ((1));

212 #i‡
	`__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

213 
	$°r‰omd
 (*
__de°
, 
size_t
 
__size
, c⁄° *
__f‹m©
,

214 
__f
)

215 
__THROW
 
	`__n⁄nuŒ
 ((3));

217 
	$°r‰omf
 (*
__de°
, 
size_t
 
__size
, c⁄° *
__f‹m©
,

218 
__f
)

219 
__THROW
 
	`__n⁄nuŒ
 ((3));

221 
	$°r‰oml
 (*
__de°
, 
size_t
 
__size
, c⁄° *
__f‹m©
,

222 
__f
)

223 
__THROW
 
	`__n⁄nuŒ
 ((3));

226 #i‡
__HAVE_FLOAT16
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

227 
	$°r‰omf16
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

228 
_Flﬂt16
 
__f
)

229 
__THROW
 
	`__n⁄nuŒ
 ((3));

232 #i‡
__HAVE_FLOAT32
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

233 
	$°r‰omf32
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

234 
_Flﬂt32
 
__f
)

235 
__THROW
 
	`__n⁄nuŒ
 ((3));

238 #i‡
__HAVE_FLOAT64
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

239 
	$°r‰omf64
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

240 
_Flﬂt64
 
__f
)

241 
__THROW
 
	`__n⁄nuŒ
 ((3));

244 #i‡
__HAVE_FLOAT128
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

245 
	$°r‰omf128
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

246 
_Flﬂt128
 
__f
)

247 
__THROW
 
	`__n⁄nuŒ
 ((3));

250 #i‡
__HAVE_FLOAT32X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

251 
	$°r‰omf32x
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

252 
_Flﬂt32x
 
__f
)

253 
__THROW
 
	`__n⁄nuŒ
 ((3));

256 #i‡
__HAVE_FLOAT64X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

257 
	$°r‰omf64x
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

258 
_Flﬂt64x
 
__f
)

259 
__THROW
 
	`__n⁄nuŒ
 ((3));

262 #i‡
__HAVE_FLOAT128X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

263 
	$°r‰omf128x
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

264 
_Flﬂt128x
 
__f
)

265 
__THROW
 
	`__n⁄nuŒ
 ((3));

269 #ifde‡
__USE_GNU


273 
	~<bôs/ty≥s/loˇÀ_t.h
>

275 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

276 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

277 
loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

279 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

280 **
__ª°ri˘
 
__íd±r
,

281 
__ba£
, 
loˇÀ_t
 
__loc
)

282 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

284 
__exãnsi⁄__


285 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

286 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

287 
loˇÀ_t
 
__loc
)

288 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

290 
__exãnsi⁄__


291 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

292 **
__ª°ri˘
 
__íd±r
,

293 
__ba£
, 
loˇÀ_t
 
__loc
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

296 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

297 **
__ª°ri˘
 
__íd±r
, 
loˇÀ_t
 
__loc
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

300 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

301 **
__ª°ri˘
 
__íd±r
, 
loˇÀ_t
 
__loc
)

302 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

304 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

305 **
__ª°ri˘
 
__íd±r
,

306 
loˇÀ_t
 
__loc
)

307 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

309 #i‡
__HAVE_FLOAT16


310 
_Flﬂt16
 
	$°πof16_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

311 **
__ª°ri˘
 
__íd±r
,

312 
loˇÀ_t
 
__loc
)

313 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

316 #i‡
__HAVE_FLOAT32


317 
_Flﬂt32
 
	$°πof32_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

318 **
__ª°ri˘
 
__íd±r
,

319 
loˇÀ_t
 
__loc
)

320 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

323 #i‡
__HAVE_FLOAT64


324 
_Flﬂt64
 
	$°πof64_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

325 **
__ª°ri˘
 
__íd±r
,

326 
loˇÀ_t
 
__loc
)

327 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

330 #i‡
__HAVE_FLOAT128


331 
_Flﬂt128
 
	$°πof128_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

332 **
__ª°ri˘
 
__íd±r
,

333 
loˇÀ_t
 
__loc
)

334 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

337 #i‡
__HAVE_FLOAT32X


338 
_Flﬂt32x
 
	$°πof32x_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

339 **
__ª°ri˘
 
__íd±r
,

340 
loˇÀ_t
 
__loc
)

341 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

344 #i‡
__HAVE_FLOAT64X


345 
_Flﬂt64x
 
	$°πof64x_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

346 **
__ª°ri˘
 
__íd±r
,

347 
loˇÀ_t
 
__loc
)

348 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

351 #i‡
__HAVE_FLOAT128X


352 
_Flﬂt128x
 
	$°πof128x_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

353 **
__ª°ri˘
 
__íd±r
,

354 
loˇÀ_t
 
__loc
)

355 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

360 #ifde‡
__USE_EXTERN_INLINES


361 
__exã∫_ölöe
 

362 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

364  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

365 
	}
}

366 
__exã∫_ölöe
 

367 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

369  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

370 
	}
}

372 #ifde‡
__USE_ISOC99


373 
__exãnsi⁄__
 
__exã∫_ölöe
 

374 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

376  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

377 
	}
}

382 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


386 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

389 
	$a64l
 (c⁄° *
__s
)

390 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

394 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


395 
	~<sys/ty≥s.h
>

402 
	$øndom
 (Ë
__THROW
;

405 
	$§™dom
 (
__£ed
Ë
__THROW
;

411 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

412 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

416 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

419 #ifde‡
__USE_MISC


424 
	søndom_d©a


426 
öt32_t
 *
Âå
;

427 
öt32_t
 *
Ωå
;

428 
öt32_t
 *
°©e
;

429 
ønd_ty≥
;

430 
ønd_deg
;

431 
ønd_£p
;

432 
öt32_t
 *
íd_±r
;

435 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

436 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

438 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

439 
__THROW
 
	`__n⁄nuŒ
 ((2));

441 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

442 
size_t
 
__°©ñí
,

443 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

444 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

446 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

447 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

448 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

454 
	$ønd
 (Ë
__THROW
;

456 
	$§™d
 (
__£ed
Ë
__THROW
;

458 #ifde‡
__USE_POSIX199506


460 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

464 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


468 
	$dønd48
 (Ë
__THROW
;

469 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

472 
	$Ã™d48
 (Ë
__THROW
;

473 
	$ƒ™d48
 (
__xsubi
[3])

474 
__THROW
 
	`__n⁄nuŒ
 ((1));

477 
	$mønd48
 (Ë
__THROW
;

478 
	$jønd48
 (
__xsubi
[3])

479 
__THROW
 
	`__n⁄nuŒ
 ((1));

482 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

483 *
	$£ed48
 (
__£ed16v
[3])

484 
__THROW
 
	`__n⁄nuŒ
 ((1));

485 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

487 #ifde‡
__USE_MISC


491 
	sdønd48_d©a


493 
__x
[3];

494 
__ﬁd_x
[3];

495 
__c
;

496 
__öô
;

497 
__exãnsi⁄__
 
__a
;

502 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

503 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

504 
	$î™d48_r
 (
__xsubi
[3],

505 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

506 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

509 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

510 *
__ª°ri˘
 
__ªsu…
)

511 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

512 
	$ƒ™d48_r
 (
__xsubi
[3],

513 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

514 *
__ª°ri˘
 
__ªsu…
)

515 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

518 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

519 *
__ª°ri˘
 
__ªsu…
)

520 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

521 
	$jønd48_r
 (
__xsubi
[3],

522 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

523 *
__ª°ri˘
 
__ªsu…
)

524 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

527 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

528 
__THROW
 
	`__n⁄nuŒ
 ((2));

530 
	$£ed48_r
 (
__£ed16v
[3],

531 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

533 
	$lc⁄g48_r
 (
__∑øm
[7],

534 
dønd48_d©a
 *
__buf„r
)

535 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

540 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__


541 
	`__©åibuã_Æloc_size__
 ((1)Ë
__wur
;

543 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

544 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((1, 2)Ë
__wur
;

551 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

552 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
 
	`__©åibuã_Æloc_size__
 ((2));

555 
	$‰ì
 (*
__±r
Ë
__THROW
;

557 #ifde‡
__USE_MISC


563 *
	$ªÆloˇºay
 (*
__±r
, 
size_t
 
__nmemb
, size_à
__size
)

564 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__


565 
	`__©åibuã_Æloc_size__
 ((2, 3))

566 
__©å_dóŒoc_‰ì
;

569 *
	$ªÆloˇºay
 (*
__±r
, 
size_t
 
__nmemb
, size_à
__size
)

570 
__THROW
 
	`__©å_dóŒoc
 (
ªÆloˇºay
, 1);

573 #ifde‡
__USE_MISC


574 
	~<Æloˇ.h
>

577 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

578 || 
deföed
 
__USE_MISC


580 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__


581 
	`__©åibuã_Æloc_size__
 ((1)Ë
__wur
;

584 #ifde‡
__USE_XOPEN2K


586 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

587 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

590 #ifde‡
__USE_ISOC11


592 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

593 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_Æign__
 ((1))

594 
	`__©åibuã_Æloc_size__
 ((2)Ë
__wur
;

598 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

602 
	$©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

604 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


606 #ifde‡
__˝lu•lus


607 "C++" 
	$©_quick_exô
 ((*
__func
) ())

608 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

610 
	$©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

614 #ifdef 
__USE_MISC


617 
	$⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

618 
__THROW
 
	`__n⁄nuŒ
 ((1));

624 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

626 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


630 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

633 #ifde‡
__USE_ISOC99


636 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

641 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

643 #ifde‡
__USE_GNU


646 *
	$£cuª_gëív
 (c⁄° *
__«me
)

647 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

650 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


654 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

657 #ifde‡
__USE_XOPEN2K


660 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

661 
__THROW
 
	`__n⁄nuŒ
 ((2));

664 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

667 #ifdef 
__USE_MISC


671 
	$˛óªnv
 (Ë
__THROW
;

675 #i‡
deföed
 
__USE_MISC
 \

676 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

682 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

685 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


694 #i‚de‡
__USE_FILE_OFFSET64


695 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

697 #ifde‡
__REDIRECT


698 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

699 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

701 
	#mk°emp
 
mk°emp64


	)

704 #ifde‡
__USE_LARGEFILE64


705 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

709 #ifde‡
__USE_MISC


716 #i‚de‡
__USE_FILE_OFFSET64


717 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

719 #ifde‡
__REDIRECT


720 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

721 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

723 
	#mk°emps
 
mk°emps64


	)

726 #ifde‡
__USE_LARGEFILE64


727 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

728 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

732 #ifde‡
__USE_XOPEN2K8


738 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

741 #ifde‡
__USE_GNU


748 #i‚de‡
__USE_FILE_OFFSET64


749 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

751 #ifde‡
__REDIRECT


752 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

753 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

755 
	#mko°emp
 
mko°emp64


	)

758 #ifde‡
__USE_LARGEFILE64


759 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

768 #i‚de‡
__USE_FILE_OFFSET64


769 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

770 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

772 #ifde‡
__REDIRECT


773 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

774 
__Êags
), 
mko°emps64
)

775 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

777 
	#mko°emps
 
mko°emps64


	)

780 #ifde‡
__USE_LARGEFILE64


781 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

782 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

791 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

794 #ifdef 
__USE_GNU


797 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

798 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_mÆloc__


799 
__©å_dóŒoc_‰ì
 
__wur
;

802 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


808 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

809 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

814 #i‚de‡
__COMPAR_FN_T


815 
	#__COMPAR_FN_T


	)

816 (*
	t__com∑r_‚_t
) (const *, const *);

818 #ifdef 
__USE_GNU


819 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

822 #ifde‡
__USE_GNU


823 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

828 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

829 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

830 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

832 #ifde‡
__USE_EXTERN_INLINES


833 
	~<bôs/°dlib-b£¨ch.h
>

838 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

839 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

840 #ifde‡
__USE_GNU


841 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

842 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

843 
	`__n⁄nuŒ
 ((1, 4));

848 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

849 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

851 #ifde‡
__USE_ISOC99


852 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

853 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

860 
div_t
 
	$div
 (
__numî
, 
__díom
)

861 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

862 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

863 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

865 #ifde‡
__USE_ISOC99


866 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

867 
__díom
)

868 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

872 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

873 || 
deföed
 
__USE_MISC


880 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

881 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

886 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

887 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

892 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

893 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

896 #ifde‡
__USE_MISC


898 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

899 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

900 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

901 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

902 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

903 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

904 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

905 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

910 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

911 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

912 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

913 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

914 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

915 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

917 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

918 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

919 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

920 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

921 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

922 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

923 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

924 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

930 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
;

933 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

934 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

937 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
;

941 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

942 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW


943 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 2));

945 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

946 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

947 
__THROW


948 
	$__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 1, 3)

949 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 2));

951 #ifde‡
__USE_MISC


956 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

960 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


967 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

968 *c⁄° *
__ª°ri˘
 
__tokís
,

969 **
__ª°ri˘
 
__vÆuï
)

970 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

976 #ifde‡
__USE_XOPEN2KXSI


978 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

981 #ifde‡
__USE_XOPEN_EXTENDED


986 
	$gø¡±
 (
__fd
Ë
__THROW
;

990 
	$u∆ock±
 (
__fd
Ë
__THROW
;

995 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

998 #ifde‡
__USE_GNU


1002 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

1003 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 2, 3);

1006 
	`gë±
 ();

1009 #ifde‡
__USE_MISC


1013 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

1014 
__THROW
 
	`__n⁄nuŒ
 ((1));

1017 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K


1020 
	$ây¶Ÿ
 (Ë
__THROW
;

1023 
	~<bôs/°dlib-Êﬂt.h
>

1026 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1027 
	~<bôs/°dlib.h
>

1030 
	~<bôs/Êﬂä.h
>

1031 #i‡
deföed
 
__LDBL_COMPAT
 || 
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 1

1032 
	~<bôs/°dlib-ldbl.h
>

1035 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

26 
	~<bôs/libc-hódî-°¨t.h
>

28 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

36 #i‡
deföed
 
__˝lu•lus
 && (
__GNUC_PREREQ
 (4, 4) \

37 || 
	$__glibc_˛™g_¥îeq
 (3, 5))

38 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

43 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

44 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

47 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

48 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

53 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || 
	`__GLIBC_USE
 (
ISOC2X
)

54 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

55 
__c
, 
size_t
 
__n
)

56 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 4));

61 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

64 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

65 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

80 
	$__memcm≥q
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

81 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

84 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


87 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

88 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

89 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

90 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

92 #ifde‡
__OPTIMIZE__


93 
__exã∫_Æways_ölöe
 *

94 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


96  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

99 
__exã∫_Æways_ölöe
 const *

100 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


102  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

105 
	}
}

107 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

108 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

111 #ifde‡
__USE_GNU


114 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


115 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

116 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

118 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

120 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

121 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

125 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


126 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

127 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1))

128 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 1, 3));

129 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

130 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1))

131 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 1, 3));

133 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

134 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1))

135 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 1, 3));

141 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

142 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

144 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

145 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

146 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

149 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

150 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

152 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

153 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

156 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

157 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

159 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

160 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

163 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

164 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

166 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

167 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

168 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 3));

170 #ifde‡
__USE_XOPEN2K8


172 
	~<bôs/ty≥s/loˇÀ_t.h
>

175 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
loˇÀ_t
 
__l
)

176 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

179 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

180 
loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4))

181 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 3));

184 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8
 \

185 || 
	`__GLIBC_USE
 (
LIB_EXT2
Ë|| 
	$__GLIBC_USE
 (
ISOC2X
))

187 *
	$°rdup
 (c⁄° *
__s
)

188 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

194 #i‡
deföed
 
__USE_XOPEN2K8
 || 
	`__GLIBC_USE
 (
LIB_EXT2
Ë|| __GLIBC_USE (
ISOC2X
)

195 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

196 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

199 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


201 
	#°rdu∑
(
s
) \

202 (
__exãnsi⁄__
 \

204 c⁄° *
__ﬁd
 = (
s
); \

205 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

206 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

207 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

208 
	}
}))

	)

211 
	#°∫du∑
(
s
, 
n
) \

212 (
__exãnsi⁄__
 \

214 c⁄° *
__ﬁd
 = (
s
); \

215 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

216 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

217 
__√w
[
__Àn
] = '\0'; \

218 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

219 }))

	)

223 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


226 *
°rchr
 (*
__s
, 
__c
)

227 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

228 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

229 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

231 #ifde‡
__OPTIMIZE__


232 
__exã∫_Æways_ölöe
 *

233 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


235  
__buûtö_°rchr
 (
__s
, 
__c
);

238 
__exã∫_Æways_ölöe
 const *

239 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


241  
__buûtö_°rchr
 (
__s
, 
__c
);

246 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

247 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

250 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


253 *
	`°ºchr
 (*
__s
, 
__c
)

254 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

255 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

256 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

258 #ifde‡
__OPTIMIZE__


259 
__exã∫_Æways_ölöe
 *

260 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


262  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

265 
__exã∫_Æways_ölöe
 const *

266 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


268  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

271 
	}
}

273 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

274 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

277 #ifde‡
__USE_GNU


280 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


281 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

282 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

283 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

284 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

286 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

287 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

293 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

294 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

297 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

298 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

300 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


303 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

304 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

305 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

306 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

308 #ifde‡
__OPTIMIZE__


309 
__exã∫_Æways_ölöe
 *

310 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


312  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

315 
__exã∫_Æways_ölöe
 const *

316 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


318  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

321 
	}
}

323 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

324 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

327 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


330 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

331 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

332 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

333 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

335 #ifde‡
__OPTIMIZE__


336 
__exã∫_Æways_ölöe
 *

337 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


339  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

342 
__exã∫_Æways_ölöe
 const *

343 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


345  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

348 
	}
}

350 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

351 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

356 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2));

361 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

362 c⁄° *
__ª°ri˘
 
__dñim
,

363 **
__ª°ri˘
 
__ßve_±r
)

364 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

365 #ifde‡
__USE_POSIX


366 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

367 **
__ª°ri˘
 
__ßve_±r
)

368 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

371 #ifde‡
__USE_GNU


373 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


374 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

375 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

376 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

377 c⁄° *
__√edÀ
)

378 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

380 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

381 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

385 #ifde‡
__USE_GNU


389 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

390 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

391 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3))

392 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 1, 2))

393 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 3, 4));

397 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

398 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

399 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

400 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

401 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

402 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

407 
size_t
 
	$°æí
 (c⁄° *
__s
)

408 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

410 #ifdef 
__USE_XOPEN2K8


413 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

414 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

419 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

420 #ifde‡
__USE_XOPEN2K


428 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


431 #ifde‡
__REDIRECT_NTH


432 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

433 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

434 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2))

435 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

437 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

438 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

439 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

444 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

445 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

448 #ifde‡
__USE_GNU


450 c⁄° *
	$°ªº‹desc_≈
 (
__îr
Ë
__THROW
;

452 c⁄° *
	$°ªº‹«me_≈
 (
__îr
Ë
__THROW
;

456 #ifde‡
__USE_XOPEN2K8


458 *
	$°ªº‹_l
 (
__î∫um
, 
loˇÀ_t
 
__l
Ë
__THROW
;

461 #ifde‡
__USE_MISC


462 
	~<°rögs.h
>

466 
	$ex∂icô_bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1))

467 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 1, 2);

471 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

472 c⁄° *
__ª°ri˘
 
__dñim
)

473 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

476 #ifdef 
__USE_XOPEN2K8


478 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

480 #ifde‡
__USE_GNU


482 c⁄° *
	$sigabbªv_≈
 (
__sig
Ë
__THROW
;

485 c⁄° *
	$sigdes¸_≈
 (
__sig
Ë
__THROW
;

489 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

490 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

491 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

492 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

496 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

497 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

498 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

499 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

500 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

501 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

504 #ifdef 
__USE_GNU


506 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

507 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

510 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

513 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1))

514 
	`__©å_ac˚ss
 ((
__ªad_wrôe__
, 1, 2));

516 #i‚de‡
ba£«me


521 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


522 "C++" *
	$ba£«me
 (*
__fûíame
)

523 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

524 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

525 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

527 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

532 #i‡
	`__GNUC_PREREQ
 (3,4)

533 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


535 
	~<bôs/°rög_f‹tifõd.h
>

539 
__END_DECLS


	@/usr/include/time.h

22 #i‚def 
_TIME_H


23 
	#_TIME_H
 1

	)

25 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 
	#__√ed_NULL


	)

29 
	~<°ddef.h
>

33 
	~<bôs/time.h
>

37 
	~<bôs/ty≥s/˛ock_t.h
>

38 
	~<bôs/ty≥s/time_t.h
>

39 
	~<bôs/ty≥s/°ru˘_tm.h
>

41 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_ISOC11


42 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

45 #ifde‡
__USE_POSIX199309


46 
	~<bôs/ty≥s/˛ockid_t.h
>

47 
	~<bôs/ty≥s/timî_t.h
>

48 
	~<bôs/ty≥s/°ru˘_ôimî•ec.h
>

49 
	gsigevít
;

52 #ifde‡
__USE_XOPEN2K


53 #i‚de‡
__pid_t_deföed


54 
__pid_t
 
	tpid_t
;

55 
	#__pid_t_deföed


	)

59 #ifde‡
__USE_XOPEN2K8


60 
	~<bôs/ty≥s/loˇÀ_t.h
>

63 #ifde‡
__USE_ISOC11


65 
	#TIME_UTC
 1

	)

68 
__BEGIN_DECLS


72 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

74 #i‚de‡
__USE_TIME_BITS64


76 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

79 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

80 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

83 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

85 #ifde‡
__REDIRECT_NTH


86 
time_t
 
	`__REDIRECT_NTH
 (
time
, (time_à*
__timî
), 
__time64
);

87 
	`__REDIRECT_NTH
 (
dif·ime
, (
time_t
 
__time1
,Åime_à
__time0
),

88 
__dif·ime64
Ë
	`__©åibuã__
 ((
__c⁄°__
));

89 
time_t
 
	`__REDIRECT_NTH
 (
mktime
, (
tm
 *
__ç
), 
__mktime64
);

91 
	#time
 
__time64


	)

92 
	#dif·ime
 
__dif·ime64


	)

93 
	#mktime
 
__mktime64


	)

100 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

101 c⁄° *
__ª°ri˘
 
__f‹m©
,

102 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

104 #ifde‡
__USE_XOPEN


107 *
	$°Ωtime
 (c⁄° *
__ª°ri˘
 
__s
,

108 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

109 
__THROW
;

112 #ifde‡
__USE_XOPEN2K8


116 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

117 c⁄° *
__ª°ri˘
 
__f‹m©
,

118 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

119 
loˇÀ_t
 
__loc
Ë
__THROW
;

122 #ifde‡
__USE_GNU


123 *
	$°Ωtime_l
 (c⁄° *
__ª°ri˘
 
__s
,

124 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

125 
loˇÀ_t
 
__loc
Ë
__THROW
;

129 #i‚de‡
__USE_TIME_BITS64


132 
tm
 *
	$gmtime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

136 
tm
 *
	$loˇ…ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

139 #ifde‡
__REDIRECT_NTH


140 
tm
*
	`__REDIRECT_NTH
 (
gmtime
, (c⁄° 
time_t
 *
__timî
), 
__gmtime64
);

141 
tm
 *
	`__REDIRECT_NTH
 (
loˇ…ime
, (c⁄° 
time_t
 *
__timî
),

142 
__loˇ…ime64
);

144 
	#gmtime
 
__gmtime64


	)

145 
	#loˇ…ime
 
__loˇ…ime64


	)

150 #i‡
deföed
 
__USE_POSIX
 || 
	`__GLIBC_USE
 (
ISOC2X
)

151 #i‚de‡
__USE_TIME_BITS64


154 
tm
 *
	$gmtime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

155 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

159 
tm
 *
	$loˇ…ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

160 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

162 #ifde‡
__REDIRECT_NTH


163 
tm
*
	`__REDIRECT_NTH
 (
gmtime_r
, (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

164 
tm
 *
__ª°ri˘
 
__ç
),

165 
__gmtime64_r
);

167 
tm
*
	`__REDIRECT_NTH
 (
loˇ…ime_r
, (c⁄° 
time_t
 *
__ª°ri˘
 
__t
,

168 
tm
 *
__ª°ri˘
 
__ç
),

169 
__loˇ…ime64_r
);

171 
	#gmtime_r
 
__gmtime64_r


	)

172 
	#loˇ…ime_r
 
__loˇ…ime_r


	)

179 *
	$as˘ime
 (c⁄° 
tm
 *
__ç
Ë
__THROW
;

182 #i‚de‡
__USE_TIME_BITS64


183 *
	$˘ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

185 #ifde‡
__REDIRECT_NTH


186 *
	`__REDIRECT_NTH
 (
˘ime
, (c⁄° 
time_t
 *
__timî
), 
__˘ime64
);

188 
	#˘ime
 
__˘ime64


	)

192 #ifde‡
__USE_POSIX


197 *
	$as˘ime_r
 (c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

198 *
__ª°ri˘
 
__buf
Ë
__THROW
;

201 #i‚de‡
__USE_TIME_BITS64


202 *
	$˘ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

203 *
__ª°ri˘
 
__buf
Ë
__THROW
;

205 #ifde‡
__REDIRECT_NTH


206 *
	`__REDIRECT_NTH
 (
˘ime_r
, (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

207 *
__ª°ri˘
 
__buf
), 
__˘ime64_r
);

209 
	#˘ime_r
 
__˘ime64_r


	)

217 *
__tz«me
[2];

218 
__daylight
;

219 
__timez⁄e
;

222 #ifdef 
__USE_POSIX


224 *
tz«me
[2];

228 
	$tz£t
 (Ë
__THROW
;

231 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


232 
daylight
;

233 
timez⁄e
;

239 
	#__i¶óp
(
yór
) \

240 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

243 #ifde‡
__USE_MISC


247 #i‚de‡
__USE_TIME_BITS64


249 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

251 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

253 #ifde‡
__REDIRECT_NTH


254 
time_t
 
	`__REDIRECT_NTH
 (
timegm
, (
tm
 *
__ç
), 
__timegm64
);

255 
time_t
 
	`__REDIRECT_NTH
 (
timñoˇl
, (
tm
 *
__ç
), 
__mktime64
);

257 
	#timegm
 
__timegm64


	)

262 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

266 #ifde‡
__USE_POSIX199309


267 #i‚de‡
__USE_TIME_BITS64


272 
	`«no¶ìp
 (c⁄° 
time•ec
 *
__ªque°ed_time
,

273 
time•ec
 *
__ªmaöög
);

276 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

279 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

282 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, c⁄° 
time•ec
 *
__ç
)

283 
__THROW
;

285 #ifde‡
__REDIRECT


286 
	`__REDIRECT
 (
«no¶ìp
, (c⁄° 
time•ec
 *
__ªque°ed_time
,

287 
time•ec
 *
__ªmaöög
),

288 
__«no¶ìp64
);

289 
	`__REDIRECT_NTH
 (
˛ock_gëªs
, (
˛ockid_t
 
__˛ock_id
,

290 
time•ec
 *
__ªs
),

291 
__˛ock_gëªs64
);

292 
	`__REDIRECT_NTH
 (
˛ock_gëtime
, (
˛ockid_t
 
__˛ock_id
, 

293 
time•ec
 *
__ç
), 
__˛ock_gëtime64
);

294 
	`__REDIRECT_NTH
 (
˛ock_£âime
, (
˛ockid_t
 
__˛ock_id
, const 

295 
time•ec
 *
__ç
), 
__˛ock_£âime64
);

297 
	#«no¶ìp
 
__«no¶ìp64


	)

298 
	#˛ock_gëªs
 
__˛ock_gëªs64


	)

299 
	#˛ock_gëtime
 
__˛ock_gëtime64


	)

300 
	#˛ock_£âime
 
__˛ock_£âime64


	)

305 #ifde‡
__USE_XOPEN2K


310 #i‚de‡
__USE_TIME_BITS64


311 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

312 c⁄° 
time•ec
 *
__ªq
,

313 
time•ec
 *
__ªm
);

315 #ifde‡
__REDIRECT


316 
	`__REDIRECT
 (
˛ock_«no¶ìp
, (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

317 c⁄° 
time•ec
 *
__ªq
,

318 
time•ec
 *
__ªm
),

319 
__˛ock_«no¶ìp_time64
);

321 
	#˛ock_«no¶ìp
 
__˛ock_«no¶ìp_time64


	)

326 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

331 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

332 
sigevít
 *
__ª°ri˘
 
__evp
,

333 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

336 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

339 #i‚de‡
__USE_TIME_BITS64


340 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

341 c⁄° 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

342 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

345 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

346 
__THROW
;

348 #ifde‡
__REDIRECT_NTH


349 
	`__REDIRECT_NTH
 (
timî_£âime
, (
timî_t
 
__timîid
, 
__Êags
,

350 c⁄° 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

351 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
),

352 
__timî_£âime64
);

354 
	`__REDIRECT_NTH
 (
timî_gëtime
, (
timî_t
 
__timîid
,

355 
ôimî•ec
 *
__vÆue
),

356 
__timî_gëtime64
);

358 
	#timî_£âime
 
__timî_£âime64


	)

359 
	#timî_gëtime
 
__timî_gëtime64


	)

364 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

368 #ifde‡
__USE_ISOC11


369 #i‚de‡
__USE_TIME_BITS64


371 
	$time•ec_gë
 (
time•ec
 *
__ts
, 
__ba£
)

372 
__THROW
 
	`__n⁄nuŒ
 ((1));

374 #ifde‡
__REDIRECT_NTH


375 
	`__REDIRECT_NTH
 (
time•ec_gë
, (
time•ec
 *
__ts
, 
__ba£
),

376 
__time•ec_gë64
Ë
	`__n⁄nuŒ
 ((1));

378 
	#time•ec_gë
 
__time•ec_gë64


	)

384 #i‡
	`__GLIBC_USE
 (
ISOC2X
)

385 #i‚de‡
__USE_TIME_BITS64


387 
	$time•ec_gëªs
 (
time•ec
 *
__ts
, 
__ba£
)

388 
__THROW
;

390 #ifde‡
__REDIRECT_NTH


391 
	`__REDIRECT_NTH
 (
time•ec_gëªs
, (
time•ec
 *
__ts
,

392 
__ba£
),

393 
__time•ec_gëªs64
);

395 
	#time•ec_gëªs
 
__time•ec_gëªs64


	)

401 #ifde‡
__USE_XOPEN_EXTENDED


413 
gëd©e_îr
;

422 
tm
 *
	`gëd©e
 (c⁄° *
__°rög
);

425 #ifde‡
__USE_GNU


436 
	`gëd©e_r
 (c⁄° *
__ª°ri˘
 
__°rög
,

437 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

440 
__END_DECLS


	@/usr/include/unistd.h

22 #i‚def 
_UNISTD_H


23 
	#_UNISTD_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


32 #ifde‡
__USE_XOPEN2K8


34 
	#_POSIX_VERSION
 200809L

	)

35 #ñi‡
deföed
 
__USE_XOPEN2K


37 
	#_POSIX_VERSION
 200112L

	)

38 #ñi‡
deföed
 
__USE_POSIX199506


40 
	#_POSIX_VERSION
 199506L

	)

41 #ñi‡
deföed
 
__USE_POSIX199309


43 
	#_POSIX_VERSION
 199309L

	)

46 
	#_POSIX_VERSION
 199009L

	)

52 #ifde‡
__USE_XOPEN2K8


53 
	#__POSIX2_THIS_VERSION
 200809L

	)

55 #ñi‡
deföed
 
__USE_XOPEN2K


57 
	#__POSIX2_THIS_VERSION
 200112L

	)

58 #ñi‡
deföed
 
__USE_POSIX199506


60 
	#__POSIX2_THIS_VERSION
 199506L

	)

63 
	#__POSIX2_THIS_VERSION
 199209L

	)

67 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

70 
	#_POSIX2_C_VERSION
 
__POSIX2_THIS_VERSION


	)

74 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

78 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

82 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

86 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

89 #ifde‡
__USE_XOPEN2K8


90 
	#_XOPEN_VERSION
 700

	)

91 #ñi‡
deföed
 
__USE_XOPEN2K


92 
	#_XOPEN_VERSION
 600

	)

93 #ñi‡
deföed
 
__USE_UNIX98


94 
	#_XOPEN_VERSION
 500

	)

96 
	#_XOPEN_VERSION
 4

	)

100 
	#_XOPEN_XCU_VERSION
 4

	)

103 
	#_XOPEN_XPG2
 1

	)

104 
	#_XOPEN_XPG3
 1

	)

105 
	#_XOPEN_XPG4
 1

	)

108 
	#_XOPEN_UNIX
 1

	)

112 
	#_XOPEN_ENH_I18N
 1

	)

115 
	#_XOPEN_LEGACY
 1

	)

202 
	~<bôs/posix_›t.h
>

205 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


206 
	~<bôs/ívú⁄míts.h
>

210 
	#STDIN_FILENO
 0

	)

211 
	#STDOUT_FILENO
 1

	)

212 
	#STDERR_FILENO
 2

	)

217 
	~<bôs/ty≥s.h
>

219 #i‚def 
__ssize_t_deföed


220 
__ssize_t
 
	tssize_t
;

221 
	#__ssize_t_deföed


	)

224 
	#__√ed_size_t


	)

225 
	#__√ed_NULL


	)

226 
	~<°ddef.h
>

228 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


231 #i‚de‡
__gid_t_deföed


232 
__gid_t
 
	tgid_t
;

233 
	#__gid_t_deföed


	)

236 #i‚de‡
__uid_t_deföed


237 
__uid_t
 
	tuid_t
;

238 
	#__uid_t_deföed


	)

241 #i‚de‡
__off_t_deföed


242 #i‚de‡
__USE_FILE_OFFSET64


243 
__off_t
 
	toff_t
;

245 
__off64_t
 
	toff_t
;

247 
	#__off_t_deföed


	)

249 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


250 
__off64_t
 
	toff64_t
;

251 
	#__off64_t_deföed


	)

254 #i‚de‡
__u£c⁄ds_t_deföed


255 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

256 
	#__u£c⁄ds_t_deföed


	)

259 #i‚de‡
__pid_t_deföed


260 
__pid_t
 
	tpid_t
;

261 
	#__pid_t_deföed


	)

265 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


266 #i‚de‡
__öçå_t_deföed


267 
__öçå_t
 
	töçå_t
;

268 
	#__öçå_t_deföed


	)

272 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


273 #i‚de‡
__sockÀn_t_deföed


274 
__sockÀn_t
 
	tsockÀn_t
;

275 
	#__sockÀn_t_deföed


	)

281 
	#R_OK
 4

	)

282 
	#W_OK
 2

	)

283 
	#X_OK
 1

	)

284 
	#F_OK
 0

	)

287 
	$ac˚ss
 (c⁄° *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

289 #ifde‡
__USE_GNU


292 
	$euidac˚ss
 (c⁄° *
__«me
, 
__ty≥
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$óc˚ss
 (c⁄° *
__«me
, 
__ty≥
)

297 
__THROW
 
	`__n⁄nuŒ
 ((1));

300 
	$execvót
 (
__fd
, c⁄° *
__∑th
, *c⁄° 
__¨gv
[],

301 *c⁄° 
__ívp
[], 
__Êags
)

302 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

305 #ifde‡
__USE_ATFILE


309 
	$Ác˚sßt
 (
__fd
, c⁄° *
__fûe
, 
__ty≥
, 
__Êag
)

310 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

315 #i‚def 
_STDIO_H


316 
	#SEEK_SET
 0

	)

317 
	#SEEK_CUR
 1

	)

318 
	#SEEK_END
 2

	)

319 #ifde‡
__USE_GNU


320 
	#SEEK_DATA
 3

	)

321 
	#SEEK_HOLE
 4

	)

325 #i‡
deföed
 
__USE_MISC
 && !deföed 
L_SET


327 
	#L_SET
 
SEEK_SET


	)

328 
	#L_INCR
 
SEEK_CUR


	)

329 
	#L_XTND
 
SEEK_END


	)

338 #i‚de‡
__USE_FILE_OFFSET64


339 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

341 #ifde‡
__REDIRECT_NTH


342 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

343 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

344 
l£ek64
);

346 
	#l£ek
 
l£ek64


	)

349 #ifde‡
__USE_LARGEFILE64


350 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

351 
__THROW
;

358 
	`˛o£
 (
__fd
);

360 #ifde‡
__USE_MISC


363 
	$˛o£‰om
 (
__lowfd
Ë
__THROW
;

371 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur


372 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 2, 3);

378 
ssize_t
 
	$wrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
Ë
__wur


379 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 2, 3));

381 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


382 #i‚de‡
__USE_FILE_OFFSET64


389 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

390 
__off_t
 
__off£t
Ë
__wur


391 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 2, 3);

398 
ssize_t
 
	$pwrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

399 
__off_t
 
__off£t
Ë
__wur


400 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 2, 3));

403 #ifde‡
__REDIRECT


404 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

405 
__off64_t
 
__off£t
),

406 
¥ód64
Ë
__wur


407 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 2, 3);

408 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, c⁄° *
__buf
,

409 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

410 
pwrôe64
Ë
__wur


411 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 2, 3));

413 
	#¥ód
 
¥ód64


	)

414 
	#pwrôe
 
pwrôe64


	)

418 #ifde‡
__USE_LARGEFILE64


422 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

423 
__off64_t
 
__off£t
Ë
__wur


424 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 2, 3);

427 
ssize_t
 
	$pwrôe64
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

428 
__off64_t
 
__off£t
Ë
__wur


429 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 2, 3));

437 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

439 #ifde‡
__USE_GNU


442 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

452 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

464 
	`¶ìp
 (
__£c⁄ds
);

466 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

467 || 
deföed
 
__USE_MISC


472 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

473 
__THROW
;

480 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

489 
	`∑u£
 ();

493 
	$chown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

494 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

496 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


498 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

503 
	$lchown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

504 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

508 #ifde‡
__USE_ATFILE


511 
	$fchow«t
 (
__fd
, c⁄° *
__fûe
, 
__uid_t
 
__ow√r
,

512 
__gid_t
 
__group
, 
__Êag
)

513 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

517 
	$chdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

519 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


521 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

531 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

533 #ifdef 
__USE_GNU


537 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

540 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

541 || 
deföed
 
__USE_MISC


545 *
	$gëwd
 (*
__buf
)

546 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur


547 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1));

552 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

555 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

557 #ifde‡
__USE_GNU


560 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

564 **
__ívú⁄
;

565 #ifde‡
__USE_GNU


566 **
ívú⁄
;

572 
	$execve
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[],

573 *c⁄° 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

575 #ifde‡
__USE_XOPEN2K8


578 
	$„xecve
 (
__fd
, *c⁄° 
__¨gv
[], *c⁄° 
__ívp
[])

579 
__THROW
 
	`__n⁄nuŒ
 ((2));

584 
	$execv
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[])

585 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

589 
	$exe˛e
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

590 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

594 
	$exe˛
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

595 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

599 
	$execvp
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[])

600 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

605 
	$exe˛p
 (c⁄° *
__fûe
, c⁄° *
__¨g
, ...)

606 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

608 #ifde‡
__USE_GNU


611 
	$execv≥
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[],

612 *c⁄° 
__ívp
[])

613 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

617 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


619 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

624 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

630 
	~<bôs/c⁄‚ame.h
>

633 
	$∑thc⁄f
 (c⁄° *
__∑th
, 
__«me
)

634 
__THROW
 
	`__n⁄nuŒ
 ((1));

637 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

640 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

642 #ifdef 
__USE_POSIX2


644 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW


645 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 2, 3);

650 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

653 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

656 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

659 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

660 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


661 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

668 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

670 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


682 
	$£çgΩ
 (Ë
__THROW
;

689 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

691 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


693 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

697 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

700 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

703 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

706 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

711 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur


712 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 2, 1);

713 #ifdef 
__USE_GNU


715 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

722 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

724 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


727 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
 
__wur
;

730 #ifde‡
__USE_XOPEN2K


732 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

739 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

741 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


744 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
 
__wur
;

747 #ifde‡
__USE_XOPEN2K


749 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

752 #ifde‡
__USE_GNU


755 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

756 
__THROW
;

760 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

761 
__THROW
;

765 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

766 
__THROW
 
__wur
;

770 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

771 
__THROW
 
__wur
;

778 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

780 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

781 || 
deföed
 
__USE_MISC


786 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

789 #ifde‡
__USE_GNU


793 
__pid_t
 
	$_F‹k
 (Ë
__THROW
;

799 *
	$ây«me
 (
__fd
Ë
__THROW
;

803 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

804 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur


805 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 2, 3);

809 
	$ißây
 (
__fd
Ë
__THROW
;

811 #ifde‡
__USE_MISC


814 
	$ây¶Ÿ
 (Ë
__THROW
;

819 
	$lök
 (c⁄° *
__‰om
, c⁄° *
__to
)

820 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

822 #ifde‡
__USE_ATFILE


825 
	$lök©
 (
__‰omfd
, c⁄° *
__‰om
, 
__tofd
,

826 c⁄° *
__to
, 
__Êags
)

827 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

830 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


832 
	$symlök
 (c⁄° *
__‰om
, c⁄° *
__to
)

833 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

838 
ssize_t
 
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
,

839 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

840 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur


841 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 2, 3);

845 #ifde‡
__USE_ATFILE


847 
	$symlök©
 (c⁄° *
__‰om
, 
__tofd
,

848 c⁄° *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

851 
ssize_t
 
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

852 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

853 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur


854 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 3, 4);

858 
	$u∆ök
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

860 #ifde‡
__USE_ATFILE


862 
	$u∆ök©
 (
__fd
, c⁄° *
__«me
, 
__Êag
)

863 
__THROW
 
	`__n⁄nuŒ
 ((2));

867 
	$rmdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

871 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

874 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

881 *
	`gëlogö
 ();

882 #ifde‡
__USE_POSIX199506


889 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1))

890 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 1, 2);

893 #ifdef 
__USE_MISC


895 
	$£éogö
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

899 #ifdef 
__USE_POSIX2


903 
	~<bôs/gë›t_posix.h
>

907 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


911 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1))

912 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 1, 2);

916 #i‡
deföed
 
__USE_MISC


919 
	$£tho°«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

920 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 1, 2));

924 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

930 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

931 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur


932 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 1, 2);

933 
	$£tdomaö«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

934 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 1, 2));

939 
	$vh™gup
 (Ë
__THROW
;

942 
	$ªvoke
 (c⁄° *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

950 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

951 
size_t
 
__off£t
, 
__sˇÀ
)

952 
__THROW
 
	`__n⁄nuŒ
 ((1));

958 
	$ac˘
 (c⁄° *
__«me
Ë
__THROW
;

962 *
	$gëu£rshñl
 (Ë
__THROW
;

963 
	$ídu£rshñl
 (Ë
__THROW
;

964 
	$£tu£rshñl
 (Ë
__THROW
;

970 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

974 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

977 
	$chroŸ
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

981 *
	$gë∑ss
 (c⁄° *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

989 
	`fsync
 (
__fd
);

992 #ifde‡
__USE_GNU


995 
	$syncfs
 (
__fd
Ë
__THROW
;

999 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


1002 
	`gëho°id
 ();

1005 
	$sync
 (Ë
__THROW
;

1008 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K


1011 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

1016 
	$gëdèbÀsize
 (Ë
__THROW
;

1022 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


1025 #i‚de‡
__USE_FILE_OFFSET64


1026 
	$åunˇã
 (c⁄° *
__fûe
, 
__off_t
 
__Àngth
)

1027 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1029 #ifde‡
__REDIRECT_NTH


1030 
	`__REDIRECT_NTH
 (
åunˇã
,

1031 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
),

1032 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1034 
	#åunˇã
 
åunˇã64


	)

1037 #ifde‡
__USE_LARGEFILE64


1038 
	$åunˇã64
 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
)

1039 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1044 #i‡
deföed
 
__USE_POSIX199309
 \

1045 || 
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1048 #i‚de‡
__USE_FILE_OFFSET64


1049 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1051 #ifde‡
__REDIRECT_NTH


1052 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1053 
·runˇã64
Ë
__wur
;

1055 
	#·runˇã
 
·runˇã64


	)

1058 #ifde‡
__USE_LARGEFILE64


1059 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1065 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1066 || 
deföed
 
__USE_MISC


1070 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1076 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1080 #ifde‡
__USE_MISC


1091 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1096 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1108 
	#F_ULOCK
 0

	)

1109 
	#F_LOCK
 1

	)

1110 
	#F_TLOCK
 2

	)

1111 
	#F_TEST
 3

	)

1113 #i‚de‡
__USE_FILE_OFFSET64


1114 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1116 #ifde‡
__REDIRECT


1117 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1118 
lockf64
Ë
__wur
;

1120 
	#lockf
 
lockf64


	)

1123 #ifde‡
__USE_LARGEFILE64


1124 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1129 #ifde‡
__USE_GNU


1134 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1135 (
__exãnsi⁄__
 \

1136 ({ 
__ªsu…
; \

1137 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1138 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1139 
__ªsu…
; 
	}
}))

	)

1142 
ssize_t
 
c›y_fûe_ønge
 (
__öfd
, 
__off64_t
 *
__pöoff
,

1143 
__outfd
, 
__off64_t
 *
__poutoff
,

1144 
size_t
 
__Àngth
, 
__Êags
);

1147 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1150 
fd©async
 (
__fûdes
);

1153 #ifde‡
__USE_MISC


1159 *
	$¸y±
 (c⁄° *
__key
, c⁄° *
__ß…
)

1160 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1163 #ifdef 
__USE_XOPEN


1168 
	$swab
 (c⁄° *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1169 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2))

1170 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 1, 3))

1171 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

1178 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K


1180 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1183 *
	`cu£rid
 (*
__s
);

1189 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_XOPEN2K


1190 
	$±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1191 (*
__∑ª¡
) (),

1192 (*
__chûd
Ë()Ë
__THROW
;

1195 #ifde‡
__USE_MISC


1198 
	$gëíå›y
 (*
__buf„r
, 
size_t
 
__Àngth
Ë
__wur


1199 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 2));

1202 #ifde‡
__USE_GNU


1208 
	$˛o£_ønge
 (
__fd
, 
__max_fd
,

1209 
__Êags
Ë
__THROW
;

1213 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1214 
	~<bôs/uni°d.h
>

1218 
	~<bôs/uni°d_ext.h
>

1220 
__END_DECLS


	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

24 
	~<bôs/ídün.h
>

26 #ifde‡
__USE_MISC


27 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

28 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

29 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

30 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

33 #i‡
deföed
 
__USE_MISC
 && !deföed 
__ASSEMBLER__


35 
	~<bôs/byãsw≠.h
>

36 
	~<bôs/uöä-idítôy.h
>

38 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


39 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

40 
	#htﬁe16
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

41 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

42 
	#À16toh
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

44 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

45 
	#htﬁe32
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

46 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

47 
	#À32toh
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

49 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

50 
	#htﬁe64
(
x
Ë
	`__uöt64_idítôy
 (x)

	)

51 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

52 
	#À64toh
(
x
Ë
	`__uöt64_idítôy
 (x)

	)

55 
	#htobe16
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

56 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

57 
	#be16toh
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

58 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

60 
	#htobe32
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

61 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

62 
	#be32toh
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

63 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

65 
	#htobe64
(
x
Ë
	`__uöt64_idítôy
 (x)

	)

66 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

67 
	#be64toh
(
x
Ë
	`__uöt64_idítôy
 (x)

	)

68 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

126 #unde‡
__USE_ISOC11


127 #unde‡
__USE_ISOC99


128 #unde‡
__USE_ISOC95


129 #unde‡
__USE_ISOCXX11


130 #unde‡
__USE_POSIX


131 #unde‡
__USE_POSIX2


132 #unde‡
__USE_POSIX199309


133 #unde‡
__USE_POSIX199506


134 #unde‡
__USE_XOPEN


135 #unde‡
__USE_XOPEN_EXTENDED


136 #unde‡
__USE_UNIX98


137 #unde‡
__USE_XOPEN2K


138 #unde‡
__USE_XOPEN2KXSI


139 #unde‡
__USE_XOPEN2K8


140 #unde‡
__USE_XOPEN2K8XSI


141 #unde‡
__USE_LARGEFILE


142 #unde‡
__USE_LARGEFILE64


143 #unde‡
__USE_FILE_OFFSET64


144 #unde‡
__USE_MISC


145 #unde‡
__USE_ATFILE


146 #unde‡
__USE_DYNAMIC_STACK_SIZE


147 #unde‡
__USE_GNU


148 #unde‡
__USE_FORTIFY_LEVEL


149 #unde‡
__KERNEL_STRICT_NAMES


150 #unde‡
__GLIBC_USE_ISOC2X


151 #unde‡
__GLIBC_USE_DEPRECATED_GETS


152 #unde‡
__GLIBC_USE_DEPRECATED_SCANF


156 #i‚de‡
_LOOSE_KERNEL_NAMES


157 
	#__KERNEL_STRICT_NAMES


	)

167 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


168 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

169 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

171 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

178 #i‡
deföed
 
__˛™g_maj‹__
 && deföed 
__˛™g_mö‹__


179 
	#__glibc_˛™g_¥îeq
(
maj
, 
mö
) \

180 ((
__˛™g_maj‹__
 << 16Ë+ 
__˛™g_mö‹__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

182 
	#__glibc_˛™g_¥îeq
(
maj
, 
mö
Ë0

	)

186 
	#__GLIBC_USE
(
F
Ë
__GLIBC_USE_
 ## 
	)
F

192 #i‡(
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE
) \

193 && !
deföed
 
	g_DEFAULT_SOURCE


195 #unde‡
_DEFAULT_SOURCE


196 
	#_DEFAULT_SOURCE
 1

	)

200 #ifde‡
_GNU_SOURCE


201 #unde‡
_ISOC95_SOURCE


202 
	#_ISOC95_SOURCE
 1

	)

203 #unde‡
_ISOC99_SOURCE


204 
	#_ISOC99_SOURCE
 1

	)

205 #unde‡
_ISOC11_SOURCE


206 
	#_ISOC11_SOURCE
 1

	)

207 #unde‡
_ISOC2X_SOURCE


208 
	#_ISOC2X_SOURCE
 1

	)

209 #unde‡
_POSIX_SOURCE


210 
	#_POSIX_SOURCE
 1

	)

211 #unde‡
_POSIX_C_SOURCE


212 
	#_POSIX_C_SOURCE
 200809L

	)

213 #unde‡
_XOPEN_SOURCE


214 
	#_XOPEN_SOURCE
 700

	)

215 #unde‡
_XOPEN_SOURCE_EXTENDED


216 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

217 #unde‡
_LARGEFILE64_SOURCE


218 
	#_LARGEFILE64_SOURCE
 1

	)

219 #unde‡
_DEFAULT_SOURCE


220 
	#_DEFAULT_SOURCE
 1

	)

221 #unde‡
_ATFILE_SOURCE


222 
	#_ATFILE_SOURCE
 1

	)

223 #unde‡
_DYNAMIC_STACK_SIZE_SOURCE


224 
	#_DYNAMIC_STACK_SIZE_SOURCE
 1

	)

229 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

230 || (!
deföed
 
	g__STRICT_ANSI__
 \

231 && !
deföed
 
	g_ISOC99_SOURCE
 && !deföed 
	g_ISOC11_SOURCE
 \

232 && !
deföed
 
	g_ISOC2X_SOURCE
 \

233 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

234 && !
deföed
 
	g_XOPEN_SOURCE
))

235 #unde‡
_DEFAULT_SOURCE


236 
	#_DEFAULT_SOURCE
 1

	)

240 #i‡(
deföed
 
_ISOC2X_SOURCE
 \

241 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ > 201710L))

242 
	#__GLIBC_USE_ISOC2X
 1

	)

244 
	#__GLIBC_USE_ISOC2X
 0

	)

248 #i‡(
deföed
 
_ISOC11_SOURCE
 || deföed 
_ISOC2X_SOURCE
 \

249 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

250 
	#__USE_ISOC11
 1

	)

254 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

255 || 
deföed
 
_ISOC2X_SOURCE
 \

256 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

257 
	#__USE_ISOC99
 1

	)

261 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

262 || 
deföed
 
_ISOC2X_SOURCE
 \

263 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

264 
	#__USE_ISOC95
 1

	)

267 #ifde‡
__˝lu•lus


269 #i‡
__˝lu•lus
 >= 201703L

270 
	#__USE_ISOC11
 1

	)

274 #i‡
__˝lu•lus
 >201103L || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__


275 
	#__USE_ISOCXX11
 1

	)

276 
	#__USE_ISOC99
 1

	)

283 #ifde‡
_DEFAULT_SOURCE


284 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


285 
	#__USE_POSIX_IMPLICITLY
 1

	)

287 #unde‡
_POSIX_SOURCE


288 
	#_POSIX_SOURCE
 1

	)

289 #unde‡
_POSIX_C_SOURCE


290 
	#_POSIX_C_SOURCE
 200809L

	)

293 #i‡((!
deföed
 
__STRICT_ANSI__
 \

294 || (
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) >= 500)) \

295 && !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

296 
	#_POSIX_SOURCE
 1

	)

297 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

298 
	#_POSIX_C_SOURCE
 2

	)

299 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

300 
	#_POSIX_C_SOURCE
 199506L

	)

301 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

302 
	#_POSIX_C_SOURCE
 200112L

	)

304 
	#_POSIX_C_SOURCE
 200809L

	)

306 
	#__USE_POSIX_IMPLICITLY
 1

	)

315 #i‡((!
deföed
 
_POSIX_C_SOURCE
 || (_POSIX_C_SOURCE - 0) < 199506L) \

316 && (
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE
))

317 
	#_POSIX_SOURCE
 1

	)

318 #unde‡
_POSIX_C_SOURCE


319 
	#_POSIX_C_SOURCE
 199506L

	)

322 #i‡(
deföed
 
_POSIX_SOURCE
 \

323 || (
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >= 1) \

324 || 
deföed
 
_XOPEN_SOURCE
)

325 
	#__USE_POSIX
 1

	)

328 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


329 
	#__USE_POSIX2
 1

	)

332 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199309L

333 
	#__USE_POSIX199309
 1

	)

336 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199506L

337 
	#__USE_POSIX199506
 1

	)

340 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200112L

341 
	#__USE_XOPEN2K
 1

	)

342 #unde‡
__USE_ISOC95


343 
	#__USE_ISOC95
 1

	)

344 #unde‡
__USE_ISOC99


345 
	#__USE_ISOC99
 1

	)

348 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200809L

349 
	#__USE_XOPEN2K8
 1

	)

350 #unde‡
_ATFILE_SOURCE


351 
	#_ATFILE_SOURCE
 1

	)

354 #ifdef 
_XOPEN_SOURCE


355 
	#__USE_XOPEN
 1

	)

356 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

357 
	#__USE_XOPEN_EXTENDED
 1

	)

358 
	#__USE_UNIX98
 1

	)

359 #unde‡
_LARGEFILE_SOURCE


360 
	#_LARGEFILE_SOURCE
 1

	)

361 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

362 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

363 
	#__USE_XOPEN2K8
 1

	)

364 
	#__USE_XOPEN2K8XSI
 1

	)

366 
	#__USE_XOPEN2K
 1

	)

367 
	#__USE_XOPEN2KXSI
 1

	)

368 #unde‡
__USE_ISOC95


369 
	#__USE_ISOC95
 1

	)

370 #unde‡
__USE_ISOC99


371 
	#__USE_ISOC99
 1

	)

374 #ifde‡
_XOPEN_SOURCE_EXTENDED


375 
	#__USE_XOPEN_EXTENDED
 1

	)

380 #ifde‡
_LARGEFILE_SOURCE


381 
	#__USE_LARGEFILE
 1

	)

384 #ifde‡
_LARGEFILE64_SOURCE


385 
	#__USE_LARGEFILE64
 1

	)

388 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

389 
	#__USE_FILE_OFFSET64
 1

	)

392 
	~<„©uªs-time64.h
>

394 #i‡
deföed
 
_DEFAULT_SOURCE


395 
	#__USE_MISC
 1

	)

398 #ifdef 
_ATFILE_SOURCE


399 
	#__USE_ATFILE
 1

	)

402 #ifdef 
_DYNAMIC_STACK_SIZE_SOURCE


403 
	#__USE_DYNAMIC_STACK_SIZE
 1

	)

406 #ifdef 
_GNU_SOURCE


407 
	#__USE_GNU
 1

	)

410 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0

411 #i‡!
deföed
 
__OPTIMIZE__
 || __OPTIMIZE__ <= 0

412 #ñi‡!
__GNUC_PREREQ
 (4, 1)

413 #ñi‡
_FORTIFY_SOURCE
 > 2 && (
__glibc_˛™g_¥îeq
 (9, 0) \

414 || 
	$__GNUC_PREREQ
 (12, 0))

416 #i‡
_FORTIFY_SOURCE
 > 3

418 
	#__USE_FORTIFY_LEVEL
 3

	)

419 #ñi‡
_FORTIFY_SOURCE
 > 1

420 #i‡
_FORTIFY_SOURCE
 > 2

422 
	#__USE_FORTIFY_LEVEL
 2

	)

424 
	#__USE_FORTIFY_LEVEL
 1

	)

427 #i‚de‡
__USE_FORTIFY_LEVEL


428 
	#__USE_FORTIFY_LEVEL
 0

	)

435 #i‡
deföed
 
__˝lu•lus
 ? __˝lu•lu†>201402L : deföed 
__USE_ISOC11


436 
	#__GLIBC_USE_DEPRECATED_GETS
 0

	)

438 
	#__GLIBC_USE_DEPRECATED_GETS
 1

	)

453 #i‡(
deföed
 
__USE_GNU
 \

454 && (
deföed
 
__˝lu•lus
 \

455 ? (
__˝lu•lus
 < 201103L && !
deföed
 
__GXX_EXPERIMENTAL_CXX0X__
) \

456 : (!
deföed
 
__STDC_VERSION__
 || __STDC_VERSION__ < 199901L)))

457 
	#__GLIBC_USE_DEPRECATED_SCANF
 1

	)

459 
	#__GLIBC_USE_DEPRECATED_SCANF
 0

	)

464 
	~<°dc-¥edef.h
>

472 #unde‡
__GNU_LIBRARY__


473 
	#__GNU_LIBRARY__
 6

	)

477 
	#__GLIBC__
 2

	)

478 
	#__GLIBC_MINOR__
 35

	)

480 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

481 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

484 #i‚de‡
__ASSEMBLER__


485 #i‚de‡
_SYS_CDEFS_H


486 
	~<sys/cdefs.h
>

491 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


492 
	#__USE_LARGEFILE
 1

	)

493 
	#__USE_LARGEFILE64
 1

	)

499 #i‡
	`__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

500 && !
deföed
 
__OPTIMIZE_SIZE__
 && !deföed 
__NO_INLINE__
 \

501 && 
deföed
 
__exã∫_ölöe


502 
	#__USE_EXTERN_INLINES
 1

	)

510 
	~<gnu/°ubs.h
>

	@/usr/include/sched.h

19 #i‚def 
_SCHED_H


20 
	#_SCHED_H
 1

	)

22 
	~<„©uªs.h
>

25 
	~<bôs/ty≥s.h
>

27 
	#__√ed_size_t


	)

28 
	#__√ed_NULL


	)

29 
	~<°ddef.h
>

31 
	~<bôs/ty≥s/time_t.h
>

32 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

33 #i‚de‡
__USE_XOPEN2K


34 
	~<time.h
>

37 #i‚de‡
__pid_t_deföed


38 
__pid_t
 
	tpid_t
;

39 
	#__pid_t_deföed


	)

43 
	~<bôs/sched.h
>

44 
	~<bôs/˝u-£t.h
>

47 
	#sched_¥i‹ôy
 
sched_¥i‹ôy


	)

48 
	#__sched_¥i‹ôy
 
sched_¥i‹ôy


	)

51 
__BEGIN_DECLS


54 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, c⁄° 
sched_∑øm
 *
__∑øm
)

55 
__THROW
;

58 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

61 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

62 c⁄° 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

65 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

68 
	$sched_yõld
 (Ë
__THROW
;

71 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

74 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

77 #i‚de‡
__USE_TIME_BITS64


78 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

80 #ifde‡
__REDIRECT_NTH


81 
	`__REDIRECT_NTH
 (
sched_º_gë_öãrvÆ
,

82 (
__pid_t
 
__pid
, 
time•ec
 *
__t
),

83 
__sched_º_gë_öãrvÆ64
);

85 
	#sched_º_gë_öãrvÆ
 
__sched_º_gë_öãrvÆ64


	)

89 #ifde‡
__USE_GNU


91 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

92 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

93 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

94 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

95 
˝u£ç
)

	)

96 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

97 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

99 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

100 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

101 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

102 
˝u£ç
)

	)

103 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

104 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

106 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

107 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

108 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

109 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

111 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

112 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

113 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

114 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

115 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

116 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

117 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

118 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

119 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

120 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

121 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

122 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

124 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

125 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

126 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

130 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

131 c⁄° 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

134 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

135 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

138 
__END_DECLS


	@/usr/include/strings.h

18 #i‚def 
_STRINGS_H


19 
	#_STRINGS_H
 1

	)

21 
	~<„©uªs.h
>

22 
	#__√ed_size_t


	)

23 
	~<°ddef.h
>

26 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

27 
	#__CORRECT_ISO_CPP_STRINGS_H_PROTO


	)

30 
	g__BEGIN_DECLS


32 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


34 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

35 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

38 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

39 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

42 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

45 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


48 *
	`ödex
 (*
__s
, 
__c
)

49 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

50 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

51 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

53 #i‡
deföed
 
__OPTIMIZE__


54 
__exã∫_Æways_ölöe
 *

55 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


57  
	`__buûtö_ödex
 (
__s
, 
__c
);

60 
__exã∫_Æways_ölöe
 const *

61 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


63  
	`__buûtö_ödex
 (
__s
, 
__c
);

66 
	}
}

68 *
	$ödex
 (c⁄° *
__s
, 
__c
)

69 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

73 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


76 *
	`rödex
 (*
__s
, 
__c
)

77 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

78 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

79 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

81 #i‡
deföed
 
__OPTIMIZE__


82 
__exã∫_Æways_ölöe
 *

83 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


85  
	`__buûtö_rödex
 (
__s
, 
__c
);

88 
__exã∫_Æways_ölöe
 const *

89 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


91  
	`__buûtö_rödex
 (
__s
, 
__c
);

94 
	}
}

96 *
	$rödex
 (c⁄° *
__s
, 
__c
)

97 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

101 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8
 || deföed 
__USE_XOPEN2K8XSI


104 
	$ffs
 (
__i
Ë
__THROW
 
__©åibuã_c⁄°__
;

109 #ifdef 
__USE_MISC


110 
	$ff¶
 (
__l
Ë
__THROW
 
__©åibuã_c⁄°__
;

111 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

112 
__THROW
 
__©åibuã_c⁄°__
;

116 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

117 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

120 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

121 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

123 #ifdef 
__USE_XOPEN2K8


125 
	~<bôs/ty≥s/loˇÀ_t.h
>

128 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
loˇÀ_t
 
__loc
)

129 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

133 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

134 
size_t
 
__n
, 
loˇÀ_t
 
__loc
)

135 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

138 
__END_DECLS


140 #i‡
	`__GNUC_PREREQ
 (3,4Ë&& 
__USE_FORTIFY_LEVEL
 > 0 \

141 && 
deföed
 
__f‹tify_fun˘i⁄


143 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


144 
	~<bôs/°rögs_f‹tifõd.h
>

	@/usr/include/features-time64.h

20 
	~<bôs/w‹dsize.h
>

21 
	~<bôs/timesize.h
>

23 #i‡
deföed
 
_TIME_BITS


24 #i‡
_TIME_BITS
 == 64

25 #i‡! 
deföed
 (
_FILE_OFFSET_BITS
) || _FILE_OFFSET_BITS != 64

27 #ñi‡
__TIMESIZE
 == 32

28 
	#__USE_TIME_BITS64
 1

	)

30 #ñi‡
_TIME_BITS
 == 32

31 #i‡
__TIMESIZE
 > 32

35 #îr‹ 
InvÆid
 
_TIME_BITS
 
vÆue
 (
ˇn
 
⁄ly
 
be
 32 
‹
 64-
bô
)

	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

39 
	#__STDC_IEC_60559_BFP__
 201404L

	)

42 
	#__STDC_IEC_559__
 1

	)

43 
	#__STDC_IEC_60559_BFP__
 201404L

	)

46 #ifde‡
__GCC_IEC_559_COMPLEX


47 #i‡
__GCC_IEC_559_COMPLEX
 > 0

48 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_60559_COMPLEX__
 201404L

	)

52 
	#__STDC_IEC_559_COMPLEX__
 1

	)

53 
	#__STDC_IEC_60559_COMPLEX__
 201404L

	)

62 
	#__STDC_ISO_10646__
 201706L

	)

	@
1
.
1
/usr/include
81
2095
Client/Common/Common.c
Client/Common/Common.h
Client/Common/List.h
Client/Common/cJSON.c
Client/Common/cJSON.h
Client/Common/libb64/include/b64/cdecode.h
Client/Common/libb64/include/b64/cencode.h
Client/Common/libb64/src/cdecode.c
Client/Common/libb64/src/cencode.c
Client/Service/Account_Srv.c
Client/Service/Account_Srv.h
Client/Service/Chat_Srv.c
Client/Service/Chat_Srv.h
Client/Service/Connect.c
Client/Service/Connect.h
Client/Service/Friends_Srv.c
Client/Service/Friends_Srv.h
Client/Service/Group_Srv.c
Client/Service/Group_Srv.h
Client/View/Account_UI.c
Client/View/Account_UI.h
Client/View/Chat_UI.c
Client/View/Chat_UI.h
Client/View/Friends_UI.c
Client/View/Friends_UI.h
Client/View/Group_UI.c
Client/View/Group_UI.h
Client/View/Main_UI.c
Client/View/Main_UI.h
Client/chat_room_cli.c
Server/Common/Common.c
Server/Common/Common.h
Server/Common/List.h
Server/Common/cJSON.c
Server/Common/cJSON.h
Server/Persistence/Account_Persist.c
Server/Persistence/Account_Persist.h
Server/Persistence/Chat_Persist.c
Server/Persistence/Chat_Persist.h
Server/Persistence/Friends_Persist.c
Server/Persistence/Friends_Persist.h
Server/Persistence/Group_Persist.c
Server/Persistence/Group_Persist.h
Server/Persistence/MySQL.c
Server/Persistence/MySQL.h
Server/Service/Account_Srv.c
Server/Service/Account_Srv.h
Server/Service/Chat_Srv.c
Server/Service/Chat_Srv.h
Server/Service/Connect.c
Server/Service/Connect.h
Server/Service/Friends_Srv.c
Server/Service/Friends_Srv.h
Server/Service/Group_Srv.c
Server/Service/Group_Srv.h
Server/chat_room_srv.c
config/cJSON.c
config/cJSON.h
config/config.c
/usr/include/arpa/inet.h
/usr/include/assert.h
/usr/include/ctype.h
/usr/include/fcntl.h
/usr/include/libgen.h
/usr/include/limits.h
/usr/include/linux/socket.h
/usr/include/math.h
/usr/include/netinet/in.h
/usr/include/pthread.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/alloca.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/sched.h
/usr/include/strings.h
/usr/include/features-time64.h
/usr/include/stdc-predef.h
